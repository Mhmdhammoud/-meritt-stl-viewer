{"version":3,"sources":["webpack:///react-bundle.js","webpack:///webpack/bootstrap 6fdd63fcd3b561c9fe70","webpack:///./react/app.js","webpack:///./~/react/index.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/index.js","webpack:///./react/containers/App.js","webpack:///./src/Paint.js","webpack:///./src/STLViewer.js","webpack:///./src/Three.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/index.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./~/three-orbit-controls/index.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_App","_App2","ReactDOM","render","createElement","document","getElementById","toObject","val","undefined","TypeError","Object","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","arguments","length","key","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_STLViewer","_STLViewer2","App","_Component","this","_this","getPrototypeOf","onChange","_ref","files","reader","FileReader","readAsArrayBuffer","onload","setState","model","result","state","color","clickBlue","bind","clickRed","e","preventDefault","type","modelColor","lights","rotate","onClick","Component","_toConsumableArray","arr","Array","isArray","arr2","_Three","_Three2","OrbitControls","THREE","DIRECTIONAL_LIGHT","Paint","loader","STLLoader","scene","Scene","renderer","WebGLRenderer","antialias","reqNumber","context","component","width","height","backgroundColor","orbitControls","cameraX","cameraY","cameraZ","rotationSpeeds","lightColor","mesh","remove","geometry","dispose","material","grid","directionalLightObj","getObjectByName","animationRequestId","cancelAnimationFrame","distance","hasMultipleLights","reduce","acc","item","addLight","addSTLToScene","_directionalLight$pos","index","directionalLight","DirectionalLight","position","set","apply","name","normalize","add","url","reqId","Promise","resolve","crossOrigin","loadFromUrl","file","_this2","loadFromFile","_this3","loadPromise","loadSTLFromUrl","ArrayBuffer","then","computeFaceNormals","computeVertexNormals","center","MeshLambertMaterial","overdraw","hasColors","MeshPhongMaterial","opacity","alpha","vertexColors","VertexColors","Mesh","computeBoundingBox","xDims","boundingBox","max","x","min","yDims","y","zDims","z","rotation","addCamera","addInteractionControls","addToReactComponent","animate","camera","PerspectiveCamera","Math","lookAt","physicallyCorrectLights","setSize","setClearColor","controls","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","requestAnimationFrame","update","forceContextLoss","_propTypes","_propTypes2","_Paint","_Paint2","STLViewer","paint","init","nextProps","nextState","JSON","stringify","clean","_props","className","style","overflow","display","justifyContent","alignItems","propTypes","PropTypes","string","number","bool","array","arrayOf","oneOfType","instanceOf","isRequired","defaultProps","manager","DefaultLoadingManager","onLoad","onProgress","onError","scope","XHRLoader","setCrossOrigin","setResponseType","load","text","parse","buffer","data","isBinary","expect","face_size","n_faces","DataView","binData","getUint32","byteLength","fileLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","r","g","b","colors","defaultR","defaultG","defaultB","faces","Float32Array","dataOffset","faceLength","offset","BufferGeometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","addAttribute","BufferAttribute","normal","patternFace","patternNormal","patternVertex","Geometry","exec","Vector3","parseFloat","push","Face3","computeBoundingSphere","buf","array_buffer","Uint8Array","str","charCodeAt","byteOffset","_isString","_getCharCodes","end","codes","_getBytes","littleEndian","_littleEndian","Error","isString","slice","reverse","getFloat64","sign","exponent","mantissa","pow","NaN","Infinity","getInt32","getInt16","getInt8","emptyFunction","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","func","object","symbol","any","element","node","objectOf","oneOf","shape","exact","checkPropTypes","a","encodeURIComponent","da","ea","ca","ba","la","ia","ka","ja","ha","test","ma","d","acceptsBooleans","toLowerCase","na","isNaN","B","f","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","pa","toUpperCase","qa","D","removeAttribute","setAttribute","setAttributeNS","La","Ka","Na","Ma","stack","trim","match","Pa","Oa","prepareStackTrace","Reflect","construct","k","h","replace","displayName","Qa","tag","_render","Ra","ua","ta","xa","wa","Ba","Ca","$$typeof","za","ya","_context","Aa","Da","Fa","Ea","_payload","_init","Sa","Ta","nodeName","Ua","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","_valueTracker","Va","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","db","aa","Children","eb","children","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","lb","mb","pb","lastChild","nodeType","nodeValue","sb","qb","tb","indexOf","setProperty","vb","ub","wb","is","xb","srcElement","window","correspondingUseElement","parentNode","Bb","Cb","yb","stateNode","Db","Eb","zb","Ab","Fb","Gb","Hb","Ib","Mb","Nb","Lb","Jb","Ob","Rb","l","Xb","Sb","Tb","Wb","Yb","Ub","Vb","Zb","alternate","return","flags","$b","memoizedState","dehydrated","ac","bc","child","sibling","current","cc","dc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","kc","lc","mc","nc","delete","pointerId","oc","tc","fc","uc","vc","wc","hc","lanePriority","unstable_runWithPriority","priority","gc","hydrate","containerInfo","xc","yc","shift","zc","Ac","ic","jc","ec","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","pc","Dc","Hc","Fc","Ec","Gc","Pc","Nc","Mc","Rc","F","Sc","Tc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","ad","bd","cd","gd","Kb","hd","ed","dd","fd","qc","jd","nd","md","ld","kd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","stopPropagation","cancelBubble","persist","isPersistent","Pd","getModifierState","Od","zd","ge","$d","he","detail","je","which","fe","ee","ke","ie","ae","ctrlKey","altKey","metaKey","char","de","locale","me","le","ne","oe","td","event","listeners","re","se","te","ue","ve","Ae","pe","detachEvent","Be","qe","Ce","attachEvent","De","Ee","Fe","Ge","Je","He","Ie","Ke","Le","nextSibling","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Ue","Te","Qe","selectionStart","selectionEnd","defaultView","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Se","Re","Ze","listener","G","$e","has","af","cf","bf","Ye","df","Pb","capture","passive","Rd","Fd","button","Bd","Dd","Vd","Ic","Jc","Kc","Hd","Lc","Xd","vd","Zd","Jd","Td","w","u","q","t","v","ef","relatedTarget","fromElement","ff","parentWindow","toElement","gf","hf","J","we","K","Pe","Q","L","Ld","ce","unshift","jf","mf","autoFocus","nf","__html","qf","rf","sf","previousSibling","uf","Ga","toString","valueOf","wf","xf","yf","Set","Bf","H","Af","zf","I","Ef","contextTypes","Cf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","N","M","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Df","Kf","eg","Tf","Uf","Vf","Wf","Xf","Yf","fg","gg","Nf","hg","Of","ig","bg","Pf","jg","cg","ag","lg","qg","pg","og","ng","rg","mg","_currentValue","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","next","responders","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","wg","A","C","Dg","Eg","Gg","Lg","shouldComponentUpdate","isPureReactComponent","Mg","contextType","updater","Kg","_reactInternals","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","Og","refs","Fg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Qg","ref","_owner","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Map","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","sa","Pg","done","dh","$g","eh","ch","bh","ah","documentElement","namespaceURI","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","mh","nh","oh","pendingProps","ph","lh","kh","jh","qh","rh","sh","uh","th","_workInProgressVersionPrimary","Ah","Bh","Ch","xh","R","vh","Dh","Eh","zh","T","S","Fh","Gh","yh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","U","useState","getSnapshot","subscribe","useEffect","setSnapshot","Ig","Oh","Ph","Qh","Rh","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","concat","ai","bi","ci","di","wh","transition","Hg","Jg","fi","Zg","Yg","gi","hi","ii","ji","compare","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","qi","ei","getDerivedStateFromError","ri","pendingContext","ti","P","fallback","unstable_avoidThisFallback","ui","si","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","Ci","Di","Xe","wasMultiple","multiple","onclick","kb","html","innerHTML","removeChild","size","createElementNS","Bi","ob","Ei","createTextNode","V","Hi","Ii","W","O","Ji","Ki","Li","Mi","message","Ni","setTimeout","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","bj","Mf","onCommitFiberUnmount","Lf","componentWillUnmount","cj","dj","ej","fj","gj","hj","insertBefore","appendChild","_reactRootContainer","ij","jj","kj","Ui","lj","mj","wj","X","Fj","Gj","tj","kg","Hj","vj","Dj","Ej","Kj","Lj","Mj","Cj","callbackNode","expirationTimes","Zf","callbackPriority","Nj","Oj","Pj","Qj","Rj","Sj","oj","Y","Tj","sj","finishedWork","finishedLanes","Uj","timeoutHandle","of","nj","uj","Vj","Wj","Xj","rj","qj","pf","pj","pingCache","Oi","Yj","Zj","va","ak","bk","Qf","ck","dk","yj","kf","rangeCount","lf","focusedElem","selectionRange","Ij","Jj","Z","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","$f","xj","zj","onCommitFiberRoot","fk","Aj","Bj","gk","ik","isReactComponent","hk","Ha","Ia","Ja","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","retryLane","ok","pk","qk","hydrationOptions","mutableSources","_internalRoot","rk","sk","hasAttribute","tk","uk","fa","oa","xlinkHref","ra","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","Symbol","for","E","nb","iterator","mathml","svg","MSApp","execUnsafeLocalFunction","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","rb","charAt","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","Qb","removeEventListener","animationend","animationiteration","animationstart","transitionend","animation","Oc","Qc","unstable_now","wd","xd","yd","clz32","log","LN2","unstable_UserBlockingPriority","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","ud","view","Ad","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","buttons","movementX","movementY","Cd","dataTransfer","Ed","Gd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Kd","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Alt","Control","Meta","Shift","Qd","code","repeat","Sd","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Ud","touches","targetTouches","changedTouches","Wd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","be","documentMode","date","datetime","datetime-local","email","month","password","range","search","tel","time","week","xe","ye","ze","oninput","Ve","We","random","clearTimeout","tf","vf","unstable_cancelCallback","unstable_shouldYield","Rf","unstable_requestPaint","Sf","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_LowPriority","unstable_IdlePriority","dg","ReactCurrentBatchConfig","isMounted","enqueueSetState","enqueueForceUpdate","ReactCurrentDispatcher","readContext","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","ReactCurrentOwner","WeakMap","WeakSet","ceil","_calculateChangedBits","unstable_observedBits","unmount","querySelectorAll","form","vk","Events","wk","findFiberByHostInstance","bundleType","version","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","escape","=",":","_status","_result","Fragment","StrictMode","Profiler","Suspense","forceUpdate","__self","__source","IsSomeRendererActing","count","toArray","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","createFactory","createRef","forwardRef","isValidElement","lazy","memo","pop","sortIndex","startTime","expirationTime","priorityLevel","performance","MessageChannel","unstable_forceFrameRate","floor","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","OrbitConstraint","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","matrix","elements","multiplyScalar","panUp","pan","screenWidth","screenHeight","clone","sub","targetDistance","tan","fov","OrthographicCamera","right","bottom","warn","dollyIn","dollyScale","updateProjectionMatrix","dollyOut","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","copy","applyQuaternion","atan2","sqrt","radius","sin","cos","distanceToSquared","dot","quaternion","constraint","clientWidth","clientHeight","getAutoRotationAngle","autoRotateSpeed","getZoomScale","zoomSpeed","onMouseDown","enabled","mouseButtons","ORBIT","enableRotate","STATE","ROTATE","rotateStart","ZOOM","enableZoom","DOLLY","dollyStart","PAN","enablePan","panStart","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","rotateEnd","rotateDelta","subVectors","rotateSpeed","dollyEnd","dollyDelta","panEnd","panDelta","endEvent","onMouseWheel","delta","onKeyDown","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","dx","dy","TOUCH_PAN","touchmove","touchend","contextmenu","autoRotate","MOUSE","MIDDLE","Vector2","target0","position0","zoom0","changeEvent","reset","EventDispatcher","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","lastTime","vendors","currTime","timeToCall","Function","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","clear","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","euclideanModulo","clamp","parseAlpha","strAlpha","components","parseInt","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","getStyle","offsetHSL","addColors","color1","color2","addScalar","multiply","lerp","equals","fromArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","v1","vFrom","vTo","abs","crossVectors","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","slerp","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","qm","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","round","roundToZero","negate","lengthManhattan","distanceTo","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","attributes","positions","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Clock","autoStart","oldTime","running","stop","getElapsedTime","getDelta","newTime","hasEventListener","_listeners","listenerArray","splice","descSort","Raycaster","params","Line","LOD","Points","threshold","Sprite","PointCloud","intersectObject","raycaster","intersects","recursive","visible","raycast","linePrecision","setFromCamera","sort","intersectObjects","objects","Object3D","Object3DIdCount","parent","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","extractFromCache","cache","values","metadata","isRootObject","geometries","materials","textures","images","generator","output","materialIndex","vertexNormals","Face4","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","fromBufferGeometry","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","getAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","AmbientLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","shadowCameraFov","Cache","Loader","onLoadStart","onLoadProgress","onLoadComplete","extractUrlBase","parts","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","create_texture","where","sourceFile","wrap","anisotropy","texture","fullPath","Handlers","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","blending","transparent","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","regex","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","json","setTexturePath","parseModel","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","animations","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","property","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","substr","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","ret","extractGlyphPoints","paths","outline","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","args","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","centerUV","segment","heightHalf","verticesRow","uvsRow","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","rows","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"react-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(3);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(4);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('react-app'));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(12);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(11);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _STLViewer = __webpack_require__(6);\n\t\n\tvar _STLViewer2 = _interopRequireDefault(_STLViewer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.onChange = function (_ref) {\n\t      var target = _ref.target;\n\t      var files = target.files;\n\t\n\t      var reader = new FileReader();\n\t      reader.readAsArrayBuffer(files[0]);\n\t      reader.onload = function () {\n\t        _this.setState({ model: reader.result });\n\t      };\n\t    };\n\t\n\t    _this.state = {\n\t      color: 'rgba(255,0,48,0.2)',\n\t      model: undefined\n\t    };\n\t\n\t    _this.clickBlue = _this.clickBlue.bind(_this);\n\t    _this.clickRed = _this.clickRed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'clickBlue',\n\t    value: function clickBlue(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#0000FF' });\n\t    }\n\t  }, {\n\t    key: 'clickRed',\n\t    value: function clickRed(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#FF0000' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement('input', { id: 'image-file', type: 'file', onChange: this.onChange }),\n\t        _react2.default.createElement(_STLViewer2.default, {\n\t          modelColor: this.state.color,\n\t          lights: [1, 1],\n\t          rotate: true,\n\t          model: this.state.model\n\t        }),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickRed },\n\t          'red'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickBlue },\n\t          'blue'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Three = __webpack_require__(7);\n\t\n\tvar _Three2 = _interopRequireDefault(_Three);\n\t\n\tvar _reactDom = __webpack_require__(3);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OrbitControls = __webpack_require__(15)(_Three2.default);\n\t\n\tvar DIRECTIONAL_LIGHT = 'directionalLight';\n\t\n\tvar Paint = function () {\n\t  function Paint() {\n\t    _classCallCheck(this, Paint);\n\t\n\t    this.loader = new _Three2.default.STLLoader();\n\t    this.scene = new _Three2.default.Scene();\n\t    this.renderer = new _Three2.default.WebGLRenderer({\n\t      antialias: true\n\t    });\n\t    this.reqNumber = 0;\n\t  }\n\t\n\t  _createClass(Paint, [{\n\t    key: 'init',\n\t    value: function init(context) {\n\t      this.component = context;\n\t      this.width = context.props.width;\n\t      this.height = context.props.height;\n\t      this.modelColor = context.props.modelColor;\n\t      this.backgroundColor = context.props.backgroundColor;\n\t      this.orbitControls = context.props.orbitControls;\n\t      this.rotate = context.props.rotate;\n\t      this.cameraX = context.props.cameraX;\n\t      this.cameraY = context.props.cameraY;\n\t      this.cameraZ = context.props.cameraZ;\n\t      this.rotationSpeeds = context.props.rotationSpeeds;\n\t      this.lights = context.props.lights;\n\t      this.lightColor = context.props.lightColor;\n\t      this.model = context.props.model;\n\t\n\t      if (this.mesh !== undefined) {\n\t        this.scene.remove(this.mesh);\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.grid);\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t\n\t      //Detector.addGetWebGLMessage();\n\t      this.distance = 10000;\n\t\n\t      // lights processing\n\t      var hasMultipleLights = this.lights.reduce(function (acc, item) {\n\t        return acc && Array.isArray(item);\n\t      }, true);\n\t      if (hasMultipleLights) {\n\t        this.lights.forEach(this.addLight.bind(this));\n\t      } else {\n\t        this.addLight(this.lights);\n\t      }\n\t\n\t      this.reqNumber += 1;\n\t      this.addSTLToScene(this.reqNumber);\n\t    }\n\t  }, {\n\t    key: 'addLight',\n\t    value: function addLight(lights) {\n\t      var _directionalLight$pos;\n\t\n\t      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\n\t      var directionalLight = new _Three2.default.DirectionalLight(0xffffff, 0.5);\n\t      (_directionalLight$pos = directionalLight.position).set.apply(_directionalLight$pos, _toConsumableArray(lights));\n\t      directionalLight.name = DIRECTIONAL_LIGHT + index;\n\t      directionalLight.position.normalize();\n\t      this.scene.add(directionalLight);\n\t    }\n\t  }, {\n\t    key: 'loadSTLFromUrl',\n\t    value: function loadSTLFromUrl(url, reqId) {\n\t      var _this = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this.loader.crossOrigin = '';\n\t        _this.loader.loadFromUrl(url, function (geometry) {\n\t          if (_this.reqNumber !== reqId) {\n\t            return;\n\t          }\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(file) {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this2.loader.loadFromFile(file, function (geometry) {\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addSTLToScene',\n\t    value: function addSTLToScene(reqId) {\n\t      var _this3 = this;\n\t\n\t      var loadPromise = void 0;\n\t      if (typeof this.model === 'string') {\n\t        loadPromise = this.loadSTLFromUrl(this.model, reqId);\n\t      } else if (this.model instanceof ArrayBuffer) {\n\t        loadPromise = this.loadFromFile(this.model);\n\t      } else {\n\t        return Promise.resolve(null);\n\t      }\n\t      return loadPromise.then(function (geometry) {\n\t        // Calculate mesh noramls for MeshLambertMaterial.\n\t        geometry.computeFaceNormals();\n\t        geometry.computeVertexNormals();\n\t\n\t        // Center the object\n\t        geometry.center();\n\t\n\t        var material = new _Three2.default.MeshLambertMaterial({\n\t          overdraw: true,\n\t          color: _this3.modelColor\n\t        });\n\t\n\t        if (geometry.hasColors) {\n\t          material = new _Three2.default.MeshPhongMaterial({\n\t            opacity: geometry.alpha,\n\t            vertexColors: _Three2.default.VertexColors\n\t          });\n\t        }\n\t\n\t        _this3.mesh = new _Three2.default.Mesh(geometry, material);\n\t        // Set the object's dimensions\n\t        geometry.computeBoundingBox();\n\t        _this3.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t        _this3.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t        _this3.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\t\n\t        if (_this3.rotate) {\n\t          _this3.mesh.rotation.x = _this3.rotationSpeeds[0];\n\t          _this3.mesh.rotation.y = _this3.rotationSpeeds[1];\n\t          _this3.mesh.rotation.z = _this3.rotationSpeeds[2];\n\t        }\n\t\n\t        _this3.scene.add(_this3.mesh);\n\t\n\t        _this3.addCamera();\n\t        _this3.addInteractionControls();\n\t        _this3.addToReactComponent();\n\t\n\t        // Start the animation\n\t        _this3.animate();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addCamera',\n\t    value: function addCamera() {\n\t      // Add the camera\n\t      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\t\n\t      if (this.cameraZ === null) {\n\t        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n\t      }\n\t\n\t      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\t      var directionalLight = new _Three2.default.DirectionalLight(0xffffff, 0.5);\n\t      this.camera.add(directionalLight);\n\t      this.scene.add(this.camera);\n\t\n\t      this.camera.lookAt(this.mesh);\n\t\n\t      this.renderer.set;\n\t      this.renderer.physicallyCorrectLights = true;\n\t      this.renderer.setSize(this.width, this.height);\n\t      this.renderer.setClearColor(this.backgroundColor, 1);\n\t    }\n\t  }, {\n\t    key: 'addInteractionControls',\n\t    value: function addInteractionControls() {\n\t      // Add controls for mouse interaction\n\t      if (this.orbitControls) {\n\t        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n\t        this.controls.enableKeys = false;\n\t        this.controls.addEventListener('change', this.orbitRender.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addToReactComponent',\n\t    value: function addToReactComponent() {\n\t      // Add to the React Component\n\t      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n\t    }\n\t\n\t    /**\r\n\t     * Animate the scene\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      // note: three.js includes requestAnimationFrame shim\n\t      if (this.rotate) {\n\t        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n\t      }\n\t\n\t      if (this.orbitControls) {\n\t        this.controls.update();\n\t      }\n\t      this.render();\n\t    }\n\t\n\t    /**\r\n\t     * Render the scene after turning off the rotation\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'orbitRender',\n\t    value: function orbitRender() {\n\t      if (this.rotate) {\n\t        this.rotate = false;\n\t      }\n\t\n\t      this.render();\n\t    }\n\t\n\t    /**\r\n\t     * Deallocate Mesh, renderer context.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clean',\n\t    value: function clean() {\n\t      if (this.mesh !== undefined) {\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.mesh);\n\t        delete this.mesh;\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t      this.renderer.dispose();\n\t      this.renderer.forceContextLoss();\n\t    }\n\t\n\t    /**\r\n\t     * Render the scene\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.mesh && this.rotate) {\n\t        this.mesh.rotation.x += this.rotationSpeeds[0];\n\t        this.mesh.rotation.y += this.rotationSpeeds[1];\n\t        this.mesh.rotation.z += this.rotationSpeeds[2];\n\t      }\n\t\n\t      this.renderer.render(this.scene, this.camera);\n\t    }\n\t  }]);\n\t\n\t  return Paint;\n\t}();\n\t\n\texports.default = Paint;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(9);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Paint = __webpack_require__(5);\n\t\n\tvar _Paint2 = _interopRequireDefault(_Paint);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar STLViewer = function (_Component) {\n\t  _inherits(STLViewer, _Component);\n\t\n\t  function STLViewer() {\n\t    _classCallCheck(this, STLViewer);\n\t\n\t    return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(STLViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.paint = new _Paint2.default();\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillUpdate',\n\t    value: function componentWillUpdate(nextProps, nextState) {\n\t      this.props = nextProps;\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.paint.clean();\n\t      delete this.paint;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          modelColor = _props.modelColor;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.className,\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            overflow: 'hidden'\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            style: {\n\t              height: '100%',\n\t              display: 'flex',\n\t              justifyContent: 'center',\n\t              alignItems: 'center'\n\t            }\n\t          },\n\t          _react2.default.createElement('div', { className: 'spinner spinner-blue' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return STLViewer;\n\t}(_react.Component);\n\t\n\tSTLViewer.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  url: _propTypes2.default.string,\n\t  width: _propTypes2.default.number,\n\t  height: _propTypes2.default.number,\n\t  backgroundColor: _propTypes2.default.string,\n\t  modelColor: _propTypes2.default.string,\n\t  rotate: _propTypes2.default.bool,\n\t  orbitControls: _propTypes2.default.bool,\n\t  cameraX: _propTypes2.default.number,\n\t  cameraY: _propTypes2.default.number,\n\t  cameraZ: _propTypes2.default.number,\n\t  lights: _propTypes2.default.array,\n\t  lightColor: _propTypes2.default.string,\n\t  rotationSpeeds: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t  model: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(ArrayBuffer)]).isRequired\n\t};\n\tSTLViewer.defaultProps = {\n\t  backgroundColor: '#EAEAEA',\n\t  modelColor: '#B92C2C',\n\t  height: 400,\n\t  width: 400,\n\t  rotate: true,\n\t  orbitControls: true,\n\t  cameraX: 0,\n\t  cameraY: 0,\n\t  cameraZ: null,\n\t  lights: [0, 0, 1],\n\t  lightColor: '#ffffff',\n\t  rotationSpeeds: [0, 0, 0.02],\n\t  model: undefined\n\t};\n\t\n\t\n\tmodule.exports = STLViewer;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar THREE = __webpack_require__(16);\n\t\n\t//\n\t// STL Loader added\n\t//\n\t/**\r\n\t * @author aleeper / http://adamleeper.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author gero3 / https://github.com/gero3\r\n\t *\r\n\t * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\r\n\t *\r\n\t * Supports both binary and ASCII encoded files, with automatic detection of type.\r\n\t *\r\n\t * Limitations:\r\n\t *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\r\n\t *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\r\n\t *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\r\n\t *\r\n\t * Usage:\r\n\t *  var loader = new THREE.STLLoader();\r\n\t *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\r\n\t *    scene.add( new THREE.Mesh( geometry ) );\r\n\t *  });\r\n\t *\r\n\t * For binary STLs geometry might contain colors for vertices. To use it:\r\n\t *  // use the same code to load STL as above\r\n\t *  if (geometry.hasColors) {\r\n\t *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\r\n\t *  } else { .... }\r\n\t *  var mesh = new THREE.Mesh( geometry, material );\r\n\t */\n\t\n\tTHREE.STLLoader = function (manager) {\n\t  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\t};\n\t\n\tTHREE.STLLoader.prototype = {\n\t  constructor: THREE.STLLoader,\n\t\n\t  loadFromUrl: function loadFromUrl(url, onLoad, onProgress, onError) {\n\t    var scope = this;\n\t\n\t    var loader = new THREE.XHRLoader(scope.manager);\n\t    loader.setCrossOrigin(this.crossOrigin);\n\t    loader.setResponseType('arraybuffer');\n\t    loader.load(url, function (text) {\n\t      onLoad(scope.parse(text));\n\t    }, onProgress, onError);\n\t  },\n\t\n\t  loadFromFile: function loadFromFile(buffer, onLoad) {\n\t    var scope = this;\n\t    onLoad(scope.parse(buffer));\n\t  },\n\t\n\t  parse: function parse(data) {\n\t    var isBinary = function isBinary() {\n\t      var expect, face_size, n_faces, reader;\n\t      reader = new DataView(binData);\n\t      face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t      n_faces = reader.getUint32(80, true);\n\t      expect = 80 + 32 / 8 + n_faces * face_size;\n\t\n\t      if (expect === reader.byteLength) {\n\t        return true;\n\t      }\n\t\n\t      // some binary files will have different size from expected,\n\t      // checking characters higher than ASCII to confirm is binary\n\t      var fileLength = reader.byteLength;\n\t      for (var index = 0; index < fileLength; index++) {\n\t        if (reader.getUint8(index, false) > 127) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    };\n\t\n\t    var binData = this.ensureBinary(data);\n\t\n\t    return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n\t  },\n\t\n\t  parseBinary: function parseBinary(data) {\n\t    var reader = new DataView(data);\n\t    var faces = reader.getUint32(80, true);\n\t\n\t    var r,\n\t        g,\n\t        b,\n\t        hasColors = false,\n\t        colors;\n\t    var defaultR, defaultG, defaultB, alpha;\n\t\n\t    // process STL header\n\t    // check for default color in header (\"COLOR=rgba\" sequence).\n\t\n\t    for (var index = 0; index < 80 - 10; index++) {\n\t      if (reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ && reader.getUint8(index + 4) == 0x52 /*'R'*/ && reader.getUint8(index + 5) == 0x3d /*'='*/\n\t      ) {\n\t          hasColors = true;\n\t          colors = new Float32Array(faces * 3 * 3);\n\t\n\t          defaultR = reader.getUint8(index + 6) / 255;\n\t          defaultG = reader.getUint8(index + 7) / 255;\n\t          defaultB = reader.getUint8(index + 8) / 255;\n\t          alpha = reader.getUint8(index + 9) / 255;\n\t        }\n\t    }\n\t\n\t    var dataOffset = 84;\n\t    var faceLength = 12 * 4 + 2;\n\t\n\t    var offset = 0;\n\t\n\t    var geometry = new THREE.BufferGeometry();\n\t\n\t    var vertices = new Float32Array(faces * 3 * 3);\n\t    var normals = new Float32Array(faces * 3 * 3);\n\t\n\t    for (var face = 0; face < faces; face++) {\n\t      var start = dataOffset + face * faceLength;\n\t      var normalX = reader.getFloat32(start, true);\n\t      var normalY = reader.getFloat32(start + 4, true);\n\t      var normalZ = reader.getFloat32(start + 8, true);\n\t\n\t      if (hasColors) {\n\t        var packedColor = reader.getUint16(start + 48, true);\n\t\n\t        if ((packedColor & 0x8000) === 0) {\n\t          // facet has its own unique color\n\t\n\t          r = (packedColor & 0x1f) / 31;\n\t          g = (packedColor >> 5 & 0x1f) / 31;\n\t          b = (packedColor >> 10 & 0x1f) / 31;\n\t        } else {\n\t          r = defaultR;\n\t          g = defaultG;\n\t          b = defaultB;\n\t        }\n\t      }\n\t\n\t      for (var i = 1; i <= 3; i++) {\n\t        var vertexstart = start + i * 12;\n\t\n\t        vertices[offset] = reader.getFloat32(vertexstart, true);\n\t        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n\t        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\t\n\t        normals[offset] = normalX;\n\t        normals[offset + 1] = normalY;\n\t        normals[offset + 2] = normalZ;\n\t\n\t        if (hasColors) {\n\t          colors[offset] = r;\n\t          colors[offset + 1] = g;\n\t          colors[offset + 2] = b;\n\t        }\n\t\n\t        offset += 3;\n\t      }\n\t    }\n\t\n\t    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\t    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\t\n\t    if (hasColors) {\n\t      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n\t      geometry.hasColors = true;\n\t      geometry.alpha = alpha;\n\t    }\n\t\n\t    return geometry;\n\t  },\n\t\n\t  parseASCII: function parseASCII(data) {\n\t    var geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t    geometry = new THREE.Geometry();\n\t    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\n\t    while ((result = patternFace.exec(data)) !== null) {\n\t      text = result[0];\n\t      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternNormal.exec(text)) !== null) {\n\t        normal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n\t      }\n\t\n\t      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternVertex.exec(text)) !== null) {\n\t        geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\n\t      }\n\t\n\t      length = geometry.vertices.length;\n\t\n\t      geometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, normal));\n\t    }\n\t\n\t    geometry.computeBoundingBox();\n\t    geometry.computeBoundingSphere();\n\t\n\t    return geometry;\n\t  },\n\t\n\t  ensureString: function ensureString(buf) {\n\t    if (typeof buf !== 'string') {\n\t      var array_buffer = new Uint8Array(buf);\n\t      var str = '';\n\t      for (var i = 0; i < buf.byteLength; i++) {\n\t        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t      }\n\t      return str;\n\t    } else {\n\t      return buf;\n\t    }\n\t  },\n\t\n\t  ensureBinary: function ensureBinary(buf) {\n\t    if (typeof buf === 'string') {\n\t      var array_buffer = new Uint8Array(buf.length);\n\t      for (var i = 0; i < buf.length; i++) {\n\t        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t      }\n\t      return array_buffer.buffer || array_buffer;\n\t    } else {\n\t      return buf;\n\t    }\n\t  }\n\t};\n\t\n\tif (typeof DataView === 'undefined') {\n\t  DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    this.buffer = buffer;\n\t    this.byteOffset = byteOffset || 0;\n\t    this.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t    this._isString = typeof buffer === 'string';\n\t  };\n\t\n\t  DataView.prototype = {\n\t    _getCharCodes: function _getCharCodes(buffer, start, length) {\n\t      start = start || 0;\n\t      length = length || buffer.length;\n\t      var end = start + length;\n\t      var codes = [];\n\t      for (var i = start; i < end; i++) {\n\t        codes.push(buffer.charCodeAt(i) & 0xff);\n\t      }\n\t      return codes;\n\t    },\n\t\n\t    _getBytes: function _getBytes(length, byteOffset, littleEndian) {\n\t      var result;\n\t\n\t      // Handle the lack of endianness\n\t      if (littleEndian === undefined) {\n\t        littleEndian = this._littleEndian;\n\t      }\n\t\n\t      // Handle the lack of byteOffset\n\t      if (byteOffset === undefined) {\n\t        byteOffset = this.byteOffset;\n\t      } else {\n\t        byteOffset = this.byteOffset + byteOffset;\n\t      }\n\t\n\t      if (length === undefined) {\n\t        length = this.byteLength - byteOffset;\n\t      }\n\t\n\t      // Error Checking\n\t      if (typeof byteOffset !== 'number') {\n\t        throw new TypeError('DataView byteOffset is not a number');\n\t      }\n\t\n\t      if (length < 0 || byteOffset + length > this.byteLength) {\n\t        throw new Error('DataView length or (byteOffset+length) value is out of bounds');\n\t      }\n\t\n\t      if (this.isString) {\n\t        result = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\t      } else {\n\t        result = this.buffer.slice(byteOffset, byteOffset + length);\n\t      }\n\t\n\t      if (!littleEndian && length > 1) {\n\t        if (!(result instanceof Array)) {\n\t          result = Array.prototype.slice.call(result);\n\t        }\n\t\n\t        result.reverse();\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    // Compatibility functions on a String Buffer\n\t\n\t    getFloat64: function getFloat64(byteOffset, littleEndian) {\n\t      var b = this._getBytes(8, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[7] >> 7),\n\t          exponent = ((b[7] << 1 & 0xff) << 3 | b[6] >> 4) - ((1 << 10) - 1),\n\t\n\t      // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t      mantissa = (b[6] & 0x0f) * Math.pow(2, 48) + b[5] * Math.pow(2, 40) + b[4] * Math.pow(2, 32) + b[3] * Math.pow(2, 24) + b[2] * Math.pow(2, 16) + b[1] * Math.pow(2, 8) + b[0];\n\t\n\t      if (exponent === 1024) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -1023) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -1022 - 52);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getFloat32: function getFloat32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[3] >> 7),\n\t          exponent = (b[3] << 1 & 0xff | b[2] >> 7) - 127,\n\t          mantissa = (b[2] & 0x7f) << 16 | b[1] << 8 | b[0];\n\t\n\t      if (exponent === 128) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -127) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -126 - 23);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getInt32: function getInt32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian);\n\t      return b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n\t    },\n\t\n\t    getUint32: function getUint32(byteOffset, littleEndian) {\n\t      return this.getInt32(byteOffset, littleEndian) >>> 0;\n\t    },\n\t\n\t    getInt16: function getInt16(byteOffset, littleEndian) {\n\t      return this.getUint16(byteOffset, littleEndian) << 16 >> 16;\n\t    },\n\t\n\t    getUint16: function getUint16(byteOffset, littleEndian) {\n\t      var b = this._getBytes(2, byteOffset, littleEndian);\n\t      return b[1] << 8 | b[0];\n\t    },\n\t\n\t    getInt8: function getInt8(byteOffset) {\n\t      return this.getUint8(byteOffset) << 24 >> 24;\n\t    },\n\t\n\t    getUint8: function getUint8(byteOffset) {\n\t      return this._getBytes(1, byteOffset)[0];\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = THREE;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(10);\n\t\n\tfunction emptyFunction() {}\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    var err = new Error(\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t    err.name = 'Invariant Violation';\n\t    throw err;\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(8)();\n\t}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v17.0.2\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),m=__webpack_require__(2),r=__webpack_require__(14);function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\n\tfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\n\tvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\n\tja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n\t[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\n\tpa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\n\tD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\n\tfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\n\tif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\n\tvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\n\tfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\n\tf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\n\tfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\n\tfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\n\treturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\n\tfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\n\tfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\n\tfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\n\tfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\n\tfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\n\tfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\n\tfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\n\tfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\n\ttypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\n\tfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\n\tfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\n\tc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\n\tfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\n\tfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\n\tfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\n\tfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\n\tfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\n\tfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\n\tfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\n\tfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\n\tfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\n\tfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\n\tvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\t\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\n\tfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\n\tF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\n\tfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\n\tfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\n\tfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\n\tfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\n\tfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\n\tfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\n\tfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n\t(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\n\tvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\n\ta)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\n\tSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n\t119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\n\tvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\n\ta.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\n\tdeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\n\tfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\n\tfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\n\tfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\n\tfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\n\tfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\n\tfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\n\tPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n\t0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\n\tea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\n\tda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\n\tfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\n\tfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\n\tfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\n\tfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\n\tfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\n\tfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\n\ta:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\n\tDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\n\tt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\n\tx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\n\tgf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\n\tK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\n\tcase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\t\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\n\tfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\n\tfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\n\tfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\n\tfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\n\tfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\n\tfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\n\tfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\n\tvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\n\tfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\n\tfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\n\tfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\n\tfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\n\tfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\n\tfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\n\tb;c.lastBaseUpdate=b}\n\tfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\n\tnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\n\tf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\n\tfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\n\tvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\n\tb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\n\tfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\n\tfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n\t(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\n\tfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\n\tfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\n\tfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\n\tc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\n\tWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\n\ta.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\n\tnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\n\tn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\n\th)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\n\tu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\n\td=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\n\tWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\n\tfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\n\tfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\n\tfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\n\tfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\n\tfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\n\tfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\n\tfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\n\tfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\n\tfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\n\teagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\n\tfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\n\tfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\n\tfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\n\te.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\n\tfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\n\tfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\n\tfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\n\tfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\n\tfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\n\tfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\n\tvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\n\tb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\n\twh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\n\tvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\n\ta]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\n\ta]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\n\tfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\n\tfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\n\tfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\n\tfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\n\ttypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\t\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\n\tx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\n\th===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\n\tfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\n\tvar si={dehydrated:null,retryLane:0};\n\tfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\n\tb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n\t{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\n\tfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\n\tfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\n\tfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\n\tfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\n\tnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\n\tfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\n\tBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\n\tDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\n\tl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n\t(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\n\tc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\n\tfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\n\tb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n\t{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\n\tjf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\n\te=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\n\tgb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\n\tbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\n\tc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n\t4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\n\tnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\n\tf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n\t64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\n\tfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\n\tfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\n\tfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\n\tfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\n\tfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\n\tb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\n\treturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\n\tfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\n\ta)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\n\tf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\n\tc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\n\tfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\n\tfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\n\tfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n\t8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\n\tfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n\t2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\n\tb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\n\tfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\n\tfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\n\tfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\n\tfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\n\tc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\n\tfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\n\ta.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\n\tc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\n\tfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\n\tfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\n\tfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\n\tfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n\t(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\n\tvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\n\tg;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\n\tfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\n\tfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\n\ta.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\n\tfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\n\tCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\n\tbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\n\tZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\n\tJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\n\tg.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n\t0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\n\tZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\n\tfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\n\tfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\n\tnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\n\tfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\n\tfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\n\tck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\n\tb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\n\ttypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\n\ta=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\n\td=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\n\tph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\n\tc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\n\tk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\n\tf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n\t};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\n\tfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\n\tfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\n\tc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\n\tfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\n\ttypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\n\tfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\n\tfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\n\tfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\n\td&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\n\tfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\n\tqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\n\tfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\n\tfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\n\tgc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\n\tyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\n\tHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\n\tvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\n\tpk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\n\texports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\n\texports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\n\texports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v17.0.2\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t'use strict';var l=__webpack_require__(2),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\n\tif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\n\tvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\n\tfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\n\tfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\n\tfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n\t0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\n\tfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\n\texports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\n\texports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\n\tkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\n\texports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\n\texports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t/** @license React v0.20.2\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\n\tif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\n\twindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\n\tE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\n\tx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\n\tfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\n\tfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\n\tfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\n\texports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\n\texports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\n\texports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\n\texports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(13);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(THREE) {\n\t\tvar MOUSE = THREE.MOUSE\n\t\tif (!MOUSE)\n\t\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\n\t\t/**\n\t\t * @author qiao / https://github.com/qiao\n\t\t * @author mrdoob / http://mrdoob.com\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author erich666 / http://erichaines.com\n\t\t */\n\t\t/*global THREE, console */\n\t\n\t\tfunction OrbitConstraint ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t\t// and where it pans with respect to.\n\t\t\tthis.target = new THREE.Vector3();\n\t\n\t\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity;\n\t\n\t\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity;\n\t\n\t\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\t\t\tthis.minPolarAngle = 0; // radians\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.25;\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t// Current position in spherical coordinate system.\n\t\t\tvar theta;\n\t\t\tvar phi;\n\t\n\t\t\t// Pending changes\n\t\t\tvar phiDelta = 0;\n\t\t\tvar thetaDelta = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar panOffset = new THREE.Vector3();\n\t\t\tvar zoomChanged = false;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn phi;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn theta;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateLeft = function ( angle ) {\n\t\n\t\t\t\tthetaDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateUp = function ( angle ) {\n\t\n\t\t\t\tphiDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\t// pass in distance in world space to move left\n\t\t\tthis.panLeft = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panLeft ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get X column of matrix\n\t\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in distance in world space to move up\n\t\t\tthis.panUp = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panUp ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get Y column of matrix\n\t\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\t\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\t\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\t// orthographic\n\t\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyIn = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale /= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyOut = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale *= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.update = function() {\n\t\n\t\t\t\tvar offset = new THREE.Vector3();\n\t\n\t\t\t\t// so camera.up is the orbit axis\n\t\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tvar quatInverse = quat.clone().inverse();\n\t\n\t\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\t\n\t\t\t\treturn function () {\n\t\n\t\t\t\t\tvar position = this.object.position;\n\t\n\t\t\t\t\toffset.copy( position ).sub( this.target );\n\t\n\t\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quat );\n\t\n\t\t\t\t\t// angle from z-axis around y-axis\n\t\n\t\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\t\n\t\t\t\t\t// angle from y-axis\n\t\n\t\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\t\n\t\t\t\t\ttheta += thetaDelta;\n\t\t\t\t\tphi += phiDelta;\n\t\n\t\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\t\n\t\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\t\n\t\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\t\n\t\t\t\t\tvar radius = offset.length() * scale;\n\t\n\t\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\n\t\t\t\t\t// move target to panned location\n\t\t\t\t\tthis.target.add( panOffset );\n\t\n\t\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\t\n\t\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\n\t\t\t\t\tposition.copy( this.target ).add( offset );\n\t\n\t\t\t\t\tthis.object.lookAt( this.target );\n\t\n\t\t\t\t\tif ( this.enableDamping === true ) {\n\t\n\t\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\t\tphiDelta = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscale = 1;\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\t\n\t\t\t\t\t// update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\t\n\t\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\t\n\t\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\n\t\t\t\t\t\treturn true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t};\n\t\n\t\n\t\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t\t// supported.\n\t\t//\n\t\t//    Orbit - left mouse / touch: one finger move\n\t\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\t\n\t\tfunction OrbitControls ( object, domElement ) {\n\t\n\t\t\tvar constraint = new OrbitConstraint( object );\n\t\n\t\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\t\n\t\t\t// API\n\t\n\t\t\tObject.defineProperty( this, 'constraint', {\n\t\n\t\t\t\tget: function() {\n\t\n\t\t\t\t\treturn constraint;\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn constraint.getPolarAngle();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn constraint.getAzimuthalAngle();\n\t\n\t\t\t};\n\t\n\t\t\t// Set to false to disable this control\n\t\t\tthis.enabled = true;\n\t\n\t\t\t// center is old, deprecated; use \"target\" instead\n\t\t\tthis.center = this.target;\n\t\n\t\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t\t// backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable rotating\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable panning\n\t\t\tthis.enablePan = true;\n\t\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\n\t\t\t// Set to false to disable use of the keys\n\t\t\tthis.enableKeys = true;\n\t\n\t\t\t// The four arrow keys\n\t\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\n\t\t\t// Mouse buttons\n\t\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar rotateStart = new THREE.Vector2();\n\t\t\tvar rotateEnd = new THREE.Vector2();\n\t\t\tvar rotateDelta = new THREE.Vector2();\n\t\n\t\t\tvar panStart = new THREE.Vector2();\n\t\t\tvar panEnd = new THREE.Vector2();\n\t\t\tvar panDelta = new THREE.Vector2();\n\t\n\t\t\tvar dollyStart = new THREE.Vector2();\n\t\t\tvar dollyEnd = new THREE.Vector2();\n\t\t\tvar dollyDelta = new THREE.Vector2();\n\t\n\t\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\t\n\t\t\tvar state = STATE.NONE;\n\t\n\t\t\t// for reset\n\t\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom;\n\t\n\t\t\t// events\n\t\n\t\t\tvar changeEvent = { type: 'change' };\n\t\t\tvar startEvent = { type: 'start' };\n\t\t\tvar endEvent = { type: 'end' };\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tfunction pan( deltaX, deltaY ) {\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\t\n\t\t\t}\n\t\n\t\t\tthis.update = function () {\n\t\n\t\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\t\n\t\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( constraint.update() === true ) {\n\t\n\t\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.reset = function () {\n\t\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\tthis.target.copy( this.target0 );\n\t\t\t\tthis.object.position.copy( this.position0 );\n\t\t\t\tthis.object.zoom = this.zoom0;\n\t\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\tthis.update();\n\t\n\t\t\t};\n\t\n\t\t\tfunction getAutoRotationAngle() {\n\t\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getZoomScale() {\n\t\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\tstate = STATE.ROTATE;\n\t\n\t\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tstate = STATE.DOLLY;\n\t\n\t\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tstate = STATE.PAN;\n\t\n\t\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) {\n\t\n\t\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\t\tscope.dispatchEvent( startEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseMove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tif ( state === STATE.ROTATE ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t} else if ( state === STATE.DOLLY ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t} else if ( state === STATE.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.update();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseUp( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseWheel( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar delta = 0;\n\t\n\t\t\t\tif ( event.wheelDelta !== undefined ) {\n\t\n\t\t\t\t\t// WebKit / Opera / Explorer 9\n\t\n\t\t\t\t\tdelta = event.wheelDelta;\n\t\n\t\t\t\t} else if ( event.detail !== undefined ) {\n\t\n\t\t\t\t\t// Firefox\n\t\n\t\t\t\t\tdelta = - event.detail;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( delta > 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t} else if ( delta < 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( startEvent );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onKeyDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\t\n\t\t\t\tswitch ( event.keyCode ) {\n\t\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchstart( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\n\t\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\n\t\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchmove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1: // one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\t\n\t\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2: // two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\n\t\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\t\n\t\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchend( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction contextmenu( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t}\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\n\t\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t}\n\t\n\t\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\t\n\t\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t// force an update at start\n\t\t\tthis.update();\n\t\n\t\t};\n\t\n\t\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\t\tOrbitControls.prototype.constructor = OrbitControls;\n\t\n\t\tObject.defineProperties( OrbitControls.prototype, {\n\t\n\t\t\tobject: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.object;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttarget: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.target;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\t\tthis.constraint.target.copy( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tenableDamping : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.enableDamping = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// backward compatibility\n\t\n\t\t\tnoZoom: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\treturn ! this.enableZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\tthis.enableZoom = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoRotate: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\treturn ! this.enableRotate;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\tthis.enableRotate = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoPan: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\treturn ! this.enablePan;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\tthis.enablePan = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoKeys: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\treturn ! this.enableKeys;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\tthis.enableKeys = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tstaticMoving : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\treturn ! this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\tthis.constraint.enableDamping = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdynamicDampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\treturn OrbitControls;\n\t}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6fdd63fcd3b561c9fe70","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nReactDOM.render(<App />, document.getElementById('react-app'));\r\n\n\n\n// WEBPACK FOOTER //\n// ./react/app.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 3\n// module chunks = 0","import React, { Component } from 'react';\r\nimport STLViewer from '../../src/STLViewer';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      color: 'rgba(255,0,48,0.2)',\r\n      model: undefined,\r\n    };\r\n\r\n    this.clickBlue = this.clickBlue.bind(this);\r\n    this.clickRed = this.clickRed.bind(this);\r\n  }\r\n\r\n  clickBlue(e) {\r\n    e.preventDefault();\r\n    this.setState({ color: '#0000FF' });\r\n  }\r\n\r\n  clickRed(e) {\r\n    e.preventDefault();\r\n    this.setState({ color: '#FF0000' });\r\n  }\r\n\r\n  onChange = ({ target }) => {\r\n    const { files } = target;\r\n    const reader = new FileReader();\r\n    reader.readAsArrayBuffer(files[0]);\r\n    reader.onload = () => {\r\n      this.setState({ model: reader.result });\r\n    };\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input id=\"image-file\" type=\"file\" onChange={this.onChange} />\r\n        <STLViewer\r\n          modelColor={this.state.color}\r\n          lights={[1, 1]}\r\n          rotate={true}\r\n          model={this.state.model}\r\n        />\r\n        <button onClick={this.clickRed}>red</button>\r\n        <button onClick={this.clickBlue}>blue</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./react/containers/App.js","import THREE from './Three';\r\nimport ReactDOM from 'react-dom';\r\nlet OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\nconst DIRECTIONAL_LIGHT = 'directionalLight';\r\n\r\nclass Paint {\r\n  constructor() {\r\n    this.loader = new THREE.STLLoader();\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n    });\r\n    this.reqNumber = 0;\r\n  }\r\n\r\n  init(context) {\r\n    this.component = context;\r\n    this.width = context.props.width;\r\n    this.height = context.props.height;\r\n    this.modelColor = context.props.modelColor;\r\n    this.backgroundColor = context.props.backgroundColor;\r\n    this.orbitControls = context.props.orbitControls;\r\n    this.rotate = context.props.rotate;\r\n    this.cameraX = context.props.cameraX;\r\n    this.cameraY = context.props.cameraY;\r\n    this.cameraZ = context.props.cameraZ;\r\n    this.rotationSpeeds = context.props.rotationSpeeds;\r\n    this.lights = context.props.lights;\r\n    this.lightColor = context.props.lightColor;\r\n    this.model = context.props.model;\r\n\r\n    if (this.mesh !== undefined) {\r\n      this.scene.remove(this.mesh);\r\n      this.mesh.geometry.dispose();\r\n      this.mesh.material.dispose();\r\n      this.scene.remove(this.grid);\r\n    }\r\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\r\n    if (directionalLightObj) {\r\n      this.scene.remove(directionalLightObj);\r\n    }\r\n\r\n    if (this.animationRequestId) {\r\n      cancelAnimationFrame(this.animationRequestId);\r\n    }\r\n\r\n    //Detector.addGetWebGLMessage();\r\n    this.distance = 10000;\r\n\r\n    // lights processing\r\n    const hasMultipleLights = this.lights.reduce(\r\n      (acc, item) => acc && Array.isArray(item),\r\n      true\r\n    );\r\n    if (hasMultipleLights) {\r\n      this.lights.forEach(this.addLight.bind(this));\r\n    } else {\r\n      this.addLight(this.lights);\r\n    }\r\n\r\n    this.reqNumber += 1;\r\n    this.addSTLToScene(this.reqNumber);\r\n  }\r\n\r\n  addLight(lights, index = 0) {\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n    directionalLight.position.set(...lights);\r\n    directionalLight.name = DIRECTIONAL_LIGHT + index;\r\n    directionalLight.position.normalize();\r\n    this.scene.add(directionalLight);\r\n  }\r\n\r\n  loadSTLFromUrl(url, reqId) {\r\n    return new Promise((resolve) => {\r\n      this.loader.crossOrigin = '';\r\n      this.loader.loadFromUrl(url, (geometry) => {\r\n        if (this.reqNumber !== reqId) {\r\n          return;\r\n        }\r\n        resolve(geometry);\r\n      });\r\n    });\r\n  }\r\n\r\n  loadFromFile(file) {\r\n    return new Promise((resolve) => {\r\n      this.loader.loadFromFile(file, (geometry) => {\r\n        resolve(geometry);\r\n      });\r\n    });\r\n  }\r\n\r\n  addSTLToScene(reqId) {\r\n    let loadPromise;\r\n    if (typeof this.model === 'string') {\r\n      loadPromise = this.loadSTLFromUrl(this.model, reqId);\r\n    } else if (this.model instanceof ArrayBuffer) {\r\n      loadPromise = this.loadFromFile(this.model);\r\n    } else {\r\n      return Promise.resolve(null);\r\n    }\r\n    return loadPromise.then((geometry) => {\r\n      // Calculate mesh noramls for MeshLambertMaterial.\r\n      geometry.computeFaceNormals();\r\n      geometry.computeVertexNormals();\r\n\r\n      // Center the object\r\n      geometry.center();\r\n\r\n      let material = new THREE.MeshLambertMaterial({\r\n        overdraw: true,\r\n        color: this.modelColor,\r\n      });\r\n\r\n      if (geometry.hasColors) {\r\n        material = new THREE.MeshPhongMaterial({\r\n          opacity: geometry.alpha,\r\n          vertexColors: THREE.VertexColors,\r\n        });\r\n      }\r\n\r\n      this.mesh = new THREE.Mesh(geometry, material);\r\n      // Set the object's dimensions\r\n      geometry.computeBoundingBox();\r\n      this.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n      this.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n      this.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n\r\n      if (this.rotate) {\r\n        this.mesh.rotation.x = this.rotationSpeeds[0];\r\n        this.mesh.rotation.y = this.rotationSpeeds[1];\r\n        this.mesh.rotation.z = this.rotationSpeeds[2];\r\n      }\r\n\r\n      this.scene.add(this.mesh);\r\n\r\n      this.addCamera();\r\n      this.addInteractionControls();\r\n      this.addToReactComponent();\r\n\r\n      // Start the animation\r\n      this.animate();\r\n    });\r\n  }\r\n\r\n  addCamera() {\r\n    // Add the camera\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      30,\r\n      this.width / this.height,\r\n      1,\r\n      this.distance\r\n    );\r\n\r\n    if (this.cameraZ === null) {\r\n      this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\r\n    }\r\n\r\n    this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n    this.camera.add(directionalLight);\r\n    this.scene.add(this.camera);\r\n\r\n    this.camera.lookAt(this.mesh);\r\n\r\n    this.renderer.set;\r\n    this.renderer.physicallyCorrectLights = true;\r\n    this.renderer.setSize(this.width, this.height);\r\n    this.renderer.setClearColor(this.backgroundColor, 1);\r\n  }\r\n\r\n  addInteractionControls() {\r\n    // Add controls for mouse interaction\r\n    if (this.orbitControls) {\r\n      this.controls = new OrbitControls(\r\n        this.camera,\r\n        ReactDOM.findDOMNode(this.component)\r\n      );\r\n      this.controls.enableKeys = false;\r\n      this.controls.addEventListener('change', this.orbitRender.bind(this));\r\n    }\r\n  }\r\n\r\n  addToReactComponent() {\r\n    // Add to the React Component\r\n    ReactDOM.findDOMNode(this.component).replaceChild(\r\n      this.renderer.domElement,\r\n      ReactDOM.findDOMNode(this.component).firstChild\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Animate the scene\r\n   * @returns {void}\r\n   */\r\n  animate() {\r\n    // note: three.js includes requestAnimationFrame shim\r\n    if (this.rotate) {\r\n      this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n\r\n    if (this.orbitControls) {\r\n      this.controls.update();\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Render the scene after turning off the rotation\r\n   * @returns {void}\r\n   */\r\n  orbitRender() {\r\n    if (this.rotate) {\r\n      this.rotate = false;\r\n    }\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Deallocate Mesh, renderer context.\r\n   * @returns {void}\r\n   */\r\n  clean() {\r\n    if (this.mesh !== undefined) {\r\n      this.mesh.geometry.dispose();\r\n      this.mesh.material.dispose();\r\n      this.scene.remove(this.mesh);\r\n      delete this.mesh;\r\n    }\r\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\r\n    if (directionalLightObj) {\r\n      this.scene.remove(directionalLightObj);\r\n    }\r\n\r\n    if (this.animationRequestId) {\r\n      cancelAnimationFrame(this.animationRequestId);\r\n    }\r\n    this.renderer.dispose();\r\n    this.renderer.forceContextLoss();\r\n  }\r\n\r\n  /**\r\n   * Render the scene\r\n   * @returns {void}\r\n   */\r\n  render() {\r\n    if (this.mesh && this.rotate) {\r\n      this.mesh.rotation.x += this.rotationSpeeds[0];\r\n      this.mesh.rotation.y += this.rotationSpeeds[1];\r\n      this.mesh.rotation.z += this.rotationSpeeds[2];\r\n    }\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n}\r\n\r\nexport default Paint;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Paint.js","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paint from './Paint';\r\nclass STLViewer extends Component {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    url: PropTypes.string,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    backgroundColor: PropTypes.string,\r\n    modelColor: PropTypes.string,\r\n    rotate: PropTypes.bool,\r\n    orbitControls: PropTypes.bool,\r\n    cameraX: PropTypes.number,\r\n    cameraY: PropTypes.number,\r\n    cameraZ: PropTypes.number,\r\n    lights: PropTypes.array,\r\n    lightColor: PropTypes.string,\r\n    rotationSpeeds: PropTypes.arrayOf(PropTypes.number),\r\n    model: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(ArrayBuffer),\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    backgroundColor: '#EAEAEA',\r\n    modelColor: '#B92C2C',\r\n    height: 400,\r\n    width: 400,\r\n    rotate: true,\r\n    orbitControls: true,\r\n    cameraX: 0,\r\n    cameraY: 0,\r\n    cameraZ: null,\r\n    lights: [0, 0, 1],\r\n    lightColor: '#ffffff',\r\n    rotationSpeeds: [0, 0, 0.02],\r\n    model: undefined,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.paint = new Paint();\r\n    this.paint.init(this);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return JSON.stringify(nextProps) !== JSON.stringify(this.props);\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    this.props = nextProps;\r\n    this.paint.init(this);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.paint.clean();\r\n    delete this.paint;\r\n  }\r\n\r\n  render() {\r\n    const { width, height, modelColor } = this.props;\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          overflow: 'hidden',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div className=\"spinner spinner-blue\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = STLViewer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/STLViewer.js","var THREE = require('three');\r\n\r\n//\r\n// STL Loader added\r\n//\r\n/**\r\n * @author aleeper / http://adamleeper.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author gero3 / https://github.com/gero3\r\n *\r\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\r\n *\r\n * Supports both binary and ASCII encoded files, with automatic detection of type.\r\n *\r\n * Limitations:\r\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\r\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\r\n *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\r\n *\r\n * Usage:\r\n *  var loader = new THREE.STLLoader();\r\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\r\n *    scene.add( new THREE.Mesh( geometry ) );\r\n *  });\r\n *\r\n * For binary STLs geometry might contain colors for vertices. To use it:\r\n *  // use the same code to load STL as above\r\n *  if (geometry.hasColors) {\r\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\r\n *  } else { .... }\r\n *  var mesh = new THREE.Mesh( geometry, material );\r\n */\r\n\r\nTHREE.STLLoader = function(manager) {\r\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\r\n};\r\n\r\nTHREE.STLLoader.prototype = {\r\n  constructor: THREE.STLLoader,\r\n\r\n  loadFromUrl: function(url, onLoad, onProgress, onError) {\r\n    var scope = this;\r\n\r\n    var loader = new THREE.XHRLoader(scope.manager);\r\n    loader.setCrossOrigin(this.crossOrigin);\r\n    loader.setResponseType('arraybuffer');\r\n    loader.load(\r\n      url,\r\n      function(text) {\r\n        onLoad(scope.parse(text));\r\n      },\r\n      onProgress,\r\n      onError\r\n    );\r\n  },\r\n\r\n  loadFromFile: function(buffer, onLoad) {\r\n    var scope = this;\r\n    onLoad(scope.parse(buffer));\r\n  },\r\n\r\n  parse: function(data) {\r\n    var isBinary = function() {\r\n      var expect, face_size, n_faces, reader;\r\n      reader = new DataView(binData);\r\n      face_size = (32 / 8) * 3 + (32 / 8) * 3 * 3 + 16 / 8;\r\n      n_faces = reader.getUint32(80, true);\r\n      expect = 80 + 32 / 8 + n_faces * face_size;\r\n\r\n      if (expect === reader.byteLength) {\r\n        return true;\r\n      }\r\n\r\n      // some binary files will have different size from expected,\r\n      // checking characters higher than ASCII to confirm is binary\r\n      var fileLength = reader.byteLength;\r\n      for (var index = 0; index < fileLength; index++) {\r\n        if (reader.getUint8(index, false) > 127) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    var binData = this.ensureBinary(data);\r\n\r\n    return isBinary()\r\n      ? this.parseBinary(binData)\r\n      : this.parseASCII(this.ensureString(data));\r\n  },\r\n\r\n  parseBinary: function(data) {\r\n    var reader = new DataView(data);\r\n    var faces = reader.getUint32(80, true);\r\n\r\n    var r,\r\n      g,\r\n      b,\r\n      hasColors = false,\r\n      colors;\r\n    var defaultR, defaultG, defaultB, alpha;\r\n\r\n    // process STL header\r\n    // check for default color in header (\"COLOR=rgba\" sequence).\r\n\r\n    for (var index = 0; index < 80 - 10; index++) {\r\n      if (\r\n        reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ &&\r\n        reader.getUint8(index + 4) == 0x52 /*'R'*/ &&\r\n        reader.getUint8(index + 5) == 0x3d /*'='*/\r\n      ) {\r\n        hasColors = true;\r\n        colors = new Float32Array(faces * 3 * 3);\r\n\r\n        defaultR = reader.getUint8(index + 6) / 255;\r\n        defaultG = reader.getUint8(index + 7) / 255;\r\n        defaultB = reader.getUint8(index + 8) / 255;\r\n        alpha = reader.getUint8(index + 9) / 255;\r\n      }\r\n    }\r\n\r\n    var dataOffset = 84;\r\n    var faceLength = 12 * 4 + 2;\r\n\r\n    var offset = 0;\r\n\r\n    var geometry = new THREE.BufferGeometry();\r\n\r\n    var vertices = new Float32Array(faces * 3 * 3);\r\n    var normals = new Float32Array(faces * 3 * 3);\r\n\r\n    for (var face = 0; face < faces; face++) {\r\n      var start = dataOffset + face * faceLength;\r\n      var normalX = reader.getFloat32(start, true);\r\n      var normalY = reader.getFloat32(start + 4, true);\r\n      var normalZ = reader.getFloat32(start + 8, true);\r\n\r\n      if (hasColors) {\r\n        var packedColor = reader.getUint16(start + 48, true);\r\n\r\n        if ((packedColor & 0x8000) === 0) {\r\n          // facet has its own unique color\r\n\r\n          r = (packedColor & 0x1f) / 31;\r\n          g = ((packedColor >> 5) & 0x1f) / 31;\r\n          b = ((packedColor >> 10) & 0x1f) / 31;\r\n        } else {\r\n          r = defaultR;\r\n          g = defaultG;\r\n          b = defaultB;\r\n        }\r\n      }\r\n\r\n      for (var i = 1; i <= 3; i++) {\r\n        var vertexstart = start + i * 12;\r\n\r\n        vertices[offset] = reader.getFloat32(vertexstart, true);\r\n        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\r\n        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\r\n\r\n        normals[offset] = normalX;\r\n        normals[offset + 1] = normalY;\r\n        normals[offset + 2] = normalZ;\r\n\r\n        if (hasColors) {\r\n          colors[offset] = r;\r\n          colors[offset + 1] = g;\r\n          colors[offset + 2] = b;\r\n        }\r\n\r\n        offset += 3;\r\n      }\r\n    }\r\n\r\n    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\r\n\r\n    if (hasColors) {\r\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n      geometry.hasColors = true;\r\n      geometry.alpha = alpha;\r\n    }\r\n\r\n    return geometry;\r\n  },\r\n\r\n  parseASCII: function(data) {\r\n    var geometry,\r\n      length,\r\n      normal,\r\n      patternFace,\r\n      patternNormal,\r\n      patternVertex,\r\n      result,\r\n      text;\r\n    geometry = new THREE.Geometry();\r\n    patternFace = /facet([\\s\\S]*?)endfacet/g;\r\n\r\n    while ((result = patternFace.exec(data)) !== null) {\r\n      text = result[0];\r\n      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\r\n\r\n      while ((result = patternNormal.exec(text)) !== null) {\r\n        normal = new THREE.Vector3(\r\n          parseFloat(result[1]),\r\n          parseFloat(result[3]),\r\n          parseFloat(result[5])\r\n        );\r\n      }\r\n\r\n      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\r\n\r\n      while ((result = patternVertex.exec(text)) !== null) {\r\n        geometry.vertices.push(\r\n          new THREE.Vector3(\r\n            parseFloat(result[1]),\r\n            parseFloat(result[3]),\r\n            parseFloat(result[5])\r\n          )\r\n        );\r\n      }\r\n\r\n      length = geometry.vertices.length;\r\n\r\n      geometry.faces.push(\r\n        new THREE.Face3(length - 3, length - 2, length - 1, normal)\r\n      );\r\n    }\r\n\r\n    geometry.computeBoundingBox();\r\n    geometry.computeBoundingSphere();\r\n\r\n    return geometry;\r\n  },\r\n\r\n  ensureString: function(buf) {\r\n    if (typeof buf !== 'string') {\r\n      var array_buffer = new Uint8Array(buf);\r\n      var str = '';\r\n      for (var i = 0; i < buf.byteLength; i++) {\r\n        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\r\n      }\r\n      return str;\r\n    } else {\r\n      return buf;\r\n    }\r\n  },\r\n\r\n  ensureBinary: function(buf) {\r\n    if (typeof buf === 'string') {\r\n      var array_buffer = new Uint8Array(buf.length);\r\n      for (var i = 0; i < buf.length; i++) {\r\n        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\r\n      }\r\n      return array_buffer.buffer || array_buffer;\r\n    } else {\r\n      return buf;\r\n    }\r\n  }\r\n};\r\n\r\nif (typeof DataView === 'undefined') {\r\n  DataView = function(buffer, byteOffset, byteLength) {\r\n    this.buffer = buffer;\r\n    this.byteOffset = byteOffset || 0;\r\n    this.byteLength = byteLength || buffer.byteLength || buffer.length;\r\n    this._isString = typeof buffer === 'string';\r\n  };\r\n\r\n  DataView.prototype = {\r\n    _getCharCodes: function(buffer, start, length) {\r\n      start = start || 0;\r\n      length = length || buffer.length;\r\n      var end = start + length;\r\n      var codes = [];\r\n      for (var i = start; i < end; i++) {\r\n        codes.push(buffer.charCodeAt(i) & 0xff);\r\n      }\r\n      return codes;\r\n    },\r\n\r\n    _getBytes: function(length, byteOffset, littleEndian) {\r\n      var result;\r\n\r\n      // Handle the lack of endianness\r\n      if (littleEndian === undefined) {\r\n        littleEndian = this._littleEndian;\r\n      }\r\n\r\n      // Handle the lack of byteOffset\r\n      if (byteOffset === undefined) {\r\n        byteOffset = this.byteOffset;\r\n      } else {\r\n        byteOffset = this.byteOffset + byteOffset;\r\n      }\r\n\r\n      if (length === undefined) {\r\n        length = this.byteLength - byteOffset;\r\n      }\r\n\r\n      // Error Checking\r\n      if (typeof byteOffset !== 'number') {\r\n        throw new TypeError('DataView byteOffset is not a number');\r\n      }\r\n\r\n      if (length < 0 || byteOffset + length > this.byteLength) {\r\n        throw new Error(\r\n          'DataView length or (byteOffset+length) value is out of bounds'\r\n        );\r\n      }\r\n\r\n      if (this.isString) {\r\n        result = this._getCharCodes(\r\n          this.buffer,\r\n          byteOffset,\r\n          byteOffset + length\r\n        );\r\n      } else {\r\n        result = this.buffer.slice(byteOffset, byteOffset + length);\r\n      }\r\n\r\n      if (!littleEndian && length > 1) {\r\n        if (!(result instanceof Array)) {\r\n          result = Array.prototype.slice.call(result);\r\n        }\r\n\r\n        result.reverse();\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    // Compatibility functions on a String Buffer\r\n\r\n    getFloat64: function(byteOffset, littleEndian) {\r\n      var b = this._getBytes(8, byteOffset, littleEndian),\r\n        sign = 1 - 2 * (b[7] >> 7),\r\n        exponent =\r\n          ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\r\n        // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\r\n        mantissa =\r\n          (b[6] & 0x0f) * Math.pow(2, 48) +\r\n          b[5] * Math.pow(2, 40) +\r\n          b[4] * Math.pow(2, 32) +\r\n          b[3] * Math.pow(2, 24) +\r\n          b[2] * Math.pow(2, 16) +\r\n          b[1] * Math.pow(2, 8) +\r\n          b[0];\r\n\r\n      if (exponent === 1024) {\r\n        if (mantissa !== 0) {\r\n          return NaN;\r\n        } else {\r\n          return sign * Infinity;\r\n        }\r\n      }\r\n\r\n      if (exponent === -1023) {\r\n        // Denormalized\r\n        return sign * mantissa * Math.pow(2, -1022 - 52);\r\n      }\r\n\r\n      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\r\n    },\r\n\r\n    getFloat32: function(byteOffset, littleEndian) {\r\n      var b = this._getBytes(4, byteOffset, littleEndian),\r\n        sign = 1 - 2 * (b[3] >> 7),\r\n        exponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\r\n        mantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\r\n\r\n      if (exponent === 128) {\r\n        if (mantissa !== 0) {\r\n          return NaN;\r\n        } else {\r\n          return sign * Infinity;\r\n        }\r\n      }\r\n\r\n      if (exponent === -127) {\r\n        // Denormalized\r\n        return sign * mantissa * Math.pow(2, -126 - 23);\r\n      }\r\n\r\n      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\r\n    },\r\n\r\n    getInt32: function(byteOffset, littleEndian) {\r\n      var b = this._getBytes(4, byteOffset, littleEndian);\r\n      return (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\r\n    },\r\n\r\n    getUint32: function(byteOffset, littleEndian) {\r\n      return this.getInt32(byteOffset, littleEndian) >>> 0;\r\n    },\r\n\r\n    getInt16: function(byteOffset, littleEndian) {\r\n      return (this.getUint16(byteOffset, littleEndian) << 16) >> 16;\r\n    },\r\n\r\n    getUint16: function(byteOffset, littleEndian) {\r\n      var b = this._getBytes(2, byteOffset, littleEndian);\r\n      return (b[1] << 8) | b[0];\r\n    },\r\n\r\n    getInt8: function(byteOffset) {\r\n      return (this.getUint8(byteOffset) << 24) >> 24;\r\n    },\r\n\r\n    getUint8: function(byteOffset) {\r\n      return this._getBytes(1, byteOffset)[0];\r\n    }\r\n  };\r\n}\r\n\r\nmodule.exports = THREE;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Three.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 8\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 9\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 10\n// module chunks = 0","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 11\n// module chunks = 0","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 12\n// module chunks = 0","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 14\n// module chunks = 0","module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three-orbit-controls/index.js\n// module id = 15\n// module chunks = 0","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/three.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}