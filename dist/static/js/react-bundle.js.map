{"version":3,"sources":["webpack:///react-bundle.js","webpack:///webpack/bootstrap 66e2cff0cc9ea8b6d391","webpack:///./react/app.js","webpack:///./~/react/index.js","webpack:///./~/@emotion/serialize/dist/serialize.browser.cjs.js","webpack:///./~/@babel/runtime/helpers/inheritsLoose.js","webpack:///./~/@emotion/cache/dist/cache.browser.cjs.js","webpack:///./~/@emotion/css/dist/css.browser.cjs.js","webpack:///./~/@emotion/sheet/dist/sheet.browser.cjs.js","webpack:///./~/@emotion/utils/dist/utils.browser.cjs.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/index.js","webpack:///./~/@babel/runtime/helpers/extends.js","webpack:///./~/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./~/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./~/@emotion/core/dist/core.browser.cjs.js","webpack:///./~/@emotion/core/dist/emotion-element-3a21e59a.browser.cjs.js","webpack:///./~/@emotion/hash/dist/hash.browser.cjs.js","webpack:///./~/@emotion/memoize/dist/memoize.browser.cjs.js","webpack:///./~/@emotion/stylis/dist/stylis.browser.cjs.js","webpack:///./~/@emotion/unitless/dist/unitless.browser.cjs.js","webpack:///./~/@emotion/weak-memoize/dist/weak-memoize.browser.cjs.js","webpack:///./react/containers/App.js","webpack:///./src/App.js","webpack:///./src/Paint.js","webpack:///./src/STLViewer.js","webpack:///./src/Three.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/index.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react-input-slider/dist/index.cjs.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/scheduler/cjs/scheduler.production.min.js","webpack:///./~/scheduler/index.js","webpack:///./~/three-orbit-controls/index.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_App","_App2","ReactDOM","render","createElement","document","getElementById","_interopDefault","ex","handleInterpolation","mergedProps","registered","interpolation","couldBeSelectorInterpolation","undefined","__emotion_styles","anim","cursor","name","styles","next","createStringFromObject","previousCursor","result","cached","string","Array","isArray","i","length","_key","value","isProcessableValue","processStyleName","processStyleValue","interpolated","_i","Object","defineProperty","hashString","unitless","memoize","hyphenateRegex","animationRegex","isCustomProperty","property","charCodeAt","styleName","replace","toLowerCase","key","match","p1","p2","labelPattern","serializeStyles","args","stringMode","strings","raw","lastIndex","identifierName","exec","_inheritsLoose","subClass","superClass","prototype","create","constructor","setPrototypeOf","toSheet","block","Sheet","current","insert","sheet","Stylis","delimiter","needle","ruleSheet","context","content","selectors","parents","line","column","ns","depth","at","split","forEach","createCache","options","stylisOptions","prefix","container","stylis","inserted","head","nodes","querySelectorAll","node","attrib","getAttribute","parentNode","appendChild","_insert","use","stylisPlugins","selector","serialized","shouldCache","cache","StyleSheet","nonce","speedy","css","_len","arguments","serialize","sheetForTag","tag","styleSheets","ownerNode","createStyleElement","setAttribute","createTextNode","this","isSpeedy","tags","ctr","before","_proto","rule","_tag","nextSibling","insertBefore","push","isImportRule","insertRule","cssRules","e","flush","removeChild","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","isBrowser","insertStyles","isStringTag","compat","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","letter","keys","err","getOwnPropertySymbols","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","_extends","bind","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_setPrototypeOf","o","__proto__","merge","utils","React","emotionElement","_inheritsLoose__default","css__default","jsx","type","props","argsLength","createElementArgArray","Emotion","createEmotionProps","Global","withEmotionCache","ThemeContext","Consumer","theme","InnerGlobal","_React$Component","updater","componentDidMount","querySelector","componentDidUpdate","prevProps","element","nextElementSibling","componentWillUnmount","Component","keyframes","insertable","toString","classnames","len","cls","arg","toAdd","k","Noop","ClassNames","hasRendered","cx","_len2","_key2","ele","children","possiblyStyleElement","Fragment","CacheProvider","enumerable","get","createCache__default","EmotionCacheContext","createContext","HTMLElement","Provider","func","ref","forwardRef","typePropName","newProps","cssProp","murmur2","str","h","fn","stylis_min","W","M","d","a","q","g","y","C","b","v","x","K","u","l","r","I","t","B","J","f","F","G","N","trim","charAt","substring","ca","O","A","X","H","D","z","da","ea","fa","w","L","P","Y","E","ha","Q","ia","Z","ja","ka","test","aa","ba","la","ma","R","na","oa","S","T","U","V","set","unitlessKeys","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","msGridRow","msGridRowSpan","msGridColumn","msGridColumnSpan","fontWeight","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","WebkitLineClamp","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","weakMemoize","WeakMap","has","ret","App","models","color","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","Symbol","iterator","done","return","_STLViewer","_STLViewer2","_reactInputSlider","_reactInputSlider2","_props$rotate","rotate","_useState","useState","_useState2","sliders","setSliders","useEffect","_","index","style","margin","item","onClick","newSliders","checked","axis","xstep","xmin","xmax","onChange","_ref","parseFloat","marginLeft","modelColor","_classCallCheck","instance","Constructor","_createClass","defineProperties","descriptor","configurable","writable","protoProps","staticProps","_Three","_Three2","OrbitControls","THREE","DIRECTIONAL_LIGHT","Paint","loader","STLLoader","scene","Scene","renderer","WebGLRenderer","antialias","reqNumber","light","_this","component","width","height","backgroundColor","orbitControls","cameraX","cameraY","cameraZ","rotationSpeeds","lights","lightColor","model","animationRequestId","cancelAnimationFrame","distance","addSTLToScene","meshMaterial","filter","material","updateMatrix","directionalLight","DirectionalLight","position","normalize","add","url","reqId","_this2","Promise","resolve","crossOrigin","loadFromUrl","geometry","file","_this3","loadFromFile","_this4","hasMultipleLights","reduce","acc","addLight","loadSTLFromUrl","then","computeFaceNormals","computeVertexNormals","MeshLambertMaterial","transparent","side","DoubleSide","visible","hasColors","MeshPhongMaterial","alpha","vertexColors","VertexColors","mesh","Mesh","computeBoundingBox","computeBoundingSphere","xDims","boundingBox","max","min","yDims","zDims","rotation","addCamera","copy","camera","addInteractionControls","addToReactComponent","animate","find","PerspectiveCamera","Math","lookAt","physicallyCorrectLights","setSize","setClearColor","controls","dispose","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","requestAnimationFrame","update","getObjectByName","remove","directionalLightObj","forceContextLoss","_possibleConstructorReturn","self","ReferenceError","_inherits","_propTypes","_propTypes2","_Paint","_Paint2","STLViewer","_Component","getPrototypeOf","paint","init","nextProps","nextState","JSON","stringify","clean","_props","overflow","display","justifyContent","alignItems","propTypes","PropTypes","number","bool","array","arrayOf","oneOfType","instanceOf","ArrayBuffer","isRequired","defaultProps","manager","DefaultLoadingManager","onLoad","onProgress","onError","scope","XHRLoader","setCrossOrigin","setResponseType","load","text","parse","buffer","data","isBinary","expect","face_size","n_faces","reader","DataView","binData","getUint32","byteLength","fileLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","colors","defaultR","defaultG","defaultB","faces","Float32Array","dataOffset","faceLength","offset","BufferGeometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","addAttribute","BufferAttribute","normal","patternFace","patternNormal","patternVertex","Geometry","Vector3","Face3","buf","array_buffer","Uint8Array","byteOffset","_isString","_getCharCodes","end","codes","_getBytes","littleEndian","_littleEndian","Error","isString","slice","reverse","getFloat64","sign","exponent","mantissa","pow","NaN","Infinity","getInt32","getInt16","getInt8","emptyFunction","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","object","symbol","any","objectOf","oneOf","shape","exact","checkPropTypes","encodeURIComponent","acceptsBooleans","isNaN","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","pa","toUpperCase","qa","removeAttribute","setAttributeNS","La","Ka","Na","Ma","stack","Pa","Oa","prepareStackTrace","Reflect","construct","displayName","Qa","_render","Ra","ua","ta","xa","wa","Ba","Ca","$$typeof","za","ya","_context","Aa","Da","Fa","Ea","_payload","_init","Sa","Ta","nodeName","Ua","getOwnPropertyDescriptor","getValue","setValue","stopTracking","_valueTracker","Va","Wa","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","$a","ab","bb","cb","ownerDocument","db","Children","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","lb","mb","pb","lastChild","nodeType","nodeValue","sb","qb","tb","setProperty","vb","ub","wb","is","xb","srcElement","window","correspondingUseElement","Bb","Cb","yb","stateNode","Db","Eb","zb","Ab","Fb","Gb","Hb","Ib","Mb","Nb","Lb","Jb","Ob","Rb","Xb","Sb","Tb","Wb","Yb","Ub","Vb","Zb","alternate","flags","$b","memoizedState","dehydrated","ac","bc","child","sibling","cc","dc","rc","blockedOn","domEventName","eventSystemFlags","nativeEvent","targetContainers","sc","kc","lc","mc","nc","delete","pointerId","oc","tc","fc","uc","vc","wc","hc","lanePriority","unstable_runWithPriority","priority","gc","hydrate","containerInfo","xc","yc","shift","zc","Ac","ic","jc","ec","Bc","unstable_scheduleCallback","unstable_NormalPriority","Cc","pc","Dc","Hc","Fc","Ec","Gc","Pc","Nc","Mc","Rc","Sc","Tc","Uc","pendingLanes","expiredLanes","suspendedLanes","pingedLanes","Vc","entangledLanes","entanglements","Wc","Xc","Yc","Zc","$c","eventTimes","ad","bd","cd","gd","Kb","hd","ed","dd","fd","qc","jd","nd","md","ld","kd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","stopPropagation","cancelBubble","persist","isPersistent","Pd","getModifierState","Od","zd","ge","$d","he","detail","je","which","fe","ee","ke","ie","ae","ctrlKey","altKey","metaKey","char","de","locale","me","le","ne","oe","td","event","listeners","re","se","te","ue","ve","Ae","pe","detachEvent","Be","qe","Ce","attachEvent","De","Ee","Fe","Ge","Je","He","Ie","Ke","Le","Me","contains","compareDocumentPosition","Ne","HTMLIFrameElement","contentWindow","href","Oe","contentEditable","Ue","Te","Qe","selectionStart","selectionEnd","defaultView","getSelection","anchorNode","anchorOffset","focusNode","focusOffset","Se","Re","Ze","listener","$e","af","cf","bf","Ye","df","Pb","capture","passive","Rd","Fd","button","Bd","Dd","Vd","Ic","Jc","Kc","Hd","Lc","Xd","vd","Zd","Jd","Td","ef","relatedTarget","fromElement","ff","parentWindow","toElement","gf","hf","we","Pe","Ld","ce","unshift","jf","mf","autoFocus","nf","__html","qf","rf","sf","previousSibling","uf","Ga","valueOf","wf","xf","yf","Set","Bf","Af","zf","Ef","contextTypes","Cf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Ff","childContextTypes","Gf","Hf","If","getChildContext","Jf","__reactInternalMemoizedMergedChildContext","Df","Kf","eg","Tf","Uf","Vf","Wf","Xf","Yf","fg","gg","Nf","hg","Of","ig","bg","Pf","jg","cg","ag","lg","qg","pg","og","ng","rg","mg","_currentValue","sg","childLanes","tg","dependencies","firstContext","lanes","ug","vg","observedBits","responders","xg","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","yg","zg","eventTime","lane","payload","callback","Ag","Bg","Cg","wg","Dg","Eg","Gg","Lg","shouldComponentUpdate","isPureReactComponent","Mg","contextType","state","Kg","_reactInternals","Ng","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","enqueueReplaceState","Og","refs","Fg","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","Qg","_owner","_stringRef","Rg","Sg","lastEffect","nextEffect","firstEffect","Map","Tg","Ug","mode","elementType","Vg","implementation","Wg","Xg","sa","Pg","dh","$g","eh","ch","bh","ah","documentElement","namespaceURI","tagName","fh","gh","hh","ih","memoizedProps","revealOrder","mh","nh","oh","pendingProps","ph","lh","kh","jh","qh","rh","sh","uh","th","_workInProgressVersionPrimary","Ah","Bh","Ch","xh","vh","Dh","Eh","zh","Fh","Gh","yh","Hh","baseQueue","queue","Ih","Jh","Kh","lastRenderedReducer","action","eagerReducer","eagerState","lastRenderedState","dispatch","Lh","Mh","_getVersion","_source","mutableReadLanes","Nh","getSnapshot","subscribe","setSnapshot","Ig","Oh","Ph","Qh","Rh","destroy","deps","Sh","Th","Uh","Vh","Wh","Xh","Yh","Zh","$h","concat","ai","bi","ci","di","wh","transition","Hg","Jg","fi","Zg","Yg","gi","hi","ii","ji","compare","ki","li","mi","baseLanes","ni","oi","pi","UNSAFE_componentWillUpdate","componentWillUpdate","qi","ei","getDerivedStateFromError","ri","pendingContext","ti","fallback","unstable_avoidThisFallback","ui","si","unstable_expectedLoadTime","vi","wi","xi","yi","zi","isBackwards","rendering","renderingStartTime","last","tail","tailMode","Ai","Fi","Gi","Ci","Di","Xe","wasMultiple","multiple","onclick","kb","html","innerHTML","size","createElementNS","Bi","ob","Ei","Hi","Ii","Ji","Ki","Li","Mi","message","Ni","setTimeout","Pi","Qi","Ri","Si","componentDidCatch","Ti","componentStack","Vi","Wi","Xi","__reactInternalSnapshotBeforeUpdate","Yi","Zi","$i","focus","aj","bj","Mf","onCommitFiberUnmount","Lf","cj","dj","ej","fj","gj","hj","_reactRootContainer","ij","jj","kj","Ui","lj","mj","wj","Fj","Gj","tj","kg","Hj","vj","Dj","Ej","Kj","Lj","Mj","Cj","callbackNode","expirationTimes","Zf","callbackPriority","Nj","Oj","Pj","Qj","Rj","Sj","oj","Tj","sj","finishedWork","finishedLanes","Uj","timeoutHandle","of","nj","uj","Vj","Wj","Xj","rj","qj","pf","pj","pingCache","Oi","Yj","Zj","va","ak","bk","Qf","ck","dk","yj","kf","rangeCount","lf","focusedElem","selectionRange","Ij","Jj","ek","extend","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","$f","xj","zj","onCommitFiberRoot","fk","Aj","Bj","gk","ik","isReactComponent","hk","Ha","Ia","Ja","pendingChildren","jk","mutableSourceEagerHydrationData","kk","lk","mk","nk","retryLane","ok","pk","qk","hydrationOptions","mutableSources","_internalRoot","rk","sk","hasAttribute","tk","uk","xlinkHref","ra","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","for","nb","mathml","svg","MSApp","execUnsafeLocalFunction","gridArea","lineClamp","rb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","Qb","removeEventListener","animationend","animationiteration","animationstart","transitionend","animation","Oc","Qc","unstable_now","wd","xd","yd","clz32","log","LN2","unstable_UserBlockingPriority","sd","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","ud","view","Ad","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","buttons","movementX","movementY","Cd","dataTransfer","Ed","Gd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Kd","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","Alt","Control","Meta","Shift","Qd","code","repeat","Sd","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Ud","touches","targetTouches","changedTouches","Wd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","be","documentMode","date","datetime","datetime-local","email","month","password","range","search","tel","time","week","xe","ye","ze","oninput","Ve","We","random","clearTimeout","tf","vf","unstable_cancelCallback","unstable_shouldYield","Rf","unstable_requestPaint","Sf","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_LowPriority","unstable_IdlePriority","dg","ReactCurrentBatchConfig","isMounted","enqueueSetState","enqueueForceUpdate","ReactCurrentDispatcher","readContext","useCallback","useContext","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useMutableSource","useOpaqueIdentifier","unstable_isNewReconciler","ReactCurrentOwner","WeakSet","ceil","_calculateChangedBits","unstable_observedBits","unmount","form","vk","Events","wk","findFiberByHostInstance","bundleType","version","rendererPackageName","xk","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","yk","isDisabled","supportsFiber","inject","createPortal","flushSync","unmountComponentAtNode","unstable_batchedUpdates","unstable_createPortal","unstable_renderSubtreeIntoContainer","getClientPosition","finger","_css","core","react","borderRadius","userSelect","boxSizing","active","thumb","boxShadow","xy","Slider","getPosition","ymin","ymax","change","_ref2","_container$current$ge","getBoundingClientRect","dx","dy","parseInt","ystep","xreverse","yreverse","handleMouseDown","stopImmediatePropagation","dom","handle","clientPos","offsetLeft","offsetTop","handleDrag","handleDragEnd","onDragStart","getPos","onDragEnd","handleTrackMouseDown","rect","customStyles","pos","valueStyle","handleStyle","transform","styles$1","onTouchStart","onMouseDown","escape","=",":","_status","_result","StrictMode","Profiler","Suspense","setState","forceUpdate","__self","__source","IsSomeRendererActing","count","toArray","only","PureComponent","cloneElement","_currentValue2","_threadCount","createFactory","createRef","isValidElement","lazy","memo","pop","sortIndex","startTime","expirationTime","priorityLevel","performance","MessageChannel","unstable_forceFrameRate","floor","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","delay","unstable_wrapCallback","OrbitConstraint","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","matrix","elements","multiplyScalar","panUp","pan","screenWidth","screenHeight","clone","sub","targetDistance","tan","fov","OrthographicCamera","right","bottom","warn","dollyIn","dollyScale","updateProjectionMatrix","dollyOut","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","applyQuaternion","atan2","sqrt","radius","sin","cos","distanceToSquared","dot","quaternion","constraint","clientWidth","clientHeight","getAutoRotationAngle","autoRotateSpeed","getZoomScale","zoomSpeed","enabled","mouseButtons","ORBIT","enableRotate","STATE","ROTATE","rotateStart","ZOOM","enableZoom","DOLLY","dollyStart","PAN","enablePan","panStart","NONE","onMouseMove","onMouseUp","dispatchEvent","startEvent","rotateEnd","rotateDelta","subVectors","rotateSpeed","dollyEnd","dollyDelta","panEnd","panDelta","endEvent","onMouseWheel","delta","onKeyDown","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","touchmove","touchend","contextmenu","center","autoRotate","MOUSE","MIDDLE","Vector2","target0","position0","zoom0","changeEvent","reset","EventDispatcher","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","lastTime","vendors","currTime","timeToCall","Function","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","FlatShading","SmoothShading","NoColors","FaceColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","clear","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","euclideanModulo","clamp","parseAlpha","strAlpha","components","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","getStyle","offsetHSL","addColors","color1","color2","addScalar","multiply","lerp","equals","fromArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","v1","vFrom","vTo","abs","crossVectors","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","slerp","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","qm","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","round","roundToZero","negate","lengthManhattan","distanceTo","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","attributes","positions","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","aspect","degToRad","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Clock","autoStart","oldTime","running","stop","getElapsedTime","getDelta","newTime","hasEventListener","_listeners","listenerArray","splice","descSort","Raycaster","params","Line","LOD","Points","threshold","Sprite","PointCloud","intersectObject","raycaster","intersects","recursive","raycast","linePrecision","setFromCamera","sort","intersectObjects","objects","Object3D","Object3DIdCount","parent","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","toJSON","extractFromCache","values","metadata","isRootObject","geometries","materials","textures","images","generator","output","materialIndex","vertexNormals","Face4","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","fromBufferGeometry","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","AmbientLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","shadowCameraFov","Cache","files","Loader","onLoadStart","onLoadProgress","onLoadComplete","extractUrlBase","parts","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","create_texture","where","sourceFile","wrap","anisotropy","texture","fullPath","Handlers","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","blending","depthTest","depthWrite","flipSided","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","regex","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","json","setTexturePath","parseModel","isBitSet","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","animations","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","overdraw","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","substr","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","cachedUniforms","cachedAttributes","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","extractGlyphPoints","paths","outline","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","play","loop","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","centerUV","segment","heightHalf","verticesRow","uvsRow","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","rows","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"react-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(9);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(20);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('react-app'));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(30);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar hashString = _interopDefault(__webpack_require__(15));\n\tvar unitless = _interopDefault(__webpack_require__(18));\n\tvar memoize = _interopDefault(__webpack_require__(16));\n\t\n\tvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\n\tvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\n\tvar hyphenateRegex = /[A-Z]|^ms/g;\n\tvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\t\n\tvar isCustomProperty = function isCustomProperty(property) {\n\t  return property.charCodeAt(1) === 45;\n\t};\n\t\n\tvar isProcessableValue = function isProcessableValue(value) {\n\t  return value != null && typeof value !== 'boolean';\n\t};\n\t\n\tvar processStyleName = memoize(function (styleName) {\n\t  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n\t});\n\t\n\tvar processStyleValue = function processStyleValue(key, value) {\n\t  switch (key) {\n\t    case 'animation':\n\t    case 'animationName':\n\t      {\n\t        if (typeof value === 'string') {\n\t          return value.replace(animationRegex, function (match, p1, p2) {\n\t            cursor = {\n\t              name: p1,\n\t              styles: p2,\n\t              next: cursor\n\t            };\n\t            return p1;\n\t          });\n\t        }\n\t      }\n\t  }\n\t\n\t  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n\t    return value + 'px';\n\t  }\n\t\n\t  return value;\n\t};\n\t\n\tif (false) {\n\t  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n\t  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n\t  var oldProcessStyleValue = processStyleValue;\n\t  var msPattern = /^-ms-/;\n\t  var hyphenPattern = /-(.)/g;\n\t  var hyphenatedCache = {};\n\t\n\t  processStyleValue = function processStyleValue(key, value) {\n\t    if (key === 'content') {\n\t      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n\t        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n\t      }\n\t    }\n\t\n\t    var processed = oldProcessStyleValue(key, value);\n\t\n\t    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n\t      hyphenatedCache[key] = true;\n\t      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n\t        return _char.toUpperCase();\n\t      }) + \"?\");\n\t    }\n\t\n\t    return processed;\n\t  };\n\t}\n\t\n\tvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\t\n\tfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n\t  if (interpolation == null) {\n\t    return '';\n\t  }\n\t\n\t  if (interpolation.__emotion_styles !== undefined) {\n\t    if (false) {\n\t      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n\t    }\n\t\n\t    return interpolation;\n\t  }\n\t\n\t  switch (typeof interpolation) {\n\t    case 'boolean':\n\t      {\n\t        return '';\n\t      }\n\t\n\t    case 'object':\n\t      {\n\t        if (interpolation.anim === 1) {\n\t          cursor = {\n\t            name: interpolation.name,\n\t            styles: interpolation.styles,\n\t            next: cursor\n\t          };\n\t          return interpolation.name;\n\t        }\n\t\n\t        if (interpolation.styles !== undefined) {\n\t          var next = interpolation.next;\n\t\n\t          if (next !== undefined) {\n\t            // not the most efficient thing ever but this is a pretty rare case\n\t            // and there will be very few iterations of this generally\n\t            while (next !== undefined) {\n\t              cursor = {\n\t                name: next.name,\n\t                styles: next.styles,\n\t                next: cursor\n\t              };\n\t              next = next.next;\n\t            }\n\t          }\n\t\n\t          var styles = interpolation.styles + \";\";\n\t\n\t          if (false) {\n\t            styles += interpolation.map;\n\t          }\n\t\n\t          return styles;\n\t        }\n\t\n\t        return createStringFromObject(mergedProps, registered, interpolation);\n\t      }\n\t\n\t    case 'function':\n\t      {\n\t        if (mergedProps !== undefined) {\n\t          var previousCursor = cursor;\n\t          var result = interpolation(mergedProps);\n\t          cursor = previousCursor;\n\t          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n\t        } else if (false) {\n\t          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n\t        }\n\t\n\t        break;\n\t      }\n\t\n\t    case 'string':\n\t      if (false) {\n\t        var matched = [];\n\t        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n\t          var fakeVarName = \"animation\" + matched.length;\n\t          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n\t          return \"${\" + fakeVarName + \"}\";\n\t        });\n\t\n\t        if (matched.length) {\n\t          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n\t        }\n\t      }\n\t\n\t      break;\n\t  } // finalize string values (regular strings and functions interpolated into css calls)\n\t\n\t\n\t  if (registered == null) {\n\t    return interpolation;\n\t  }\n\t\n\t  var cached = registered[interpolation];\n\t\n\t  if (false) {\n\t    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n\t    shouldWarnAboutInterpolatingClassNameFromCss = false;\n\t  }\n\t\n\t  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n\t}\n\t\n\tfunction createStringFromObject(mergedProps, registered, obj) {\n\t  var string = '';\n\t\n\t  if (Array.isArray(obj)) {\n\t    for (var i = 0; i < obj.length; i++) {\n\t      string += handleInterpolation(mergedProps, registered, obj[i], false);\n\t    }\n\t  } else {\n\t    for (var _key in obj) {\n\t      var value = obj[_key];\n\t\n\t      if (typeof value !== 'object') {\n\t        if (registered != null && registered[value] !== undefined) {\n\t          string += _key + \"{\" + registered[value] + \"}\";\n\t        } else if (isProcessableValue(value)) {\n\t          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n\t        }\n\t      } else {\n\t        if (_key === 'NO_COMPONENT_SELECTOR' && (\"production\") !== 'production') {\n\t          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n\t        }\n\t\n\t        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n\t          for (var _i = 0; _i < value.length; _i++) {\n\t            if (isProcessableValue(value[_i])) {\n\t              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n\t            }\n\t          }\n\t        } else {\n\t          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\t\n\t          switch (_key) {\n\t            case 'animation':\n\t            case 'animationName':\n\t              {\n\t                string += processStyleName(_key) + \":\" + interpolated + \";\";\n\t                break;\n\t              }\n\t\n\t            default:\n\t              {\n\t                if (false) {\n\t                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n\t                }\n\t\n\t                string += _key + \"{\" + interpolated + \"}\";\n\t              }\n\t          }\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  return string;\n\t}\n\t\n\tvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\n\tvar sourceMapPattern;\n\t\n\tif (false) {\n\t  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n\t} // this is the cursor for keyframes\n\t// keyframes are stored on the SerializedStyles object as a linked list\n\t\n\t\n\tvar cursor;\n\tvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n\t  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n\t    return args[0];\n\t  }\n\t\n\t  var stringMode = true;\n\t  var styles = '';\n\t  cursor = undefined;\n\t  var strings = args[0];\n\t\n\t  if (strings == null || strings.raw === undefined) {\n\t    stringMode = false;\n\t    styles += handleInterpolation(mergedProps, registered, strings, false);\n\t  } else {\n\t    if (false) {\n\t      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n\t    }\n\t\n\t    styles += strings[0];\n\t  } // we start at 1 since we've already handled the first arg\n\t\n\t\n\t  for (var i = 1; i < args.length; i++) {\n\t    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\t\n\t    if (stringMode) {\n\t      if (false) {\n\t        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n\t      }\n\t\n\t      styles += strings[i];\n\t    }\n\t  }\n\t\n\t  var sourceMap;\n\t\n\t  if (false) {\n\t    styles = styles.replace(sourceMapPattern, function (match) {\n\t      sourceMap = match;\n\t      return '';\n\t    });\n\t  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\t\n\t\n\t  labelPattern.lastIndex = 0;\n\t  var identifierName = '';\n\t  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\t\n\t  while ((match = labelPattern.exec(styles)) !== null) {\n\t    identifierName += '-' + // $FlowFixMe we know it's not null\n\t    match[1];\n\t  }\n\t\n\t  var name = hashString(styles) + identifierName;\n\t\n\t  if (false) {\n\t    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n\t    return {\n\t      name: name,\n\t      styles: styles,\n\t      map: sourceMap,\n\t      next: cursor,\n\t      toString: function toString() {\n\t        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n\t      }\n\t    };\n\t  }\n\t\n\t  return {\n\t    name: name,\n\t    styles: styles,\n\t    next: cursor\n\t  };\n\t};\n\t\n\texports.serializeStyles = serializeStyles;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar setPrototypeOf = __webpack_require__(12);\n\t\n\tfunction _inheritsLoose(subClass, superClass) {\n\t  subClass.prototype = Object.create(superClass.prototype);\n\t  subClass.prototype.constructor = subClass;\n\t  setPrototypeOf(subClass, superClass);\n\t}\n\t\n\tmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar sheet = __webpack_require__(6);\n\tvar Stylis = _interopDefault(__webpack_require__(17));\n\t__webpack_require__(19);\n\t\n\t// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n\t// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n\t// since we use stylis after closure compiler\n\tvar delimiter = '/*|*/';\n\tvar needle = delimiter + '}';\n\t\n\tfunction toSheet(block) {\n\t  if (block) {\n\t    Sheet.current.insert(block + '}');\n\t  }\n\t}\n\t\n\tvar Sheet = {\n\t  current: null\n\t};\n\tvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n\t  switch (context) {\n\t    // property\n\t    case 1:\n\t      {\n\t        switch (content.charCodeAt(0)) {\n\t          case 64:\n\t            {\n\t              // @import\n\t              Sheet.current.insert(content + ';');\n\t              return '';\n\t            }\n\t          // charcode for l\n\t\n\t          case 108:\n\t            {\n\t              // charcode for b\n\t              // this ignores label\n\t              if (content.charCodeAt(2) === 98) {\n\t                return '';\n\t              }\n\t            }\n\t        }\n\t\n\t        break;\n\t      }\n\t    // selector\n\t\n\t    case 2:\n\t      {\n\t        if (ns === 0) return content + delimiter;\n\t        break;\n\t      }\n\t    // at-rule\n\t\n\t    case 3:\n\t      {\n\t        switch (ns) {\n\t          // @font-face, @page\n\t          case 102:\n\t          case 112:\n\t            {\n\t              Sheet.current.insert(selectors[0] + content);\n\t              return '';\n\t            }\n\t\n\t          default:\n\t            {\n\t              return content + (at === 0 ? delimiter : '');\n\t            }\n\t        }\n\t      }\n\t\n\t    case -2:\n\t      {\n\t        content.split(needle).forEach(toSheet);\n\t      }\n\t  }\n\t};\n\t\n\tvar createCache = function createCache(options) {\n\t  if (options === undefined) options = {};\n\t  var key = options.key || 'css';\n\t  var stylisOptions;\n\t\n\t  if (options.prefix !== undefined) {\n\t    stylisOptions = {\n\t      prefix: options.prefix\n\t    };\n\t  }\n\t\n\t  var stylis = new Stylis(stylisOptions);\n\t\n\t  if (false) {\n\t    // $FlowFixMe\n\t    if (/[^a-z-]/.test(key)) {\n\t      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n\t    }\n\t  }\n\t\n\t  var inserted = {}; // $FlowFixMe\n\t\n\t  var container;\n\t\n\t  {\n\t    container = options.container || document.head;\n\t    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n\t    Array.prototype.forEach.call(nodes, function (node) {\n\t      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\t\n\t      attrib.split(' ').forEach(function (id) {\n\t        inserted[id] = true;\n\t      });\n\t\n\t      if (node.parentNode !== container) {\n\t        container.appendChild(node);\n\t      }\n\t    });\n\t  }\n\t\n\t  var _insert;\n\t\n\t  {\n\t    stylis.use(options.stylisPlugins)(ruleSheet);\n\t\n\t    _insert = function insert(selector, serialized, sheet, shouldCache) {\n\t      var name = serialized.name;\n\t      Sheet.current = sheet;\n\t\n\t      if (false) {\n\t        var map = serialized.map;\n\t        Sheet.current = {\n\t          insert: function insert(rule) {\n\t            sheet.insert(rule + map);\n\t          }\n\t        };\n\t      }\n\t\n\t      stylis(selector, serialized.styles);\n\t\n\t      if (shouldCache) {\n\t        cache.inserted[name] = true;\n\t      }\n\t    };\n\t  }\n\t\n\t  if (false) {\n\t    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n\t    var commentStart = /\\/\\*/g;\n\t    var commentEnd = /\\*\\//g;\n\t    stylis.use(function (context, content) {\n\t      switch (context) {\n\t        case -1:\n\t          {\n\t            while (commentStart.test(content)) {\n\t              commentEnd.lastIndex = commentStart.lastIndex;\n\t\n\t              if (commentEnd.test(content)) {\n\t                commentStart.lastIndex = commentEnd.lastIndex;\n\t                continue;\n\t              }\n\t\n\t              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n\t            }\n\t\n\t            commentStart.lastIndex = 0;\n\t            break;\n\t          }\n\t      }\n\t    });\n\t    stylis.use(function (context, content, selectors) {\n\t      switch (context) {\n\t        case -1:\n\t          {\n\t            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\t            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\t\n\t            if (unsafePseudoClasses && cache.compat !== true) {\n\t              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n\t                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n\t                var ignore = ignoreRegExp.test(content);\n\t\n\t                if (unsafePseudoClass && !ignore) {\n\t                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n\t                }\n\t              });\n\t            }\n\t\n\t            break;\n\t          }\n\t      }\n\t    });\n\t  }\n\t\n\t  var cache = {\n\t    key: key,\n\t    sheet: new sheet.StyleSheet({\n\t      key: key,\n\t      container: container,\n\t      nonce: options.nonce,\n\t      speedy: options.speedy\n\t    }),\n\t    nonce: options.nonce,\n\t    inserted: inserted,\n\t    registered: {},\n\t    insert: _insert\n\t  };\n\t  return cache;\n\t};\n\t\n\texports.default = createCache;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tvar serialize = __webpack_require__(2);\n\t\n\tfunction css() {\n\t  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n\t    args[_key] = arguments[_key];\n\t  }\n\t\n\t  return serialize.serializeStyles(args);\n\t}\n\t\n\texports.default = css;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t/*\n\t\n\tBased off glamor's StyleSheet, thanks Sunil ❤️\n\t\n\thigh performance StyleSheet for css-in-js systems\n\t\n\t- uses multiple style tags behind the scenes for millions of rules\n\t- uses `insertRule` for appending in production for *much* faster performance\n\t\n\t// usage\n\t\n\timport { StyleSheet } from '@emotion/sheet'\n\t\n\tlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\t\n\tstyleSheet.insert('#box { border: 1px solid red; }')\n\t- appends a css rule into the stylesheet\n\t\n\tstyleSheet.flush()\n\t- empties the stylesheet of all its contents\n\t\n\t*/\n\t// $FlowFixMe\n\tfunction sheetForTag(tag) {\n\t  if (tag.sheet) {\n\t    // $FlowFixMe\n\t    return tag.sheet;\n\t  } // this weirdness brought to you by firefox\n\t\n\t  /* istanbul ignore next */\n\t\n\t\n\t  for (var i = 0; i < document.styleSheets.length; i++) {\n\t    if (document.styleSheets[i].ownerNode === tag) {\n\t      // $FlowFixMe\n\t      return document.styleSheets[i];\n\t    }\n\t  }\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t  var tag = document.createElement('style');\n\t  tag.setAttribute('data-emotion', options.key);\n\t\n\t  if (options.nonce !== undefined) {\n\t    tag.setAttribute('nonce', options.nonce);\n\t  }\n\t\n\t  tag.appendChild(document.createTextNode(''));\n\t  return tag;\n\t}\n\t\n\tvar StyleSheet =\n\t/*#__PURE__*/\n\tfunction () {\n\t  function StyleSheet(options) {\n\t    this.isSpeedy = options.speedy === undefined ? (\"production\") === 'production' : options.speedy;\n\t    this.tags = [];\n\t    this.ctr = 0;\n\t    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\t\n\t    this.key = options.key;\n\t    this.container = options.container;\n\t    this.before = null;\n\t  }\n\t\n\t  var _proto = StyleSheet.prototype;\n\t\n\t  _proto.insert = function insert(rule) {\n\t    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n\t    // it's 1 in dev because we insert source maps that map a single rule to a location\n\t    // and you can only have one source map per style tag\n\t    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n\t      var _tag = createStyleElement(this);\n\t\n\t      var before;\n\t\n\t      if (this.tags.length === 0) {\n\t        before = this.before;\n\t      } else {\n\t        before = this.tags[this.tags.length - 1].nextSibling;\n\t      }\n\t\n\t      this.container.insertBefore(_tag, before);\n\t      this.tags.push(_tag);\n\t    }\n\t\n\t    var tag = this.tags[this.tags.length - 1];\n\t\n\t    if (this.isSpeedy) {\n\t      var sheet = sheetForTag(tag);\n\t\n\t      try {\n\t        // this is a really hot path\n\t        // we check the second character first because having \"i\"\n\t        // as the second character will happen less often than\n\t        // having \"@\" as the first character\n\t        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n\t        // the big drawback is that the css won't be editable in devtools\n\t\n\t        sheet.insertRule(rule, // we need to insert @import rules before anything else\n\t        // otherwise there will be an error\n\t        // technically this means that the @import rules will\n\t        // _usually_(not always since there could be multiple style tags)\n\t        // be the first ones in prod and generally later in dev\n\t        // this shouldn't really matter in the real world though\n\t        // @import is generally only used for font faces from google fonts and etc.\n\t        // so while this could be technically correct then it would be slower and larger\n\t        // for a tiny bit of correctness that won't matter in the real world\n\t        isImportRule ? 0 : sheet.cssRules.length);\n\t      } catch (e) {\n\t        if (false) {\n\t          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n\t        }\n\t      }\n\t    } else {\n\t      tag.appendChild(document.createTextNode(rule));\n\t    }\n\t\n\t    this.ctr++;\n\t  };\n\t\n\t  _proto.flush = function flush() {\n\t    // $FlowFixMe\n\t    this.tags.forEach(function (tag) {\n\t      return tag.parentNode.removeChild(tag);\n\t    });\n\t    this.tags = [];\n\t    this.ctr = 0;\n\t  };\n\t\n\t  return StyleSheet;\n\t}();\n\t\n\texports.StyleSheet = StyleSheet;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tvar isBrowser = \"object\" !== 'undefined';\n\tfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n\t  var rawClassName = '';\n\t  classNames.split(' ').forEach(function (className) {\n\t    if (registered[className] !== undefined) {\n\t      registeredStyles.push(registered[className]);\n\t    } else {\n\t      rawClassName += className + \" \";\n\t    }\n\t  });\n\t  return rawClassName;\n\t}\n\tvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n\t  var className = cache.key + \"-\" + serialized.name;\n\t\n\t  if ( // we only need to add the styles to the registered cache if the\n\t  // class name could be used further down\n\t  // the tree but if it's a string tag, we know it won't\n\t  // so we don't have to add it to registered cache.\n\t  // this improves memory usage since we can avoid storing the whole style string\n\t  (isStringTag === false || // we need to always store it if we're in compat mode and\n\t  // in node since emotion-server relies on whether a style is in\n\t  // the registered cache to know whether a style is global or not\n\t  // also, note that this check will be dead code eliminated in the browser\n\t  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n\t    cache.registered[className] = serialized.styles;\n\t  }\n\t\n\t  if (cache.inserted[serialized.name] === undefined) {\n\t    var current = serialized;\n\t\n\t    do {\n\t      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\t\n\t      current = current.next;\n\t    } while (current !== undefined);\n\t  }\n\t};\n\t\n\texports.getRegisteredStyles = getRegisteredStyles;\n\texports.insertStyles = insertStyles;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(28);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n\tfunction _extends() {\n\t  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n\t    for (var i = 1; i < arguments.length; i++) {\n\t      var source = arguments[i];\n\t\n\t      for (var key in source) {\n\t        if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t          target[key] = source[key];\n\t        }\n\t      }\n\t    }\n\t\n\t    return target;\n\t  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\t  return _extends.apply(this, arguments);\n\t}\n\t\n\tmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\n\tfunction _objectWithoutPropertiesLoose(source, excluded) {\n\t  if (source == null) return {};\n\t  var target = {};\n\t  var sourceKeys = Object.keys(source);\n\t  var key, i;\n\t\n\t  for (i = 0; i < sourceKeys.length; i++) {\n\t    key = sourceKeys[i];\n\t    if (excluded.indexOf(key) >= 0) continue;\n\t    target[key] = source[key];\n\t  }\n\t\n\t  return target;\n\t}\n\t\n\tmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n\tfunction _setPrototypeOf(o, p) {\n\t  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n\t    o.__proto__ = p;\n\t    return o;\n\t  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\t  return _setPrototypeOf(o, p);\n\t}\n\t\n\tmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tvar _inheritsLoose = __webpack_require__(3);\n\tvar React = __webpack_require__(1);\n\t__webpack_require__(4);\n\tvar emotionElement = __webpack_require__(14);\n\tvar utils = __webpack_require__(7);\n\tvar serialize = __webpack_require__(2);\n\tvar sheet = __webpack_require__(6);\n\tvar css = __webpack_require__(5);\n\t\n\tfunction _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }\n\t\n\tvar _inheritsLoose__default = /*#__PURE__*/_interopDefault(_inheritsLoose);\n\tvar css__default = /*#__PURE__*/_interopDefault(css);\n\t\n\tvar jsx = function jsx(type, props) {\n\t  var args = arguments;\n\t\n\t  if (props == null || !emotionElement.hasOwnProperty.call(props, 'css')) {\n\t    // $FlowFixMe\n\t    return React.createElement.apply(undefined, args);\n\t  }\n\t\n\t  var argsLength = args.length;\n\t  var createElementArgArray = new Array(argsLength);\n\t  createElementArgArray[0] = emotionElement.Emotion;\n\t  createElementArgArray[1] = emotionElement.createEmotionProps(type, props);\n\t\n\t  for (var i = 2; i < argsLength; i++) {\n\t    createElementArgArray[i] = args[i];\n\t  } // $FlowFixMe\n\t\n\t\n\t  return React.createElement.apply(null, createElementArgArray);\n\t};\n\t\n\tvar warnedAboutCssPropForGlobal = false;\n\tvar Global = /* #__PURE__ */emotionElement.withEmotionCache(function (props, cache) {\n\t  if (false) {\n\t    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n\t    warnedAboutCssPropForGlobal = true;\n\t  }\n\t\n\t  var styles = props.styles;\n\t\n\t  if (typeof styles === 'function') {\n\t    return /*#__PURE__*/React.createElement(emotionElement.ThemeContext.Consumer, null, function (theme) {\n\t      var serialized = serialize.serializeStyles([styles(theme)]);\n\t      return /*#__PURE__*/React.createElement(InnerGlobal, {\n\t        serialized: serialized,\n\t        cache: cache\n\t      });\n\t    });\n\t  }\n\t\n\t  var serialized = serialize.serializeStyles([styles]);\n\t  return /*#__PURE__*/React.createElement(InnerGlobal, {\n\t    serialized: serialized,\n\t    cache: cache\n\t  });\n\t});\n\t\n\t// maintain place over rerenders.\n\t// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n\t// initial client-side render from SSR, use place of hydrating tag\n\tvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n\t  _inheritsLoose__default['default'](InnerGlobal, _React$Component);\n\t\n\t  function InnerGlobal(props, context, updater) {\n\t    return _React$Component.call(this, props, context, updater) || this;\n\t  }\n\t\n\t  var _proto = InnerGlobal.prototype;\n\t\n\t  _proto.componentDidMount = function componentDidMount() {\n\t    this.sheet = new sheet.StyleSheet({\n\t      key: this.props.cache.key + \"-global\",\n\t      nonce: this.props.cache.sheet.nonce,\n\t      container: this.props.cache.sheet.container\n\t    }); // $FlowFixMe\n\t\n\t    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\t\n\t    if (node !== null) {\n\t      this.sheet.tags.push(node);\n\t    }\n\t\n\t    if (this.props.cache.sheet.tags.length) {\n\t      this.sheet.before = this.props.cache.sheet.tags[0];\n\t    }\n\t\n\t    this.insertStyles();\n\t  };\n\t\n\t  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n\t    if (prevProps.serialized.name !== this.props.serialized.name) {\n\t      this.insertStyles();\n\t    }\n\t  };\n\t\n\t  _proto.insertStyles = function insertStyles() {\n\t    if (this.props.serialized.next !== undefined) {\n\t      // insert keyframes\n\t      utils.insertStyles(this.props.cache, this.props.serialized.next, true);\n\t    }\n\t\n\t    if (this.sheet.tags.length) {\n\t      // if this doesn't exist then it will be null so the style element will be appended\n\t      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n\t      this.sheet.before = element;\n\t      this.sheet.flush();\n\t    }\n\t\n\t    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n\t  };\n\t\n\t  _proto.componentWillUnmount = function componentWillUnmount() {\n\t    this.sheet.flush();\n\t  };\n\t\n\t  _proto.render = function render() {\n\t\n\t    return null;\n\t  };\n\t\n\t  return InnerGlobal;\n\t}(React.Component);\n\t\n\tvar keyframes = function keyframes() {\n\t  var insertable = css__default['default'].apply(void 0, arguments);\n\t  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\t\n\t  return {\n\t    name: name,\n\t    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n\t    anim: 1,\n\t    toString: function toString() {\n\t      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n\t    }\n\t  };\n\t};\n\t\n\tvar classnames = function classnames(args) {\n\t  var len = args.length;\n\t  var i = 0;\n\t  var cls = '';\n\t\n\t  for (; i < len; i++) {\n\t    var arg = args[i];\n\t    if (arg == null) continue;\n\t    var toAdd = void 0;\n\t\n\t    switch (typeof arg) {\n\t      case 'boolean':\n\t        break;\n\t\n\t      case 'object':\n\t        {\n\t          if (Array.isArray(arg)) {\n\t            toAdd = classnames(arg);\n\t          } else {\n\t            toAdd = '';\n\t\n\t            for (var k in arg) {\n\t              if (arg[k] && k) {\n\t                toAdd && (toAdd += ' ');\n\t                toAdd += k;\n\t              }\n\t            }\n\t          }\n\t\n\t          break;\n\t        }\n\t\n\t      default:\n\t        {\n\t          toAdd = arg;\n\t        }\n\t    }\n\t\n\t    if (toAdd) {\n\t      cls && (cls += ' ');\n\t      cls += toAdd;\n\t    }\n\t  }\n\t\n\t  return cls;\n\t};\n\t\n\tfunction merge(registered, css, className) {\n\t  var registeredStyles = [];\n\t  var rawClassName = utils.getRegisteredStyles(registered, registeredStyles, className);\n\t\n\t  if (registeredStyles.length < 2) {\n\t    return className;\n\t  }\n\t\n\t  return rawClassName + css(registeredStyles);\n\t}\n\t\n\tvar Noop = function Noop() {\n\t  return null;\n\t};\n\t\n\tvar ClassNames = emotionElement.withEmotionCache(function (props, context) {\n\t  return /*#__PURE__*/React.createElement(emotionElement.ThemeContext.Consumer, null, function (theme) {\n\t    var hasRendered = false;\n\t\n\t    var css = function css() {\n\t      if (hasRendered && (\"production\") !== 'production') {\n\t        throw new Error('css can only be used during render');\n\t      }\n\t\n\t      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n\t        args[_key] = arguments[_key];\n\t      }\n\t\n\t      var serialized = serialize.serializeStyles(args, context.registered);\n\t\n\t      {\n\t        utils.insertStyles(context, serialized, false);\n\t      }\n\t\n\t      return context.key + \"-\" + serialized.name;\n\t    };\n\t\n\t    var cx = function cx() {\n\t      if (hasRendered && (\"production\") !== 'production') {\n\t        throw new Error('cx can only be used during render');\n\t      }\n\t\n\t      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t        args[_key2] = arguments[_key2];\n\t      }\n\t\n\t      return merge(context.registered, css, classnames(args));\n\t    };\n\t\n\t    var content = {\n\t      css: css,\n\t      cx: cx,\n\t      theme: theme\n\t    };\n\t    var ele = props.children(content);\n\t    hasRendered = true;\n\t    var possiblyStyleElement = /*#__PURE__*/React.createElement(Noop, null);\n\t\n\t\n\t    return /*#__PURE__*/React.createElement(React.Fragment, null, possiblyStyleElement, ele);\n\t  });\n\t});\n\t\n\texports.CacheProvider = emotionElement.CacheProvider;\n\texports.ThemeContext = emotionElement.ThemeContext;\n\texports.withEmotionCache = emotionElement.withEmotionCache;\n\tObject.defineProperty(exports, 'css', {\n\t  enumerable: true,\n\t  get: function () {\n\t    return css__default['default'];\n\t  }\n\t});\n\texports.ClassNames = ClassNames;\n\texports.Global = Global;\n\texports.createElement = jsx;\n\texports.jsx = jsx;\n\texports.keyframes = keyframes;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(3);\n\tvar React = __webpack_require__(1);\n\tvar createCache = __webpack_require__(4);\n\tvar utils = __webpack_require__(7);\n\tvar serialize = __webpack_require__(2);\n\t\n\tfunction _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }\n\t\n\tvar createCache__default = /*#__PURE__*/_interopDefault(createCache);\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tvar EmotionCacheContext = /*#__PURE__*/React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n\t// because this module is primarily intended for the browser and node\n\t// but it's also required in react native and similar environments sometimes\n\t// and we could have a special build just for that\n\t// but this is much easier and the native packages\n\t// might use a different theme context in the future anyway\n\ttypeof HTMLElement !== 'undefined' ? createCache__default['default']() : null);\n\tvar ThemeContext = /*#__PURE__*/React.createContext({});\n\tvar CacheProvider = EmotionCacheContext.Provider;\n\t\n\tvar withEmotionCache = function withEmotionCache(func) {\n\t  var render = function render(props, ref) {\n\t    return /*#__PURE__*/React.createElement(EmotionCacheContext.Consumer, null, function (cache) {\n\t      return func(props, cache, ref);\n\t    });\n\t  }; // $FlowFixMe\n\t\n\t\n\t  return /*#__PURE__*/React.forwardRef(render);\n\t};\n\t\n\t// thus we only need to replace what is a valid character for JS, but not for CSS\n\t\n\tvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n\t  return identifier.replace(/\\$/g, '-');\n\t};\n\t\n\tvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\n\tvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\n\tvar createEmotionProps = function createEmotionProps(type, props) {\n\t  if (false) {\n\t    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n\t  }\n\t\n\t  var newProps = {};\n\t\n\t  for (var key in props) {\n\t    if (hasOwnProperty.call(props, key)) {\n\t      newProps[key] = props[key];\n\t    }\n\t  }\n\t\n\t  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\t\n\t  if (false) {\n\t    var error = new Error();\n\t\n\t    if (error.stack) {\n\t      // chrome\n\t      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\t\n\t      if (!match) {\n\t        // safari and firefox\n\t        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n\t      }\n\t\n\t      if (match) {\n\t        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n\t      }\n\t    }\n\t  }\n\t\n\t  return newProps;\n\t};\n\t\n\tvar Noop = function Noop() {\n\t  return null;\n\t};\n\t\n\tvar render = function render(cache, props, theme, ref) {\n\t  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n\t  // not passing the registered cache to serializeStyles because it would\n\t  // make certain babel optimisations not possible\n\t\n\t  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n\t    cssProp = cache.registered[cssProp];\n\t  }\n\t\n\t  var type = props[typePropName];\n\t  var registeredStyles = [cssProp];\n\t  var className = '';\n\t\n\t  if (typeof props.className === 'string') {\n\t    className = utils.getRegisteredStyles(cache.registered, registeredStyles, props.className);\n\t  } else if (props.className != null) {\n\t    className = props.className + \" \";\n\t  }\n\t\n\t  var serialized = serialize.serializeStyles(registeredStyles);\n\t\n\t  if (false) {\n\t    var labelFromStack = props[labelPropName];\n\t\n\t    if (labelFromStack) {\n\t      serialized = serialize.serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n\t    }\n\t  }\n\t\n\t  var rules = utils.insertStyles(cache, serialized, typeof type === 'string');\n\t  className += cache.key + \"-\" + serialized.name;\n\t  var newProps = {};\n\t\n\t  for (var key in props) {\n\t    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && ((\"production\") === 'production' || key !== labelPropName)) {\n\t      newProps[key] = props[key];\n\t    }\n\t  }\n\t\n\t  newProps.ref = ref;\n\t  newProps.className = className;\n\t  var ele = /*#__PURE__*/React.createElement(type, newProps);\n\t  var possiblyStyleElement = /*#__PURE__*/React.createElement(Noop, null);\n\t\n\t\n\t  return /*#__PURE__*/React.createElement(React.Fragment, null, possiblyStyleElement, ele);\n\t}; // eslint-disable-next-line no-undef\n\t\n\t\n\tvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n\t  if (typeof props.css === 'function') {\n\t    return /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, function (theme) {\n\t      return render(cache, props, theme, ref);\n\t    });\n\t  }\n\t\n\t  return render(cache, props, null, ref);\n\t});\n\t\n\tif (false) {\n\t  Emotion.displayName = 'EmotionCssPropInternal';\n\t}\n\t\n\texports.CacheProvider = CacheProvider;\n\texports.Emotion = Emotion;\n\texports.ThemeContext = ThemeContext;\n\texports.createEmotionProps = createEmotionProps;\n\texports.hasOwnProperty = hasOwnProperty;\n\texports.withEmotionCache = withEmotionCache;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\t/* eslint-disable */\n\t// Inspired by https://github.com/garycourt/murmurhash-js\n\t// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\n\tfunction murmur2(str) {\n\t  // 'm' and 'r' are mixing constants generated offline.\n\t  // They're not really 'magic', they just happen to work well.\n\t  // const m = 0x5bd1e995;\n\t  // const r = 24;\n\t  // Initialize the hash\n\t  var h = 0; // Mix 4 bytes at a time into the hash\n\t\n\t  var k,\n\t      i = 0,\n\t      len = str.length;\n\t\n\t  for (; len >= 4; ++i, len -= 4) {\n\t    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n\t    k =\n\t    /* Math.imul(k, m): */\n\t    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n\t    k ^=\n\t    /* k >>> r: */\n\t    k >>> 24;\n\t    h =\n\t    /* Math.imul(k, m): */\n\t    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n\t    /* Math.imul(h, m): */\n\t    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n\t  } // Handle the last few bytes of the input array\n\t\n\t\n\t  switch (len) {\n\t    case 3:\n\t      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\t\n\t    case 2:\n\t      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\t\n\t    case 1:\n\t      h ^= str.charCodeAt(i) & 0xff;\n\t      h =\n\t      /* Math.imul(h, m): */\n\t      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n\t  } // Do a few final mixes of the hash to ensure the last few\n\t  // bytes are well-incorporated.\n\t\n\t\n\t  h ^= h >>> 13;\n\t  h =\n\t  /* Math.imul(h, m): */\n\t  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n\t  return ((h ^ h >>> 15) >>> 0).toString(36);\n\t}\n\t\n\texports.default = murmur2;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tfunction memoize(fn) {\n\t  var cache = {};\n\t  return function (arg) {\n\t    if (cache[arg] === undefined) cache[arg] = fn(arg);\n\t    return cache[arg];\n\t  };\n\t}\n\t\n\texports.default = memoize;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tfunction stylis_min (W) {\n\t  function M(d, c, e, h, a) {\n\t    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n\t      g = e.charCodeAt(l);\n\t      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\t\n\t      if (0 === b + n + v + m) {\n\t        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n\t          switch (g) {\n\t            case 32:\n\t            case 9:\n\t            case 59:\n\t            case 13:\n\t            case 10:\n\t              break;\n\t\n\t            default:\n\t              f += e.charAt(l);\n\t          }\n\t\n\t          g = 59;\n\t        }\n\t\n\t        switch (g) {\n\t          case 123:\n\t            f = f.trim();\n\t            q = f.charCodeAt(0);\n\t            k = 1;\n\t\n\t            for (t = ++l; l < B;) {\n\t              switch (g = e.charCodeAt(l)) {\n\t                case 123:\n\t                  k++;\n\t                  break;\n\t\n\t                case 125:\n\t                  k--;\n\t                  break;\n\t\n\t                case 47:\n\t                  switch (g = e.charCodeAt(l + 1)) {\n\t                    case 42:\n\t                    case 47:\n\t                      a: {\n\t                        for (u = l + 1; u < J; ++u) {\n\t                          switch (e.charCodeAt(u)) {\n\t                            case 47:\n\t                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n\t                                l = u + 1;\n\t                                break a;\n\t                              }\n\t\n\t                              break;\n\t\n\t                            case 10:\n\t                              if (47 === g) {\n\t                                l = u + 1;\n\t                                break a;\n\t                              }\n\t\n\t                          }\n\t                        }\n\t\n\t                        l = u;\n\t                      }\n\t\n\t                  }\n\t\n\t                  break;\n\t\n\t                case 91:\n\t                  g++;\n\t\n\t                case 40:\n\t                  g++;\n\t\n\t                case 34:\n\t                case 39:\n\t                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n\t                  }\n\t\n\t              }\n\t\n\t              if (0 === k) break;\n\t              l++;\n\t            }\n\t\n\t            k = e.substring(t, l);\n\t            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\t\n\t            switch (q) {\n\t              case 64:\n\t                0 < r && (f = f.replace(N, ''));\n\t                g = f.charCodeAt(1);\n\t\n\t                switch (g) {\n\t                  case 100:\n\t                  case 109:\n\t                  case 115:\n\t                  case 45:\n\t                    r = c;\n\t                    break;\n\t\n\t                  default:\n\t                    r = O;\n\t                }\n\t\n\t                k = M(c, r, k, g, a + 1);\n\t                t = k.length;\n\t                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n\t                if (0 < t) switch (g) {\n\t                  case 115:\n\t                    f = f.replace(da, ea);\n\t\n\t                  case 100:\n\t                  case 109:\n\t                  case 45:\n\t                    k = f + '{' + k + '}';\n\t                    break;\n\t\n\t                  case 107:\n\t                    f = f.replace(fa, '$1 $2');\n\t                    k = f + '{' + k + '}';\n\t                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n\t                    break;\n\t\n\t                  default:\n\t                    k = f + k, 112 === h && (k = (p += k, ''));\n\t                } else k = '';\n\t                break;\n\t\n\t              default:\n\t                k = M(c, X(c, f, I), k, h, a + 1);\n\t            }\n\t\n\t            F += k;\n\t            k = I = r = u = q = 0;\n\t            f = '';\n\t            g = e.charCodeAt(++l);\n\t            break;\n\t\n\t          case 125:\n\t          case 59:\n\t            f = (0 < r ? f.replace(N, '') : f).trim();\n\t            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n\t              case 0:\n\t                break;\n\t\n\t              case 64:\n\t                if (105 === g || 99 === g) {\n\t                  G += f + e.charAt(l);\n\t                  break;\n\t                }\n\t\n\t              default:\n\t                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n\t            }\n\t            I = r = u = q = 0;\n\t            f = '';\n\t            g = e.charCodeAt(++l);\n\t        }\n\t      }\n\t\n\t      switch (g) {\n\t        case 13:\n\t        case 10:\n\t          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n\t          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n\t          z = 1;\n\t          D++;\n\t          break;\n\t\n\t        case 59:\n\t        case 125:\n\t          if (0 === b + n + v + m) {\n\t            z++;\n\t            break;\n\t          }\n\t\n\t        default:\n\t          z++;\n\t          y = e.charAt(l);\n\t\n\t          switch (g) {\n\t            case 9:\n\t            case 32:\n\t              if (0 === n + m + b) switch (x) {\n\t                case 44:\n\t                case 58:\n\t                case 9:\n\t                case 32:\n\t                  y = '';\n\t                  break;\n\t\n\t                default:\n\t                  32 !== g && (y = ' ');\n\t              }\n\t              break;\n\t\n\t            case 0:\n\t              y = '\\\\0';\n\t              break;\n\t\n\t            case 12:\n\t              y = '\\\\f';\n\t              break;\n\t\n\t            case 11:\n\t              y = '\\\\v';\n\t              break;\n\t\n\t            case 38:\n\t              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n\t              break;\n\t\n\t            case 108:\n\t              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n\t                case 2:\n\t                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\t\n\t                case 8:\n\t                  111 === K && (E = K);\n\t              }\n\t              break;\n\t\n\t            case 58:\n\t              0 === n + b + m && (u = l);\n\t              break;\n\t\n\t            case 44:\n\t              0 === b + v + n + m && (r = 1, y += '\\r');\n\t              break;\n\t\n\t            case 34:\n\t            case 39:\n\t              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n\t              break;\n\t\n\t            case 91:\n\t              0 === n + b + v && m++;\n\t              break;\n\t\n\t            case 93:\n\t              0 === n + b + v && m--;\n\t              break;\n\t\n\t            case 41:\n\t              0 === n + b + m && v--;\n\t              break;\n\t\n\t            case 40:\n\t              if (0 === n + b + m) {\n\t                if (0 === q) switch (2 * x + 3 * K) {\n\t                  case 533:\n\t                    break;\n\t\n\t                  default:\n\t                    q = 1;\n\t                }\n\t                v++;\n\t              }\n\t\n\t              break;\n\t\n\t            case 64:\n\t              0 === b + v + n + m + u + k && (k = 1);\n\t              break;\n\t\n\t            case 42:\n\t            case 47:\n\t              if (!(0 < n + m + v)) switch (b) {\n\t                case 0:\n\t                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n\t                    case 235:\n\t                      b = 47;\n\t                      break;\n\t\n\t                    case 220:\n\t                      t = l, b = 42;\n\t                  }\n\t\n\t                  break;\n\t\n\t                case 42:\n\t                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n\t              }\n\t          }\n\t\n\t          0 === b && (f += y);\n\t      }\n\t\n\t      K = x;\n\t      x = g;\n\t      l++;\n\t    }\n\t\n\t    t = p.length;\n\t\n\t    if (0 < t) {\n\t      r = c;\n\t      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n\t      p = r.join(',') + '{' + p + '}';\n\t\n\t      if (0 !== w * E) {\n\t        2 !== w || L(p, 2) || (E = 0);\n\t\n\t        switch (E) {\n\t          case 111:\n\t            p = p.replace(ha, ':-moz-$1') + p;\n\t            break;\n\t\n\t          case 112:\n\t            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n\t        }\n\t\n\t        E = 0;\n\t      }\n\t    }\n\t\n\t    return G + p + F;\n\t  }\n\t\n\t  function X(d, c, e) {\n\t    var h = c.trim().split(ia);\n\t    c = h;\n\t    var a = h.length,\n\t        m = d.length;\n\t\n\t    switch (m) {\n\t      case 0:\n\t      case 1:\n\t        var b = 0;\n\t\n\t        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n\t          c[b] = Z(d, c[b], e).trim();\n\t        }\n\t\n\t        break;\n\t\n\t      default:\n\t        var v = b = 0;\n\t\n\t        for (c = []; b < a; ++b) {\n\t          for (var n = 0; n < m; ++n) {\n\t            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n\t          }\n\t        }\n\t\n\t    }\n\t\n\t    return c;\n\t  }\n\t\n\t  function Z(d, c, e) {\n\t    var h = c.charCodeAt(0);\n\t    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\t\n\t    switch (h) {\n\t      case 38:\n\t        return c.replace(F, '$1' + d.trim());\n\t\n\t      case 58:\n\t        return d.trim() + c.replace(F, '$1' + d.trim());\n\t\n\t      default:\n\t        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n\t    }\n\t\n\t    return d + c;\n\t  }\n\t\n\t  function P(d, c, e, h) {\n\t    var a = d + ';',\n\t        m = 2 * c + 3 * e + 4 * h;\n\t\n\t    if (944 === m) {\n\t      d = a.indexOf(':', 9) + 1;\n\t      var b = a.substring(d, a.length - 1).trim();\n\t      b = a.substring(0, d).trim() + b + ';';\n\t      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n\t    }\n\t\n\t    if (0 === w || 2 === w && !L(a, 1)) return a;\n\t\n\t    switch (m) {\n\t      case 1015:\n\t        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\t\n\t      case 951:\n\t        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\t\n\t      case 963:\n\t        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\t\n\t      case 1009:\n\t        if (100 !== a.charCodeAt(4)) break;\n\t\n\t      case 969:\n\t      case 942:\n\t        return '-webkit-' + a + a;\n\t\n\t      case 978:\n\t        return '-webkit-' + a + '-moz-' + a + a;\n\t\n\t      case 1019:\n\t      case 983:\n\t        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\t\n\t      case 883:\n\t        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n\t        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n\t        break;\n\t\n\t      case 932:\n\t        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n\t          case 103:\n\t            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\t\n\t          case 115:\n\t            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\t\n\t          case 98:\n\t            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n\t        }\n\t        return '-webkit-' + a + '-ms-' + a + a;\n\t\n\t      case 964:\n\t        return '-webkit-' + a + '-ms-flex-' + a + a;\n\t\n\t      case 1023:\n\t        if (99 !== a.charCodeAt(8)) break;\n\t        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n\t        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\t\n\t      case 1005:\n\t        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\t\n\t      case 1e3:\n\t        b = a.substring(13).trim();\n\t        c = b.indexOf('-') + 1;\n\t\n\t        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n\t          case 226:\n\t            b = a.replace(G, 'tb');\n\t            break;\n\t\n\t          case 232:\n\t            b = a.replace(G, 'tb-rl');\n\t            break;\n\t\n\t          case 220:\n\t            b = a.replace(G, 'lr');\n\t            break;\n\t\n\t          default:\n\t            return a;\n\t        }\n\t\n\t        return '-webkit-' + a + '-ms-' + b + a;\n\t\n\t      case 1017:\n\t        if (-1 === a.indexOf('sticky', 9)) break;\n\t\n\t      case 975:\n\t        c = (a = d).length - 10;\n\t        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\t\n\t        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n\t          case 203:\n\t            if (111 > b.charCodeAt(8)) break;\n\t\n\t          case 115:\n\t            a = a.replace(b, '-webkit-' + b) + ';' + a;\n\t            break;\n\t\n\t          case 207:\n\t          case 102:\n\t            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n\t        }\n\t\n\t        return a + ';';\n\t\n\t      case 938:\n\t        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n\t          case 105:\n\t            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\t\n\t          case 115:\n\t            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\t\n\t          default:\n\t            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n\t        }\n\t        break;\n\t\n\t      case 973:\n\t      case 989:\n\t        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\t\n\t      case 931:\n\t      case 953:\n\t        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n\t        break;\n\t\n\t      case 962:\n\t        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n\t    }\n\t\n\t    return a;\n\t  }\n\t\n\t  function L(d, c) {\n\t    var e = d.indexOf(1 === c ? ':' : '{'),\n\t        h = d.substring(0, 3 !== c ? e : 10);\n\t    e = d.substring(e + 1, d.length - 1);\n\t    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n\t  }\n\t\n\t  function ea(d, c) {\n\t    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n\t    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n\t  }\n\t\n\t  function H(d, c, e, h, a, m, b, v, n, q) {\n\t    for (var g = 0, x = c, w; g < A; ++g) {\n\t      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n\t        case void 0:\n\t        case !1:\n\t        case !0:\n\t        case null:\n\t          break;\n\t\n\t        default:\n\t          x = w;\n\t      }\n\t    }\n\t\n\t    if (x !== c) return x;\n\t  }\n\t\n\t  function T(d) {\n\t    switch (d) {\n\t      case void 0:\n\t      case null:\n\t        A = S.length = 0;\n\t        break;\n\t\n\t      default:\n\t        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n\t          T(d[c]);\n\t        } else Y = !!d | 0;\n\t    }\n\t\n\t    return T;\n\t  }\n\t\n\t  function U(d) {\n\t    d = d.prefix;\n\t    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n\t    return U;\n\t  }\n\t\n\t  function B(d, c) {\n\t    var e = d;\n\t    33 > e.charCodeAt(0) && (e = e.trim());\n\t    V = e;\n\t    e = [V];\n\t\n\t    if (0 < A) {\n\t      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n\t      void 0 !== h && 'string' === typeof h && (c = h);\n\t    }\n\t\n\t    var a = M(O, e, c, 0, 0);\n\t    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n\t    V = '';\n\t    E = 0;\n\t    z = D = 1;\n\t    return a;\n\t  }\n\t\n\t  var ca = /^\\0+/g,\n\t      N = /[\\0\\r\\f]/g,\n\t      aa = /: */g,\n\t      ka = /zoo|gra/,\n\t      ma = /([,: ])(transform)/g,\n\t      ia = /,\\r+?/g,\n\t      F = /([\\t\\r\\n ])*\\f?&/g,\n\t      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n\t      Q = /::(place)/g,\n\t      ha = /:(read-only)/g,\n\t      G = /[svh]\\w+-[tblr]{2}/,\n\t      da = /\\(\\s*(.*)\\s*\\)/g,\n\t      oa = /([\\s\\S]*?);/g,\n\t      ba = /-self|flex-/g,\n\t      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n\t      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n\t      ja = /([^-])(image-set\\()/,\n\t      z = 1,\n\t      D = 1,\n\t      E = 0,\n\t      w = 1,\n\t      O = [],\n\t      S = [],\n\t      A = 0,\n\t      R = null,\n\t      Y = 0,\n\t      V = '';\n\t  B.use = T;\n\t  B.set = U;\n\t  void 0 !== W && U(W);\n\t  return B;\n\t}\n\t\n\texports.default = stylis_min;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tvar unitlessKeys = {\n\t  animationIterationCount: 1,\n\t  borderImageOutset: 1,\n\t  borderImageSlice: 1,\n\t  borderImageWidth: 1,\n\t  boxFlex: 1,\n\t  boxFlexGroup: 1,\n\t  boxOrdinalGroup: 1,\n\t  columnCount: 1,\n\t  columns: 1,\n\t  flex: 1,\n\t  flexGrow: 1,\n\t  flexPositive: 1,\n\t  flexShrink: 1,\n\t  flexNegative: 1,\n\t  flexOrder: 1,\n\t  gridRow: 1,\n\t  gridRowEnd: 1,\n\t  gridRowSpan: 1,\n\t  gridRowStart: 1,\n\t  gridColumn: 1,\n\t  gridColumnEnd: 1,\n\t  gridColumnSpan: 1,\n\t  gridColumnStart: 1,\n\t  msGridRow: 1,\n\t  msGridRowSpan: 1,\n\t  msGridColumn: 1,\n\t  msGridColumnSpan: 1,\n\t  fontWeight: 1,\n\t  lineHeight: 1,\n\t  opacity: 1,\n\t  order: 1,\n\t  orphans: 1,\n\t  tabSize: 1,\n\t  widows: 1,\n\t  zIndex: 1,\n\t  zoom: 1,\n\t  WebkitLineClamp: 1,\n\t  // SVG-related properties\n\t  fillOpacity: 1,\n\t  floodOpacity: 1,\n\t  stopOpacity: 1,\n\t  strokeDasharray: 1,\n\t  strokeDashoffset: 1,\n\t  strokeMiterlimit: 1,\n\t  strokeOpacity: 1,\n\t  strokeWidth: 1\n\t};\n\t\n\texports.default = unitlessKeys;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\t\n\tvar weakMemoize = function weakMemoize(func) {\n\t  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n\t  var cache = new WeakMap();\n\t  return function (arg) {\n\t    if (cache.has(arg)) {\n\t      // $FlowFixMe\n\t      return cache.get(arg);\n\t    }\n\t\n\t    var ret = func(arg);\n\t    cache.set(arg, ret);\n\t    return ret;\n\t  };\n\t};\n\t\n\texports.default = weakMemoize;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _App = __webpack_require__(21);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar App = function App() {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(_App2.default, {\n\t      models: [\n\t      // 'https://hassans.s3.eu-central-1.amazonaws.com/youssef/order/order_g69r/impressions/order_g69rL.STL',\n\t      'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_outputmodel09-04-2022:20:09:47.stl', 'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_faceplatemodel09-04-2022:20:09:2.stl', 'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_inputmodel09-05-2022:14:09:33.STL'],\n\t      color: 'rgba(255,0,48,0.2)'\n\t    })\n\t  );\n\t};\n\t\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _STLViewer = __webpack_require__(23);\n\t\n\tvar _STLViewer2 = _interopRequireDefault(_STLViewer);\n\t\n\tvar _reactInputSlider = __webpack_require__(29);\n\t\n\tvar _reactInputSlider2 = _interopRequireDefault(_reactInputSlider);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar App = function App(props) {\n\t  var models = props.models,\n\t      color = props.color,\n\t      _props$rotate = props.rotate,\n\t      rotate = _props$rotate === undefined ? false : _props$rotate;\n\t  // const [color, setColor] = useState('rgba(255,0,48,0.2)');\n\t  // const [models, setModels] = useState([\n\t  //   // 'https://hassans.s3.eu-central-1.amazonaws.com/youssef/order/order_g69r/impressions/order_g69rL.STL',\n\t  //   'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_outputmodel09-04-2022:20:09:47.stl',\n\t  //   'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_faceplatemodel09-04-2022:20:09:2.stl',\n\t  //   'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_inputmodel09-05-2022:14:09:33.STL',\n\t  // ]);\n\t\n\t  var _useState = (0, _react.useState)([]),\n\t      _useState2 = _slicedToArray(_useState, 2),\n\t      sliders = _useState2[0],\n\t      setSliders = _useState2[1];\n\t\n\t  (0, _react.useEffect)(function () {\n\t    setSliders(models.map(function (_, index) {\n\t      return {\n\t        index: index,\n\t        value: 1\n\t      };\n\t    }));\n\t  }, [models]);\n\t  if (!models) return null;\n\t  return _react2.default.createElement(\n\t    'div',\n\t    null,\n\t    _react2.default.createElement(\n\t      'div',\n\t      { style: { margin: '10px 0px' } },\n\t      sliders.map(function (item, index) {\n\t        return _react2.default.createElement(\n\t          'div',\n\t          {\n\t            key: index,\n\t            style: {\n\t              margin: '10px 0px'\n\t            }\n\t          },\n\t          _react2.default.createElement('input', {\n\t            type: 'checkbox',\n\t            onClick: function onClick(e) {\n\t              var newSliders = sliders.map(function (item, i) {\n\t                if (i === index) {\n\t                  if (e.target.checked) {\n\t                    return _extends({}, item, { value: 0 });\n\t                  } else {\n\t                    return _extends({}, item, { value: 1 });\n\t                  }\n\t                }\n\t                return item;\n\t              });\n\t              setSliders(newSliders);\n\t            }\n\t          }),\n\t          _react2.default.createElement(_reactInputSlider2.default, {\n\t            axis: 'x',\n\t            xstep: 0.1,\n\t            xmin: 0.0,\n\t            xmax: 1.0,\n\t            x: item.value,\n\t            onChange: function onChange(_ref) {\n\t              var x = _ref.x;\n\t\n\t              var newSliders = sliders.map(function (item, i) {\n\t                if (i === index) {\n\t                  return _extends({}, item, { value: parseFloat(x) });\n\t                }\n\t                return item;\n\t              });\n\t              setSliders(newSliders);\n\t            },\n\t            style: { marginLeft: '20px' }\n\t          })\n\t        );\n\t      })\n\t    ),\n\t    _react2.default.createElement(_STLViewer2.default, {\n\t      modelColor: color,\n\t      rotate: rotate,\n\t      sliders: sliders,\n\t      models: models\n\t    })\n\t  );\n\t};\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Three = __webpack_require__(24);\n\t\n\tvar _Three2 = _interopRequireDefault(_Three);\n\t\n\tvar _reactDom = __webpack_require__(9);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OrbitControls = __webpack_require__(33)(_Three2.default);\n\t\n\tvar DIRECTIONAL_LIGHT = 'directionalLight';\n\t\n\tvar Paint = function () {\n\t  function Paint() {\n\t    _classCallCheck(this, Paint);\n\t\n\t    this.loader = new _Three2.default.STLLoader();\n\t    this.scene = new _Three2.default.Scene();\n\t    this.renderer = new _Three2.default.WebGLRenderer({\n\t      antialias: true\n\t    });\n\t    this.reqNumber = 0;\n\t    this.loaded = false;\n\t    this.light = undefined;\n\t  }\n\t\n\t  _createClass(Paint, [{\n\t    key: 'init',\n\t    value: function init(context, sliders, models) {\n\t      var _this = this;\n\t\n\t      this.models = models;\n\t      this.sliders = sliders;\n\t      this.component = context;\n\t      this.width = context.props.width;\n\t      this.height = context.props.height;\n\t      this.modelColor = context.props.modelColor;\n\t      this.backgroundColor = context.props.backgroundColor;\n\t      this.orbitControls = context.props.orbitControls;\n\t      this.rotate = context.props.rotate;\n\t      this.cameraX = context.props.cameraX;\n\t      this.cameraY = context.props.cameraY;\n\t      this.cameraZ = context.props.cameraZ;\n\t      this.rotationSpeeds = context.props.rotationSpeeds;\n\t      this.lights = context.props.lights;\n\t      this.lightColor = context.props.lightColor;\n\t      this.model = context.props.model;\n\t\n\t      // if (this.mesh !== undefined) {\n\t      //   this.scene.remove(this.mesh);\n\t      //   this.mesh.geometry.dispose();\n\t      //   this.mesh.material.dispose();\n\t      //   this.scene.remove(this.grid);\n\t      // }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t\n\t      this.distance = 10000;\n\t\n\t      this.reqNumber += 1;\n\t      if (!this.loaded) this.addSTLToScene(this.reqNumber);\n\t      var meshMaterial = this.scene.children.filter(function (item) {\n\t        return item.type === 'Mesh';\n\t      });\n\t      if (meshMaterial.length === sliders.length) {\n\t        sliders.map(function (item, index) {\n\t          meshMaterial[index].material.opacity = item.value;\n\t          // meshMaterial[index].material.visible = visibleSliders[index].value;\n\t          meshMaterial[index].updateMatrix();\n\t          _this.render();\n\t        });\n\t      }\n\t      this.loaded = true;\n\t    }\n\t  }, {\n\t    key: 'addLight',\n\t    value: function addLight(lights) {\n\t      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\n\t      var directionalLight = new _Three2.default.DirectionalLight(0xffffff, 0.5);\n\t      directionalLight.name = DIRECTIONAL_LIGHT + index;\n\t      directionalLight.position.normalize();\n\t      this.light = directionalLight;\n\t      this.scene.add(directionalLight);\n\t    }\n\t  }, {\n\t    key: 'loadSTLFromUrl',\n\t    value: function loadSTLFromUrl(url, reqId) {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this2.loader.crossOrigin = '';\n\t        _this2.loader.loadFromUrl(url, function (geometry) {\n\t          // if (this.reqNumber !== reqId) {\n\t          //   return;\n\t          // }\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(file) {\n\t      var _this3 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this3.loader.loadFromFile(file, function (geometry) {\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addSTLToScene',\n\t    value: function addSTLToScene(reqId) {\n\t      var _this4 = this;\n\t\n\t      this.models.map(function (item, index) {\n\t        if (index === 0) {\n\t          // while (this.scene.children.length > 0) {\n\t          //   this.scene.remove(this.scene.children[0]);\n\t          // }\n\t\n\t          // lights processing\n\t          var hasMultipleLights = _this4.lights.reduce(function (acc, item) {\n\t            return acc && Array.isArray(item);\n\t          }, true);\n\t          if (hasMultipleLights) {\n\t            _this4.lights.forEach(_this4.addLight.bind(_this4));\n\t          } else {\n\t            _this4.addLight(_this4.lights);\n\t          }\n\t        }\n\t\n\t        _this4.loadSTLFromUrl(item, reqId).then(function (geometry) {\n\t          // Calculate mesh noramls for MeshLambertMaterial.\n\t          geometry.computeFaceNormals();\n\t          geometry.computeVertexNormals();\n\t          // Center the object\n\t          // geometry.center();\n\t          var material = new _Three2.default.MeshLambertMaterial({\n\t            color: _this4.modelColor,\n\t            transparent: true,\n\t            opacity: 1,\n\t            side: _Three2.default.DoubleSide,\n\t            visible: true\n\t          });\n\t\n\t          if (geometry.hasColors) {\n\t            material = new _Three2.default.MeshPhongMaterial({\n\t              opacity: geometry.alpha,\n\t              vertexColors: _Three2.default.VertexColors\n\t            });\n\t          }\n\t\n\t          _this4.mesh = new _Three2.default.Mesh(geometry, material);\n\t          // Set the object's dimensions\n\t          geometry.computeBoundingBox();\n\t          geometry.computeBoundingSphere();\n\t\n\t          if (_this4.xDims === undefined) {\n\t            _this4.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t            _this4.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t            _this4.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\t            // this.xDims = geometry.boundingSphere.center.x;\n\t            // this.yDims = geometry.boundingSphere.center.y;\n\t            // this.zDims = geometry.boundingSphere.center.z;\n\t          }\n\t\n\t          if (_this4.rotate) {\n\t            _this4.mesh.rotation.x = _this4.rotationSpeeds[0];\n\t            _this4.mesh.rotation.y = _this4.rotationSpeeds[1];\n\t            _this4.mesh.rotation.z = _this4.rotationSpeeds[2];\n\t          }\n\t\n\t          _this4.mesh.updateMatrix();\n\t\n\t          _this4.scene.add(_this4.mesh);\n\t\n\t          _this4.addCamera();\n\t          _this4.light.position.copy(_this4.camera.position);\n\t\n\t          _this4.addInteractionControls();\n\t          _this4.addToReactComponent();\n\t\n\t          // Start the animation\n\t          _this4.animate();\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addCamera',\n\t    value: function addCamera() {\n\t      if (!this.scene.children.find(function (item) {\n\t        return item.type === 'PerspectiveCamera';\n\t      })) {\n\t        // Add the camera\n\t        this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\t\n\t        if (this.cameraZ === null) {\n\t          this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n\t        }\n\t\n\t        this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\t        var directionalLight = new _Three2.default.DirectionalLight(0xffffff, 0.5);\n\t        this.camera.add(directionalLight);\n\t        this.camera.lookAt(this.mesh);\n\t        this.scene.add(this.camera);\n\t\n\t        this.renderer.physicallyCorrectLights = true;\n\t        this.renderer.setSize(this.width, this.height);\n\t        this.renderer.setClearColor(this.backgroundColor, 1);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addInteractionControls',\n\t    value: function addInteractionControls() {\n\t      // Add controls for mouse interaction\n\t      if (this.orbitControls) {\n\t        if (this.controls) {\n\t          this.controls.dispose();\n\t        }\n\t        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n\t        this.controls.enableKeys = false;\n\t        this.controls.addEventListener('change', this.orbitRender.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addToReactComponent',\n\t    value: function addToReactComponent() {\n\t      // Add to the React Component\n\t      // ReactDOM.render(this.component, document.getElementById('loader'));\n\t      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n\t    }\n\t\n\t    /**\r\n\t     * Animate the scene\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      // note: three.js includes requestAnimationFrame shim\n\t      if (this.rotate) {\n\t        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n\t      }\n\t\n\t      if (this.orbitControls) {\n\t        this.controls.update();\n\t      }\n\t      this.render();\n\t    }\n\t\n\t    /**\r\n\t     * Render the scene after turning off the rotation\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'orbitRender',\n\t    value: function orbitRender() {\n\t      if (this.rotate) {\n\t        this.rotate = false;\n\t      }\n\t      var directionalLight = this.scene.getObjectByName('directionalLight0');\n\t      directionalLight.position.copy(this.camera.position);\n\t\n\t      this.render();\n\t    }\n\t\n\t    /**\r\n\t     * Deallocate Mesh, renderer context.\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'clean',\n\t    value: function clean() {\n\t      if (this.mesh !== undefined) {\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.mesh);\n\t        delete this.mesh;\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t      this.renderer.dispose();\n\t      this.renderer.forceContextLoss();\n\t    }\n\t\n\t    /**\r\n\t     * Render the scene\r\n\t     * @returns {void}\r\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.mesh && this.rotate) {\n\t        this.mesh.rotation.x += this.rotationSpeeds[0];\n\t        this.mesh.rotation.y += this.rotationSpeeds[1];\n\t        this.mesh.rotation.z += this.rotationSpeeds[2];\n\t      }\n\t\n\t      this.renderer.render(this.scene, this.camera);\n\t    }\n\t  }]);\n\t\n\t  return Paint;\n\t}();\n\t\n\texports.default = Paint;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(26);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _Paint = __webpack_require__(22);\n\t\n\tvar _Paint2 = _interopRequireDefault(_Paint);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar STLViewer = function (_Component) {\n\t  _inherits(STLViewer, _Component);\n\t\n\t  function STLViewer(props) {\n\t    _classCallCheck(this, STLViewer);\n\t\n\t    return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).call(this, props));\n\t  }\n\t\n\t  _createClass(STLViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.paint = new _Paint2.default();\n\t      this.paint.init(this, this.props.sliders, this.props.models);\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillUpdate',\n\t    value: function componentWillUpdate(nextProps, nextState) {\n\t      this.props = nextProps;\n\t      this.paint.init(this, this.props.sliders, this.props.models);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.paint.clean();\n\t      delete this.paint;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          modelColor = _props.modelColor;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.className,\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            overflow: 'hidden'\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            id: 'loader',\n\t            style: {\n\t              height: '100%',\n\t              display: 'flex',\n\t              justifyContent: 'center',\n\t              alignItems: 'center'\n\t            }\n\t          },\n\t          _react2.default.createElement('div', { className: 'spinner spinner-blue' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return STLViewer;\n\t}(_react.Component);\n\t\n\tSTLViewer.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  url: _propTypes2.default.string,\n\t  width: _propTypes2.default.number,\n\t  height: _propTypes2.default.number,\n\t  backgroundColor: _propTypes2.default.string,\n\t  modelColor: _propTypes2.default.string,\n\t  rotate: _propTypes2.default.bool,\n\t  orbitControls: _propTypes2.default.bool,\n\t  cameraX: _propTypes2.default.number,\n\t  cameraY: _propTypes2.default.number,\n\t  cameraZ: _propTypes2.default.number,\n\t  lights: _propTypes2.default.array,\n\t  lightColor: _propTypes2.default.string,\n\t  rotationSpeeds: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t  model: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(ArrayBuffer)]).isRequired,\n\t  models: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(ArrayBuffer)]).isRequired\n\t};\n\tSTLViewer.defaultProps = {\n\t  backgroundColor: '#EAEAEA',\n\t  modelColor: '#B92C2C',\n\t  height: 400,\n\t  width: 400,\n\t  rotate: true,\n\t  orbitControls: true,\n\t  cameraX: 0,\n\t  cameraY: 0,\n\t  cameraZ: null,\n\t  lights: [0, 0, 1],\n\t  lightColor: '#ffffff',\n\t  rotationSpeeds: [0, 0, 0.02],\n\t  model: undefined,\n\t  models: undefined\n\t};\n\t\n\t\n\tmodule.exports = STLViewer;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar THREE = __webpack_require__(34);\n\t\n\t//\n\t// STL Loader added\n\t//\n\t/**\r\n\t * @author aleeper / http://adamleeper.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author gero3 / https://github.com/gero3\r\n\t *\r\n\t * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\r\n\t *\r\n\t * Supports both binary and ASCII encoded files, with automatic detection of type.\r\n\t *\r\n\t * Limitations:\r\n\t *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\r\n\t *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\r\n\t *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\r\n\t *\r\n\t * Usage:\r\n\t *  var loader = new THREE.STLLoader();\r\n\t *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\r\n\t *    scene.add( new THREE.Mesh( geometry ) );\r\n\t *  });\r\n\t *\r\n\t * For binary STLs geometry might contain colors for vertices. To use it:\r\n\t *  // use the same code to load STL as above\r\n\t *  if (geometry.hasColors) {\r\n\t *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\r\n\t *  } else { .... }\r\n\t *  var mesh = new THREE.Mesh( geometry, material );\r\n\t */\n\t\n\tTHREE.STLLoader = function (manager) {\n\t  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\t};\n\t\n\tTHREE.STLLoader.prototype = {\n\t  constructor: THREE.STLLoader,\n\t\n\t  loadFromUrl: function loadFromUrl(url, onLoad, onProgress, onError) {\n\t    var scope = this;\n\t\n\t    var loader = new THREE.XHRLoader(scope.manager);\n\t    loader.setCrossOrigin(this.crossOrigin);\n\t    loader.setResponseType('arraybuffer');\n\t    loader.load(url, function (text) {\n\t      onLoad(scope.parse(text));\n\t    }, onProgress, onError);\n\t  },\n\t\n\t  loadFromFile: function loadFromFile(buffer, onLoad) {\n\t    var scope = this;\n\t    onLoad(scope.parse(buffer));\n\t  },\n\t\n\t  parse: function parse(data) {\n\t    var isBinary = function isBinary() {\n\t      var expect, face_size, n_faces, reader;\n\t      reader = new DataView(binData);\n\t      face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t      n_faces = reader.getUint32(80, true);\n\t      expect = 80 + 32 / 8 + n_faces * face_size;\n\t\n\t      if (expect === reader.byteLength) {\n\t        return true;\n\t      }\n\t\n\t      // some binary files will have different size from expected,\n\t      // checking characters higher than ASCII to confirm is binary\n\t      var fileLength = reader.byteLength;\n\t      for (var index = 0; index < fileLength; index++) {\n\t        if (reader.getUint8(index, false) > 127) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    };\n\t\n\t    var binData = this.ensureBinary(data);\n\t\n\t    return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n\t  },\n\t\n\t  parseBinary: function parseBinary(data) {\n\t    var reader = new DataView(data);\n\t    var faces = reader.getUint32(80, true);\n\t\n\t    var r,\n\t        g,\n\t        b,\n\t        hasColors = false,\n\t        colors;\n\t    var defaultR, defaultG, defaultB, alpha;\n\t\n\t    // process STL header\n\t    // check for default color in header (\"COLOR=rgba\" sequence).\n\t\n\t    for (var index = 0; index < 80 - 10; index++) {\n\t      if (reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ && reader.getUint8(index + 4) == 0x52 /*'R'*/ && reader.getUint8(index + 5) == 0x3d /*'='*/\n\t      ) {\n\t          hasColors = true;\n\t          colors = new Float32Array(faces * 3 * 3);\n\t\n\t          defaultR = reader.getUint8(index + 6) / 255;\n\t          defaultG = reader.getUint8(index + 7) / 255;\n\t          defaultB = reader.getUint8(index + 8) / 255;\n\t          alpha = reader.getUint8(index + 9) / 255;\n\t        }\n\t    }\n\t\n\t    var dataOffset = 84;\n\t    var faceLength = 12 * 4 + 2;\n\t\n\t    var offset = 0;\n\t\n\t    var geometry = new THREE.BufferGeometry();\n\t\n\t    var vertices = new Float32Array(faces * 3 * 3);\n\t    var normals = new Float32Array(faces * 3 * 3);\n\t\n\t    for (var face = 0; face < faces; face++) {\n\t      var start = dataOffset + face * faceLength;\n\t      var normalX = reader.getFloat32(start, true);\n\t      var normalY = reader.getFloat32(start + 4, true);\n\t      var normalZ = reader.getFloat32(start + 8, true);\n\t\n\t      if (hasColors) {\n\t        var packedColor = reader.getUint16(start + 48, true);\n\t\n\t        if ((packedColor & 0x8000) === 0) {\n\t          // facet has its own unique color\n\t\n\t          r = (packedColor & 0x1f) / 31;\n\t          g = (packedColor >> 5 & 0x1f) / 31;\n\t          b = (packedColor >> 10 & 0x1f) / 31;\n\t        } else {\n\t          r = defaultR;\n\t          g = defaultG;\n\t          b = defaultB;\n\t        }\n\t      }\n\t\n\t      for (var i = 1; i <= 3; i++) {\n\t        var vertexstart = start + i * 12;\n\t\n\t        vertices[offset] = reader.getFloat32(vertexstart, true);\n\t        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n\t        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\t\n\t        normals[offset] = normalX;\n\t        normals[offset + 1] = normalY;\n\t        normals[offset + 2] = normalZ;\n\t\n\t        if (hasColors) {\n\t          colors[offset] = r;\n\t          colors[offset + 1] = g;\n\t          colors[offset + 2] = b;\n\t        }\n\t\n\t        offset += 3;\n\t      }\n\t    }\n\t\n\t    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\t    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\t\n\t    if (hasColors) {\n\t      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n\t      geometry.hasColors = true;\n\t      geometry.alpha = alpha;\n\t    }\n\t\n\t    return geometry;\n\t  },\n\t\n\t  parseASCII: function parseASCII(data) {\n\t    var geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t    geometry = new THREE.Geometry();\n\t    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\n\t    while ((result = patternFace.exec(data)) !== null) {\n\t      text = result[0];\n\t      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternNormal.exec(text)) !== null) {\n\t        normal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n\t      }\n\t\n\t      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternVertex.exec(text)) !== null) {\n\t        geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\n\t      }\n\t\n\t      length = geometry.vertices.length;\n\t\n\t      geometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, normal));\n\t    }\n\t\n\t    geometry.computeBoundingBox();\n\t    geometry.computeBoundingSphere();\n\t\n\t    return geometry;\n\t  },\n\t\n\t  ensureString: function ensureString(buf) {\n\t    if (typeof buf !== 'string') {\n\t      var array_buffer = new Uint8Array(buf);\n\t      var str = '';\n\t      for (var i = 0; i < buf.byteLength; i++) {\n\t        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t      }\n\t      return str;\n\t    } else {\n\t      return buf;\n\t    }\n\t  },\n\t\n\t  ensureBinary: function ensureBinary(buf) {\n\t    if (typeof buf === 'string') {\n\t      var array_buffer = new Uint8Array(buf.length);\n\t      for (var i = 0; i < buf.length; i++) {\n\t        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t      }\n\t      return array_buffer.buffer || array_buffer;\n\t    } else {\n\t      return buf;\n\t    }\n\t  }\n\t};\n\t\n\tif (typeof DataView === 'undefined') {\n\t  DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    this.buffer = buffer;\n\t    this.byteOffset = byteOffset || 0;\n\t    this.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t    this._isString = typeof buffer === 'string';\n\t  };\n\t\n\t  DataView.prototype = {\n\t    _getCharCodes: function _getCharCodes(buffer, start, length) {\n\t      start = start || 0;\n\t      length = length || buffer.length;\n\t      var end = start + length;\n\t      var codes = [];\n\t      for (var i = start; i < end; i++) {\n\t        codes.push(buffer.charCodeAt(i) & 0xff);\n\t      }\n\t      return codes;\n\t    },\n\t\n\t    _getBytes: function _getBytes(length, byteOffset, littleEndian) {\n\t      var result;\n\t\n\t      // Handle the lack of endianness\n\t      if (littleEndian === undefined) {\n\t        littleEndian = this._littleEndian;\n\t      }\n\t\n\t      // Handle the lack of byteOffset\n\t      if (byteOffset === undefined) {\n\t        byteOffset = this.byteOffset;\n\t      } else {\n\t        byteOffset = this.byteOffset + byteOffset;\n\t      }\n\t\n\t      if (length === undefined) {\n\t        length = this.byteLength - byteOffset;\n\t      }\n\t\n\t      // Error Checking\n\t      if (typeof byteOffset !== 'number') {\n\t        throw new TypeError('DataView byteOffset is not a number');\n\t      }\n\t\n\t      if (length < 0 || byteOffset + length > this.byteLength) {\n\t        throw new Error('DataView length or (byteOffset+length) value is out of bounds');\n\t      }\n\t\n\t      if (this.isString) {\n\t        result = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\t      } else {\n\t        result = this.buffer.slice(byteOffset, byteOffset + length);\n\t      }\n\t\n\t      if (!littleEndian && length > 1) {\n\t        if (!(result instanceof Array)) {\n\t          result = Array.prototype.slice.call(result);\n\t        }\n\t\n\t        result.reverse();\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    // Compatibility functions on a String Buffer\n\t\n\t    getFloat64: function getFloat64(byteOffset, littleEndian) {\n\t      var b = this._getBytes(8, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[7] >> 7),\n\t          exponent = ((b[7] << 1 & 0xff) << 3 | b[6] >> 4) - ((1 << 10) - 1),\n\t\n\t      // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t      mantissa = (b[6] & 0x0f) * Math.pow(2, 48) + b[5] * Math.pow(2, 40) + b[4] * Math.pow(2, 32) + b[3] * Math.pow(2, 24) + b[2] * Math.pow(2, 16) + b[1] * Math.pow(2, 8) + b[0];\n\t\n\t      if (exponent === 1024) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -1023) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -1022 - 52);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getFloat32: function getFloat32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[3] >> 7),\n\t          exponent = (b[3] << 1 & 0xff | b[2] >> 7) - 127,\n\t          mantissa = (b[2] & 0x7f) << 16 | b[1] << 8 | b[0];\n\t\n\t      if (exponent === 128) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -127) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -126 - 23);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getInt32: function getInt32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian);\n\t      return b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n\t    },\n\t\n\t    getUint32: function getUint32(byteOffset, littleEndian) {\n\t      return this.getInt32(byteOffset, littleEndian) >>> 0;\n\t    },\n\t\n\t    getInt16: function getInt16(byteOffset, littleEndian) {\n\t      return this.getUint16(byteOffset, littleEndian) << 16 >> 16;\n\t    },\n\t\n\t    getUint16: function getUint16(byteOffset, littleEndian) {\n\t      var b = this._getBytes(2, byteOffset, littleEndian);\n\t      return b[1] << 8 | b[0];\n\t    },\n\t\n\t    getInt8: function getInt8(byteOffset) {\n\t      return this.getUint8(byteOffset) << 24 >> 24;\n\t    },\n\t\n\t    getUint8: function getUint8(byteOffset) {\n\t      return this._getBytes(1, byteOffset)[0];\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = THREE;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = __webpack_require__(27);\n\t\n\tfunction emptyFunction() {}\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    var err = new Error(\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t    err.name = 'Invariant Violation';\n\t    throw err;\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(25)();\n\t}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v17.0.2\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),m=__webpack_require__(8),r=__webpack_require__(32);function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\n\tfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\n\tvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\n\tja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\n\tfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\t\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n\t[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n\t[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\n\tpa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\n\tD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\n\tfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\n\tvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\n\tif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\n\tvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\n\tfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\n\tf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\n\tfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\n\tfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\n\treturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\n\tnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\n\tfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\n\tfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\n\tfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\n\tfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\n\tfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\n\tfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\n\tfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\n\tfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\n\tfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\n\tfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\n\tfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\n\ttypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\n\tfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\n\tfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\n\tc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\n\tfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\n\tfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\n\tfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\n\tfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\n\tfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\n\tfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\n\tfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\n\tfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\n\tfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\n\tfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\n\tfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\n\tvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\t\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\n\tfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\n\tF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\n\tfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\n\tfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\n\tfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\n\tfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\n\tfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\n\tfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\n\tfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n\t(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\n\tvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\n\ta)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\n\tSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n\t119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\n\tvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\n\ta.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\n\tdeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\n\tfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\n\tfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\n\tvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\n\tfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\n\tfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\n\tfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\n\tfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\n\tfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\n\tPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n\t0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\n\tea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\n\tda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\n\tfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\n\tfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\n\tfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\n\tfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\n\tfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\n\tfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\n\ta:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\n\tDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\n\tt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\n\tx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\n\tgf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\n\tK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\n\tcase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\t\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\n\tfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\n\tfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\n\tfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\n\tfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\n\tfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\n\tfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\n\tfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\n\tvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\n\tfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\n\tfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\n\tfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\n\tfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\n\tfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\n\tfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\n\tb;c.lastBaseUpdate=b}\n\tfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\n\tnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\n\tf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\n\tfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\n\tvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\n\tb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\n\tfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\n\tfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\n\tfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n\t(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\n\tfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\n\tfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\n\tfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\n\tc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\n\tWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\n\ta.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\n\tnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\n\tn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\n\th)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\n\tu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\n\td=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\n\tWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\n\tfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\n\tfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\n\tfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\n\tfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\n\tfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\n\tfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\n\tfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\n\tfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\n\tfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\n\teagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\n\tfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\n\tfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\n\tfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\n\te.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\n\tfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\n\tfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\n\tfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\n\tfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\n\tfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\n\tfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\n\tvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\n\tb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\n\twh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\n\tvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\n\ta]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\n\ta]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\n\tfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\n\tfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\n\tfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\n\tfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\n\tfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\t\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\n\ttypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\t\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\n\tx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\n\th===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\n\tfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\n\tvar si={dehydrated:null,retryLane:0};\n\tfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\n\tb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n\t{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\n\tfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\n\tfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\n\tfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\n\tfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\n\tnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\n\tfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\n\tBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\n\tDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\n\tl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n\t(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\n\tc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\n\tfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\n\tb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n\t{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\n\tjf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\n\te=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\n\tgb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\n\tbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\n\tc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n\t4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\n\tnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\n\tf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n\t64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\n\tfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\n\tfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\n\tfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\n\tfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\n\tfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\n\tb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\n\treturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\n\tfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\n\ta)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\n\tfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\n\tf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\n\tfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\n\tc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\n\tfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\n\tfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\n\tfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n\t8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\n\tfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n\t2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\n\tb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\n\tfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\n\tfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\n\tfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\n\tfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\n\tc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\n\tfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\n\ta.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\n\tc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\n\tfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\n\tfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\n\tfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\n\tfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n\t(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\n\tvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\n\tg;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\n\tfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\n\tfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\n\ta.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\n\tfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\n\tCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\n\tbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\n\tZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\n\tJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\n\tg.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n\t0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\n\tZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\n\tfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\n\tfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\n\tnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\n\tfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\n\tfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\n\tck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\n\tb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\n\ttypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\n\ta=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\n\td=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\n\tph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\n\tc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\n\tk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\n\tf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n\t};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\n\tfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\n\tfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\n\tc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\n\tfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\n\ttypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\n\tfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\n\tfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\n\tfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\n\tfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\n\td&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\n\tfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\n\tqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\n\tfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\n\tfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\n\tgc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\n\tyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\n\tHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\n\tvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\n\tpk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\n\texports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\n\texports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\n\texports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar _css = _interopDefault(__webpack_require__(5));\n\tvar _extends = _interopDefault(__webpack_require__(10));\n\tvar _objectWithoutPropertiesLoose = _interopDefault(__webpack_require__(11));\n\tvar core = __webpack_require__(13);\n\tvar react = __webpack_require__(1);\n\t\n\tfunction getClientPosition(e) {\n\t  var touches = e.touches;\n\t\n\t  if (touches && touches.length) {\n\t    var finger = touches[0];\n\t    return {\n\t      x: finger.clientX,\n\t      y: finger.clientY\n\t    };\n\t  }\n\t\n\t  return {\n\t    x: e.clientX,\n\t    y: e.clientY\n\t  };\n\t}\n\t\n\tvar track = {\n\t  position: 'relative',\n\t  display: 'inline-block',\n\t  backgroundColor: '#ddd',\n\t  borderRadius: 5,\n\t  userSelect: 'none',\n\t  boxSizing: 'border-box'\n\t};\n\tvar active = {\n\t  position: 'absolute',\n\t  backgroundColor: '#5e72e4',\n\t  borderRadius: 5,\n\t  userSelect: 'none',\n\t  boxSizing: 'border-box'\n\t};\n\tvar thumb = {\n\t  position: 'relative',\n\t  display: 'block',\n\t  content: '\"\"',\n\t  width: 18,\n\t  height: 18,\n\t  backgroundColor: '#fff',\n\t  borderRadius: '50%',\n\t  boxShadow: '0 1px 1px rgba(0,0,0,.5)',\n\t  userSelect: 'none',\n\t  cursor: 'pointer',\n\t  boxSizing: 'border-box'\n\t};\n\tvar styles = {\n\t  x: {\n\t    track: _extends({}, track, {\n\t      width: 200,\n\t      height: 10\n\t    }),\n\t    active: _extends({}, active, {\n\t      top: 0,\n\t      height: '100%'\n\t    }),\n\t    thumb: _extends({}, thumb)\n\t  },\n\t  y: {\n\t    track: _extends({}, track, {\n\t      width: 10,\n\t      height: 200\n\t    }),\n\t    active: _extends({}, active, {\n\t      left: 0,\n\t      width: '100%'\n\t    }),\n\t    thumb: _extends({}, thumb)\n\t  },\n\t  xy: {\n\t    track: {\n\t      position: 'relative',\n\t      overflow: 'hidden',\n\t      width: 200,\n\t      height: 200,\n\t      backgroundColor: '#5e72e4',\n\t      borderRadius: 0\n\t    },\n\t    active: {},\n\t    thumb: _extends({}, thumb)\n\t  },\n\t  disabled: {\n\t    opacity: 0.5\n\t  }\n\t};\n\t\n\tvar Slider = function Slider(_ref) {\n\t  var disabled = _ref.disabled,\n\t      axis = _ref.axis,\n\t      x = _ref.x,\n\t      y = _ref.y,\n\t      xmin = _ref.xmin,\n\t      xmax = _ref.xmax,\n\t      ymin = _ref.ymin,\n\t      ymax = _ref.ymax,\n\t      xstep = _ref.xstep,\n\t      ystep = _ref.ystep,\n\t      onChange = _ref.onChange,\n\t      onDragStart = _ref.onDragStart,\n\t      onDragEnd = _ref.onDragEnd,\n\t      xreverse = _ref.xreverse,\n\t      yreverse = _ref.yreverse,\n\t      customStyles = _ref.styles,\n\t      props = _objectWithoutPropertiesLoose(_ref, [\"disabled\", \"axis\", \"x\", \"y\", \"xmin\", \"xmax\", \"ymin\", \"ymax\", \"xstep\", \"ystep\", \"onChange\", \"onDragStart\", \"onDragEnd\", \"xreverse\", \"yreverse\", \"styles\"]);\n\t\n\t  var container = react.useRef(null);\n\t  var handle = react.useRef(null);\n\t  var start = react.useRef({});\n\t  var offset = react.useRef({});\n\t\n\t  function getPosition() {\n\t    var top = (y - ymin) / (ymax - ymin) * 100;\n\t    var left = (x - xmin) / (xmax - xmin) * 100;\n\t    if (top > 100) top = 100;\n\t    if (top < 0) top = 0;\n\t    if (axis === 'x') top = 0;\n\t    if (left > 100) left = 100;\n\t    if (left < 0) left = 0;\n\t    if (axis === 'y') left = 0;\n\t    return {\n\t      top: top,\n\t      left: left\n\t    };\n\t  }\n\t\n\t  function change(_ref2) {\n\t    var top = _ref2.top,\n\t        left = _ref2.left;\n\t    if (!onChange) return;\n\t\n\t    var _container$current$ge = container.current.getBoundingClientRect(),\n\t        width = _container$current$ge.width,\n\t        height = _container$current$ge.height;\n\t\n\t    var dx = 0;\n\t    var dy = 0;\n\t    if (left < 0) left = 0;\n\t    if (left > width) left = width;\n\t    if (top < 0) top = 0;\n\t    if (top > height) top = height;\n\t\n\t    if (axis === 'x' || axis === 'xy') {\n\t      dx = left / width * (xmax - xmin);\n\t    }\n\t\n\t    if (axis === 'y' || axis === 'xy') {\n\t      dy = top / height * (ymax - ymin);\n\t    }\n\t\n\t    var x = (dx !== 0 ? parseInt(dx / xstep, 10) * xstep : 0) + xmin;\n\t    var y = (dy !== 0 ? parseInt(dy / ystep, 10) * ystep : 0) + ymin;\n\t    onChange({\n\t      x: xreverse ? xmax - x + xmin : x,\n\t      y: yreverse ? ymax - y + ymin : y\n\t    });\n\t  }\n\t\n\t  function handleMouseDown(e) {\n\t    if (disabled) return;\n\t    e.preventDefault();\n\t    e.stopPropagation();\n\t    e.nativeEvent.stopImmediatePropagation();\n\t    var dom = handle.current;\n\t    var clientPos = getClientPosition(e);\n\t    start.current = {\n\t      x: dom.offsetLeft,\n\t      y: dom.offsetTop\n\t    };\n\t    offset.current = {\n\t      x: clientPos.x,\n\t      y: clientPos.y\n\t    };\n\t    document.addEventListener('mousemove', handleDrag);\n\t    document.addEventListener('mouseup', handleDragEnd);\n\t    document.addEventListener('touchmove', handleDrag, {\n\t      passive: false\n\t    });\n\t    document.addEventListener('touchend', handleDragEnd);\n\t    document.addEventListener('touchcancel', handleDragEnd);\n\t\n\t    if (onDragStart) {\n\t      onDragStart(e);\n\t    }\n\t  }\n\t\n\t  function getPos(e) {\n\t    var clientPos = getClientPosition(e);\n\t    var left = clientPos.x + start.current.x - offset.current.x;\n\t    var top = clientPos.y + start.current.y - offset.current.y;\n\t    return {\n\t      left: left,\n\t      top: top\n\t    };\n\t  }\n\t\n\t  function handleDrag(e) {\n\t    if (disabled) return;\n\t    e.preventDefault();\n\t    change(getPos(e));\n\t  }\n\t\n\t  function handleDragEnd(e) {\n\t    if (disabled) return;\n\t    e.preventDefault();\n\t    document.removeEventListener('mousemove', handleDrag);\n\t    document.removeEventListener('mouseup', handleDragEnd);\n\t    document.removeEventListener('touchmove', handleDrag, {\n\t      passive: false\n\t    });\n\t    document.removeEventListener('touchend', handleDragEnd);\n\t    document.removeEventListener('touchcancel', handleDragEnd);\n\t\n\t    if (onDragEnd) {\n\t      onDragEnd(e);\n\t    }\n\t  }\n\t\n\t  function handleTrackMouseDown(e) {\n\t    if (disabled) return;\n\t    e.preventDefault();\n\t    var clientPos = getClientPosition(e);\n\t    var rect = container.current.getBoundingClientRect();\n\t    start.current = {\n\t      x: clientPos.x - rect.left,\n\t      y: clientPos.y - rect.top\n\t    };\n\t    offset.current = {\n\t      x: clientPos.x,\n\t      y: clientPos.y\n\t    };\n\t    document.addEventListener('mousemove', handleDrag);\n\t    document.addEventListener('mouseup', handleDragEnd);\n\t    document.addEventListener('touchmove', handleDrag, {\n\t      passive: false\n\t    });\n\t    document.addEventListener('touchend', handleDragEnd);\n\t    document.addEventListener('touchcancel', handleDragEnd);\n\t    change({\n\t      left: clientPos.x - rect.left,\n\t      top: clientPos.y - rect.top\n\t    });\n\t\n\t    if (onDragStart) {\n\t      onDragStart(e);\n\t    }\n\t  }\n\t\n\t  var pos = getPosition();\n\t  var valueStyle = {};\n\t  if (axis === 'x') valueStyle.width = pos.left + '%';\n\t  if (axis === 'y') valueStyle.height = pos.top + '%';\n\t  if (xreverse) valueStyle.left = 100 - pos.left + '%';\n\t  if (yreverse) valueStyle.top = 100 - pos.top + '%';\n\t  var handleStyle = {\n\t    position: 'absolute',\n\t    transform: 'translate(-50%, -50%)',\n\t    left: xreverse ? 100 - pos.left + '%' : pos.left + '%',\n\t    top: yreverse ? 100 - pos.top + '%' : pos.top + '%'\n\t  };\n\t\n\t  if (axis === 'x') {\n\t    handleStyle.top = '50%';\n\t  } else if (axis === 'y') {\n\t    handleStyle.left = '50%';\n\t  }\n\t\n\t  var styles$1 = {\n\t    track: _extends({}, styles[axis].track, {}, customStyles.track),\n\t    active: _extends({}, styles[axis].active, {}, customStyles.active),\n\t    thumb: _extends({}, styles[axis].thumb, {}, customStyles.thumb),\n\t    disabled: _extends({}, styles.disabled, {}, customStyles.disabled)\n\t  };\n\t  return core.jsx(\"div\", _extends({}, props, {\n\t    ref: container,\n\t    css: /*#__PURE__*/_css([styles$1.track, disabled && styles$1.disabled], \";label:Slider;\" + ( true ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n\t    onTouchStart: handleTrackMouseDown,\n\t    onMouseDown: handleTrackMouseDown\n\t  }), core.jsx(\"div\", {\n\t    css: styles$1.active,\n\t    style: valueStyle\n\t  }), core.jsx(\"div\", {\n\t    ref: handle,\n\t    style: handleStyle,\n\t    onTouchStart: handleMouseDown,\n\t    onMouseDown: handleMouseDown,\n\t    onClick: function onClick(e) {\n\t      e.stopPropagation();\n\t      e.nativeEvent.stopImmediatePropagation();\n\t    }\n\t  }, core.jsx(\"div\", {\n\t    css: styles$1.thumb\n\t  })));\n\t};\n\t\n\tSlider.defaultProps = {\n\t  disabled: false,\n\t  axis: 'x',\n\t  x: 50,\n\t  xmin: 0,\n\t  xmax: 100,\n\t  y: 50,\n\t  ymin: 0,\n\t  ymax: 100,\n\t  xstep: 1,\n\t  ystep: 1,\n\t  xreverse: false,\n\t  yreverse: false,\n\t  styles: {}\n\t};\n\t\n\tmodule.exports = Slider;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v17.0.2\n\t * react.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t'use strict';var l=__webpack_require__(8),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\n\tif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\n\tvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\n\tfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\n\tfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\n\tfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n\t0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\n\tfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\n\texports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\n\texports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\n\tkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\n\texports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\n\texports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports) {\n\n\t/** @license React v0.20.2\n\t * scheduler.production.min.js\n\t *\n\t * Copyright (c) Facebook, Inc. and its affiliates.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\n\tif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\n\twindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\n\tE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\n\tx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\n\tfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\n\tfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\n\tfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\n\texports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\n\texports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\n\texports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\n\texports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(31);\n\t} else {\n\t  module.exports = require('./cjs/scheduler.development.js');\n\t}\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(THREE) {\n\t\tvar MOUSE = THREE.MOUSE\n\t\tif (!MOUSE)\n\t\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\n\t\t/**\n\t\t * @author qiao / https://github.com/qiao\n\t\t * @author mrdoob / http://mrdoob.com\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author erich666 / http://erichaines.com\n\t\t */\n\t\t/*global THREE, console */\n\t\n\t\tfunction OrbitConstraint ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t\t// and where it pans with respect to.\n\t\t\tthis.target = new THREE.Vector3();\n\t\n\t\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity;\n\t\n\t\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity;\n\t\n\t\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\t\t\tthis.minPolarAngle = 0; // radians\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.25;\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t// Current position in spherical coordinate system.\n\t\t\tvar theta;\n\t\t\tvar phi;\n\t\n\t\t\t// Pending changes\n\t\t\tvar phiDelta = 0;\n\t\t\tvar thetaDelta = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar panOffset = new THREE.Vector3();\n\t\t\tvar zoomChanged = false;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn phi;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn theta;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateLeft = function ( angle ) {\n\t\n\t\t\t\tthetaDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateUp = function ( angle ) {\n\t\n\t\t\t\tphiDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\t// pass in distance in world space to move left\n\t\t\tthis.panLeft = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panLeft ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get X column of matrix\n\t\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in distance in world space to move up\n\t\t\tthis.panUp = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panUp ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get Y column of matrix\n\t\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\t\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\t\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\t// orthographic\n\t\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyIn = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale /= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyOut = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale *= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.update = function() {\n\t\n\t\t\t\tvar offset = new THREE.Vector3();\n\t\n\t\t\t\t// so camera.up is the orbit axis\n\t\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tvar quatInverse = quat.clone().inverse();\n\t\n\t\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\t\n\t\t\t\treturn function () {\n\t\n\t\t\t\t\tvar position = this.object.position;\n\t\n\t\t\t\t\toffset.copy( position ).sub( this.target );\n\t\n\t\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quat );\n\t\n\t\t\t\t\t// angle from z-axis around y-axis\n\t\n\t\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\t\n\t\t\t\t\t// angle from y-axis\n\t\n\t\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\t\n\t\t\t\t\ttheta += thetaDelta;\n\t\t\t\t\tphi += phiDelta;\n\t\n\t\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\t\n\t\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\t\n\t\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\t\n\t\t\t\t\tvar radius = offset.length() * scale;\n\t\n\t\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\n\t\t\t\t\t// move target to panned location\n\t\t\t\t\tthis.target.add( panOffset );\n\t\n\t\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\t\n\t\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\n\t\t\t\t\tposition.copy( this.target ).add( offset );\n\t\n\t\t\t\t\tthis.object.lookAt( this.target );\n\t\n\t\t\t\t\tif ( this.enableDamping === true ) {\n\t\n\t\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\t\tphiDelta = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscale = 1;\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\t\n\t\t\t\t\t// update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\t\n\t\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\t\n\t\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\n\t\t\t\t\t\treturn true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t};\n\t\n\t\n\t\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t\t// supported.\n\t\t//\n\t\t//    Orbit - left mouse / touch: one finger move\n\t\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\t\n\t\tfunction OrbitControls ( object, domElement ) {\n\t\n\t\t\tvar constraint = new OrbitConstraint( object );\n\t\n\t\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\t\n\t\t\t// API\n\t\n\t\t\tObject.defineProperty( this, 'constraint', {\n\t\n\t\t\t\tget: function() {\n\t\n\t\t\t\t\treturn constraint;\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn constraint.getPolarAngle();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn constraint.getAzimuthalAngle();\n\t\n\t\t\t};\n\t\n\t\t\t// Set to false to disable this control\n\t\t\tthis.enabled = true;\n\t\n\t\t\t// center is old, deprecated; use \"target\" instead\n\t\t\tthis.center = this.target;\n\t\n\t\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t\t// backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable rotating\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable panning\n\t\t\tthis.enablePan = true;\n\t\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\n\t\t\t// Set to false to disable use of the keys\n\t\t\tthis.enableKeys = true;\n\t\n\t\t\t// The four arrow keys\n\t\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\n\t\t\t// Mouse buttons\n\t\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar rotateStart = new THREE.Vector2();\n\t\t\tvar rotateEnd = new THREE.Vector2();\n\t\t\tvar rotateDelta = new THREE.Vector2();\n\t\n\t\t\tvar panStart = new THREE.Vector2();\n\t\t\tvar panEnd = new THREE.Vector2();\n\t\t\tvar panDelta = new THREE.Vector2();\n\t\n\t\t\tvar dollyStart = new THREE.Vector2();\n\t\t\tvar dollyEnd = new THREE.Vector2();\n\t\t\tvar dollyDelta = new THREE.Vector2();\n\t\n\t\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\t\n\t\t\tvar state = STATE.NONE;\n\t\n\t\t\t// for reset\n\t\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom;\n\t\n\t\t\t// events\n\t\n\t\t\tvar changeEvent = { type: 'change' };\n\t\t\tvar startEvent = { type: 'start' };\n\t\t\tvar endEvent = { type: 'end' };\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tfunction pan( deltaX, deltaY ) {\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\t\n\t\t\t}\n\t\n\t\t\tthis.update = function () {\n\t\n\t\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\t\n\t\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( constraint.update() === true ) {\n\t\n\t\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.reset = function () {\n\t\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\tthis.target.copy( this.target0 );\n\t\t\t\tthis.object.position.copy( this.position0 );\n\t\t\t\tthis.object.zoom = this.zoom0;\n\t\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\tthis.update();\n\t\n\t\t\t};\n\t\n\t\t\tfunction getAutoRotationAngle() {\n\t\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getZoomScale() {\n\t\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\tstate = STATE.ROTATE;\n\t\n\t\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tstate = STATE.DOLLY;\n\t\n\t\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tstate = STATE.PAN;\n\t\n\t\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) {\n\t\n\t\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\t\tscope.dispatchEvent( startEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseMove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tif ( state === STATE.ROTATE ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t} else if ( state === STATE.DOLLY ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t} else if ( state === STATE.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.update();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseUp( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseWheel( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar delta = 0;\n\t\n\t\t\t\tif ( event.wheelDelta !== undefined ) {\n\t\n\t\t\t\t\t// WebKit / Opera / Explorer 9\n\t\n\t\t\t\t\tdelta = event.wheelDelta;\n\t\n\t\t\t\t} else if ( event.detail !== undefined ) {\n\t\n\t\t\t\t\t// Firefox\n\t\n\t\t\t\t\tdelta = - event.detail;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( delta > 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t} else if ( delta < 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( startEvent );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onKeyDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\t\n\t\t\t\tswitch ( event.keyCode ) {\n\t\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchstart( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\n\t\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\n\t\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchmove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1: // one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\t\n\t\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2: // two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\n\t\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\t\n\t\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchend( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction contextmenu( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t}\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\n\t\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t}\n\t\n\t\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\t\n\t\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t// force an update at start\n\t\t\tthis.update();\n\t\n\t\t};\n\t\n\t\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\t\tOrbitControls.prototype.constructor = OrbitControls;\n\t\n\t\tObject.defineProperties( OrbitControls.prototype, {\n\t\n\t\t\tobject: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.object;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttarget: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.target;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\t\tthis.constraint.target.copy( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tenableDamping : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.enableDamping = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// backward compatibility\n\t\n\t\t\tnoZoom: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\treturn ! this.enableZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\tthis.enableZoom = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoRotate: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\treturn ! this.enableRotate;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\tthis.enableRotate = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoPan: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\treturn ! this.enablePan;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\tthis.enablePan = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoKeys: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\treturn ! this.enableKeys;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\tthis.enableKeys = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tstaticMoving : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\treturn ! this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\tthis.constraint.enableDamping = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdynamicDampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\treturn OrbitControls;\n\t}\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 66e2cff0cc9ea8b6d391","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './containers/App';\r\nReactDOM.render(<App />, document.getElementById('react-app'));\r\n\n\n\n// WEBPACK FOOTER //\n// ./react/app.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar hashString = _interopDefault(require('@emotion/hash'));\nvar unitless = _interopDefault(require('@emotion/unitless'));\nvar memoize = _interopDefault(require('@emotion/memoize'));\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexports.serializeStyles = serializeStyles;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/serialize/dist/serialize.browser.cjs.js\n// module id = 2\n// module chunks = 0","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inheritsLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/inheritsLoose.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar sheet = require('@emotion/sheet');\nvar Stylis = _interopDefault(require('@emotion/stylis'));\nrequire('@emotion/weak-memoize');\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new sheet.StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexports.default = createCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/cache/dist/cache.browser.cjs.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar serialize = require('@emotion/serialize');\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serialize.serializeStyles(args);\n}\n\nexports.default = css;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/css/dist/css.browser.cjs.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexports.StyleSheet = StyleSheet;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/sheet/dist/sheet.browser.cjs.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexports.getRegisteredStyles = getRegisteredStyles;\nexports.insertStyles = insertStyles;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/utils/dist/utils.browser.cjs.js\n// module id = 7\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 9\n// module chunks = 0","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/extends.js\n// module id = 10\n// module chunks = 0","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/objectWithoutPropertiesLoose.js\n// module id = 11\n// module chunks = 0","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@babel/runtime/helpers/setPrototypeOf.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar _inheritsLoose = require('@babel/runtime/helpers/inheritsLoose');\nvar React = require('react');\nrequire('@emotion/cache');\nvar emotionElement = require('./emotion-element-3a21e59a.browser.cjs.js');\nvar utils = require('@emotion/utils');\nvar serialize = require('@emotion/serialize');\nvar sheet = require('@emotion/sheet');\nvar css = require('@emotion/css');\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }\n\nvar _inheritsLoose__default = /*#__PURE__*/_interopDefault(_inheritsLoose);\nvar css__default = /*#__PURE__*/_interopDefault(css);\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !emotionElement.hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, args);\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = emotionElement.Emotion;\n  createElementArgArray[1] = emotionElement.createEmotionProps(type, props);\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return React.createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global = /* #__PURE__ */emotionElement.withEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return /*#__PURE__*/React.createElement(emotionElement.ThemeContext.Consumer, null, function (theme) {\n      var serialized = serialize.serializeStyles([styles(theme)]);\n      return /*#__PURE__*/React.createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serialize.serializeStyles([styles]);\n  return /*#__PURE__*/React.createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose__default['default'](InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new sheet.StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      utils.insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(React.Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css__default['default'].apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = utils.getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar ClassNames = emotionElement.withEmotionCache(function (props, context) {\n  return /*#__PURE__*/React.createElement(emotionElement.ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serialize.serializeStyles(args, context.registered);\n\n      {\n        utils.insertStyles(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n    var possiblyStyleElement = /*#__PURE__*/React.createElement(Noop, null);\n\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, possiblyStyleElement, ele);\n  });\n});\n\nexports.CacheProvider = emotionElement.CacheProvider;\nexports.ThemeContext = emotionElement.ThemeContext;\nexports.withEmotionCache = emotionElement.withEmotionCache;\nObject.defineProperty(exports, 'css', {\n  enumerable: true,\n  get: function () {\n    return css__default['default'];\n  }\n});\nexports.ClassNames = ClassNames;\nexports.Global = Global;\nexports.createElement = jsx;\nexports.jsx = jsx;\nexports.keyframes = keyframes;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/core/dist/core.browser.cjs.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nrequire('@babel/runtime/helpers/inheritsLoose');\nvar React = require('react');\nvar createCache = require('@emotion/cache');\nvar utils = require('@emotion/utils');\nvar serialize = require('@emotion/serialize');\n\nfunction _interopDefault (e) { return e && e.__esModule ? e : { 'default': e }; }\n\nvar createCache__default = /*#__PURE__*/_interopDefault(createCache);\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar EmotionCacheContext = /*#__PURE__*/React.createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache__default['default']() : null);\nvar ThemeContext = /*#__PURE__*/React.createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return /*#__PURE__*/React.createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return /*#__PURE__*/React.forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar createEmotionProps = function createEmotionProps(type, props) {\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type; // TODO: check if this still works with all of those different JSX functions\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)(?:jsx|createEmotionProps).*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  return newProps;\n};\n\nvar Noop = function Noop() {\n  return null;\n};\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = utils.getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serialize.serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serialize.serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = utils.insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = /*#__PURE__*/React.createElement(type, newProps);\n  var possiblyStyleElement = /*#__PURE__*/React.createElement(Noop, null);\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, possiblyStyleElement, ele);\n}; // eslint-disable-next-line no-undef\n\n\nvar Emotion = /* #__PURE__ */withEmotionCache(function (props, cache, ref) {\n  if (typeof props.css === 'function') {\n    return /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n}\n\nexports.CacheProvider = CacheProvider;\nexports.Emotion = Emotion;\nexports.ThemeContext = ThemeContext;\nexports.createEmotionProps = createEmotionProps;\nexports.hasOwnProperty = hasOwnProperty;\nexports.withEmotionCache = withEmotionCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/core/dist/emotion-element-3a21e59a.browser.cjs.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexports.default = murmur2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/hash/dist/hash.browser.cjs.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexports.default = memoize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/memoize/dist/memoize.browser.cjs.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction stylis_min (W) {\n  function M(d, c, e, h, a) {\n    for (var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = k = q = 0, l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C; l < B;) {\n      g = e.charCodeAt(l);\n      l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), n = v = m = 0, B++, J++);\n\n      if (0 === b + n + v + m) {\n        if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {\n          switch (g) {\n            case 32:\n            case 9:\n            case 59:\n            case 13:\n            case 10:\n              break;\n\n            default:\n              f += e.charAt(l);\n          }\n\n          g = 59;\n        }\n\n        switch (g) {\n          case 123:\n            f = f.trim();\n            q = f.charCodeAt(0);\n            k = 1;\n\n            for (t = ++l; l < B;) {\n              switch (g = e.charCodeAt(l)) {\n                case 123:\n                  k++;\n                  break;\n\n                case 125:\n                  k--;\n                  break;\n\n                case 47:\n                  switch (g = e.charCodeAt(l + 1)) {\n                    case 42:\n                    case 47:\n                      a: {\n                        for (u = l + 1; u < J; ++u) {\n                          switch (e.charCodeAt(u)) {\n                            case 47:\n                              if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                              break;\n\n                            case 10:\n                              if (47 === g) {\n                                l = u + 1;\n                                break a;\n                              }\n\n                          }\n                        }\n\n                        l = u;\n                      }\n\n                  }\n\n                  break;\n\n                case 91:\n                  g++;\n\n                case 40:\n                  g++;\n\n                case 34:\n                case 39:\n                  for (; l++ < J && e.charCodeAt(l) !== g;) {\n                  }\n\n              }\n\n              if (0 === k) break;\n              l++;\n            }\n\n            k = e.substring(t, l);\n            0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0));\n\n            switch (q) {\n              case 64:\n                0 < r && (f = f.replace(N, ''));\n                g = f.charCodeAt(1);\n\n                switch (g) {\n                  case 100:\n                  case 109:\n                  case 115:\n                  case 45:\n                    r = c;\n                    break;\n\n                  default:\n                    r = O;\n                }\n\n                k = M(c, r, k, g, a + 1);\n                t = k.length;\n                0 < A && (r = X(O, f, I), C = H(3, k, r, c, D, z, t, g, a, h), f = r.join(''), void 0 !== C && 0 === (t = (k = C.trim()).length) && (g = 0, k = ''));\n                if (0 < t) switch (g) {\n                  case 115:\n                    f = f.replace(da, ea);\n\n                  case 100:\n                  case 109:\n                  case 45:\n                    k = f + '{' + k + '}';\n                    break;\n\n                  case 107:\n                    f = f.replace(fa, '$1 $2');\n                    k = f + '{' + k + '}';\n                    k = 1 === w || 2 === w && L('@' + k, 3) ? '@-webkit-' + k + '@' + k : '@' + k;\n                    break;\n\n                  default:\n                    k = f + k, 112 === h && (k = (p += k, ''));\n                } else k = '';\n                break;\n\n              default:\n                k = M(c, X(c, f, I), k, h, a + 1);\n            }\n\n            F += k;\n            k = I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n            break;\n\n          case 125:\n          case 59:\n            f = (0 < r ? f.replace(N, '') : f).trim();\n            if (1 < (t = f.length)) switch (0 === u && (q = f.charCodeAt(0), 45 === q || 96 < q && 123 > q) && (t = (f = f.replace(' ', ':')).length), 0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\\x00\\x00'), q = f.charCodeAt(0), g = f.charCodeAt(1), q) {\n              case 0:\n                break;\n\n              case 64:\n                if (105 === g || 99 === g) {\n                  G += f + e.charAt(l);\n                  break;\n                }\n\n              default:\n                58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)));\n            }\n            I = r = u = q = 0;\n            f = '';\n            g = e.charCodeAt(++l);\n        }\n      }\n\n      switch (g) {\n        case 13:\n        case 10:\n          47 === b ? b = 0 : 0 === 1 + q && 107 !== h && 0 < f.length && (r = 1, f += '\\x00');\n          0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h);\n          z = 1;\n          D++;\n          break;\n\n        case 59:\n        case 125:\n          if (0 === b + n + v + m) {\n            z++;\n            break;\n          }\n\n        default:\n          z++;\n          y = e.charAt(l);\n\n          switch (g) {\n            case 9:\n            case 32:\n              if (0 === n + m + b) switch (x) {\n                case 44:\n                case 58:\n                case 9:\n                case 32:\n                  y = '';\n                  break;\n\n                default:\n                  32 !== g && (y = ' ');\n              }\n              break;\n\n            case 0:\n              y = '\\\\0';\n              break;\n\n            case 12:\n              y = '\\\\f';\n              break;\n\n            case 11:\n              y = '\\\\v';\n              break;\n\n            case 38:\n              0 === n + b + m && (r = I = 1, y = '\\f' + y);\n              break;\n\n            case 108:\n              if (0 === n + b + m + E && 0 < u) switch (l - u) {\n                case 2:\n                  112 === x && 58 === e.charCodeAt(l - 3) && (E = x);\n\n                case 8:\n                  111 === K && (E = K);\n              }\n              break;\n\n            case 58:\n              0 === n + b + m && (u = l);\n              break;\n\n            case 44:\n              0 === b + v + n + m && (r = 1, y += '\\r');\n              break;\n\n            case 34:\n            case 39:\n              0 === b && (n = n === g ? 0 : 0 === n ? g : n);\n              break;\n\n            case 91:\n              0 === n + b + v && m++;\n              break;\n\n            case 93:\n              0 === n + b + v && m--;\n              break;\n\n            case 41:\n              0 === n + b + m && v--;\n              break;\n\n            case 40:\n              if (0 === n + b + m) {\n                if (0 === q) switch (2 * x + 3 * K) {\n                  case 533:\n                    break;\n\n                  default:\n                    q = 1;\n                }\n                v++;\n              }\n\n              break;\n\n            case 64:\n              0 === b + v + n + m + u + k && (k = 1);\n              break;\n\n            case 42:\n            case 47:\n              if (!(0 < n + m + v)) switch (b) {\n                case 0:\n                  switch (2 * g + 3 * e.charCodeAt(l + 1)) {\n                    case 235:\n                      b = 47;\n                      break;\n\n                    case 220:\n                      t = l, b = 42;\n                  }\n\n                  break;\n\n                case 42:\n                  47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), y = '', b = 0);\n              }\n          }\n\n          0 === b && (f += y);\n      }\n\n      K = x;\n      x = g;\n      l++;\n    }\n\n    t = p.length;\n\n    if (0 < t) {\n      r = c;\n      if (0 < A && (C = H(2, p, r, d, D, z, t, h, a, h), void 0 !== C && 0 === (p = C).length)) return G + p + F;\n      p = r.join(',') + '{' + p + '}';\n\n      if (0 !== w * E) {\n        2 !== w || L(p, 2) || (E = 0);\n\n        switch (E) {\n          case 111:\n            p = p.replace(ha, ':-moz-$1') + p;\n            break;\n\n          case 112:\n            p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p;\n        }\n\n        E = 0;\n      }\n    }\n\n    return G + p + F;\n  }\n\n  function X(d, c, e) {\n    var h = c.trim().split(ia);\n    c = h;\n    var a = h.length,\n        m = d.length;\n\n    switch (m) {\n      case 0:\n      case 1:\n        var b = 0;\n\n        for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {\n          c[b] = Z(d, c[b], e).trim();\n        }\n\n        break;\n\n      default:\n        var v = b = 0;\n\n        for (c = []; b < a; ++b) {\n          for (var n = 0; n < m; ++n) {\n            c[v++] = Z(d[n] + ' ', h[b], e).trim();\n          }\n        }\n\n    }\n\n    return c;\n  }\n\n  function Z(d, c, e) {\n    var h = c.charCodeAt(0);\n    33 > h && (h = (c = c.trim()).charCodeAt(0));\n\n    switch (h) {\n      case 38:\n        return c.replace(F, '$1' + d.trim());\n\n      case 58:\n        return d.trim() + c.replace(F, '$1' + d.trim());\n\n      default:\n        if (0 < 1 * e && 0 < c.indexOf('\\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim());\n    }\n\n    return d + c;\n  }\n\n  function P(d, c, e, h) {\n    var a = d + ';',\n        m = 2 * c + 3 * e + 4 * h;\n\n    if (944 === m) {\n      d = a.indexOf(':', 9) + 1;\n      var b = a.substring(d, a.length - 1).trim();\n      b = a.substring(0, d).trim() + b + ';';\n      return 1 === w || 2 === w && L(b, 1) ? '-webkit-' + b + b : b;\n    }\n\n    if (0 === w || 2 === w && !L(a, 1)) return a;\n\n    switch (m) {\n      case 1015:\n        return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a;\n\n      case 951:\n        return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a;\n\n      case 963:\n        return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a;\n\n      case 1009:\n        if (100 !== a.charCodeAt(4)) break;\n\n      case 969:\n      case 942:\n        return '-webkit-' + a + a;\n\n      case 978:\n        return '-webkit-' + a + '-moz-' + a + a;\n\n      case 1019:\n      case 983:\n        return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a;\n\n      case 883:\n        if (45 === a.charCodeAt(8)) return '-webkit-' + a + a;\n        if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a;\n        break;\n\n      case 932:\n        if (45 === a.charCodeAt(4)) switch (a.charCodeAt(5)) {\n          case 103:\n            return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a;\n\n          case 98:\n            return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a;\n        }\n        return '-webkit-' + a + '-ms-' + a + a;\n\n      case 964:\n        return '-webkit-' + a + '-ms-flex-' + a + a;\n\n      case 1023:\n        if (99 !== a.charCodeAt(8)) break;\n        b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify');\n        return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a;\n\n      case 1005:\n        return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a;\n\n      case 1e3:\n        b = a.substring(13).trim();\n        c = b.indexOf('-') + 1;\n\n        switch (b.charCodeAt(0) + b.charCodeAt(c)) {\n          case 226:\n            b = a.replace(G, 'tb');\n            break;\n\n          case 232:\n            b = a.replace(G, 'tb-rl');\n            break;\n\n          case 220:\n            b = a.replace(G, 'lr');\n            break;\n\n          default:\n            return a;\n        }\n\n        return '-webkit-' + a + '-ms-' + b + a;\n\n      case 1017:\n        if (-1 === a.indexOf('sticky', 9)) break;\n\n      case 975:\n        c = (a = d).length - 10;\n        b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim();\n\n        switch (m = b.charCodeAt(0) + (b.charCodeAt(7) | 0)) {\n          case 203:\n            if (111 > b.charCodeAt(8)) break;\n\n          case 115:\n            a = a.replace(b, '-webkit-' + b) + ';' + a;\n            break;\n\n          case 207:\n          case 102:\n            a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a;\n        }\n\n        return a + ';';\n\n      case 938:\n        if (45 === a.charCodeAt(5)) switch (a.charCodeAt(6)) {\n          case 105:\n            return b = a.replace('-items', ''), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a;\n\n          case 115:\n            return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a;\n\n          default:\n            return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a;\n        }\n        break;\n\n      case 973:\n      case 989:\n        if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break;\n\n      case 931:\n      case 953:\n        if (!0 === la.test(d)) return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0) ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch') : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a;\n        break;\n\n      case 962:\n        if (a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a, 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)) return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a;\n    }\n\n    return a;\n  }\n\n  function L(d, c) {\n    var e = d.indexOf(1 === c ? ':' : '{'),\n        h = d.substring(0, 3 !== c ? e : 10);\n    e = d.substring(e + 1, d.length - 1);\n    return R(2 !== c ? h : h.replace(na, '$1'), e, c);\n  }\n\n  function ea(d, c) {\n    var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2));\n    return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')';\n  }\n\n  function H(d, c, e, h, a, m, b, v, n, q) {\n    for (var g = 0, x = c, w; g < A; ++g) {\n      switch (w = S[g].call(B, d, x, e, h, a, m, b, v, n, q)) {\n        case void 0:\n        case !1:\n        case !0:\n        case null:\n          break;\n\n        default:\n          x = w;\n      }\n    }\n\n    if (x !== c) return x;\n  }\n\n  function T(d) {\n    switch (d) {\n      case void 0:\n      case null:\n        A = S.length = 0;\n        break;\n\n      default:\n        if ('function' === typeof d) S[A++] = d;else if ('object' === typeof d) for (var c = 0, e = d.length; c < e; ++c) {\n          T(d[c]);\n        } else Y = !!d | 0;\n    }\n\n    return T;\n  }\n\n  function U(d) {\n    d = d.prefix;\n    void 0 !== d && (R = null, d ? 'function' !== typeof d ? w = 1 : (w = 2, R = d) : w = 0);\n    return U;\n  }\n\n  function B(d, c) {\n    var e = d;\n    33 > e.charCodeAt(0) && (e = e.trim());\n    V = e;\n    e = [V];\n\n    if (0 < A) {\n      var h = H(-1, c, e, e, D, z, 0, 0, 0, 0);\n      void 0 !== h && 'string' === typeof h && (c = h);\n    }\n\n    var a = M(O, e, c, 0, 0);\n    0 < A && (h = H(-2, a, e, e, D, z, a.length, 0, 0, 0), void 0 !== h && (a = h));\n    V = '';\n    E = 0;\n    z = D = 1;\n    return a;\n  }\n\n  var ca = /^\\0+/g,\n      N = /[\\0\\r\\f]/g,\n      aa = /: */g,\n      ka = /zoo|gra/,\n      ma = /([,: ])(transform)/g,\n      ia = /,\\r+?/g,\n      F = /([\\t\\r\\n ])*\\f?&/g,\n      fa = /@(k\\w+)\\s*(\\S*)\\s*/,\n      Q = /::(place)/g,\n      ha = /:(read-only)/g,\n      G = /[svh]\\w+-[tblr]{2}/,\n      da = /\\(\\s*(.*)\\s*\\)/g,\n      oa = /([\\s\\S]*?);/g,\n      ba = /-self|flex-/g,\n      na = /[^]*?(:[rp][el]a[\\w-]+)[^]*/,\n      la = /stretch|:\\s*\\w+\\-(?:conte|avail)/,\n      ja = /([^-])(image-set\\()/,\n      z = 1,\n      D = 1,\n      E = 0,\n      w = 1,\n      O = [],\n      S = [],\n      A = 0,\n      R = null,\n      Y = 0,\n      V = '';\n  B.use = T;\n  B.set = U;\n  void 0 !== W && U(W);\n  return B;\n}\n\nexports.default = stylis_min;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/stylis/dist/stylis.browser.cjs.js\n// module id = 17\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar unitlessKeys = {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  msGridRow: 1,\n  msGridRowSpan: 1,\n  msGridColumn: 1,\n  msGridColumnSpan: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\n\nexports.default = unitlessKeys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/unitless/dist/unitless.browser.cjs.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar weakMemoize = function weakMemoize(func) {\n  // $FlowFixMe flow doesn't include all non-primitive types as allowed for weakmaps\n  var cache = new WeakMap();\n  return function (arg) {\n    if (cache.has(arg)) {\n      // $FlowFixMe\n      return cache.get(arg);\n    }\n\n    var ret = func(arg);\n    cache.set(arg, ret);\n    return ret;\n  };\n};\n\nexports.default = weakMemoize;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@emotion/weak-memoize/dist/weak-memoize.browser.cjs.js\n// module id = 19\n// module chunks = 0","import React from 'react';\r\nimport STLViewer from '../../src/App';\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <STLViewer\r\n        models={[\r\n          // 'https://hassans.s3.eu-central-1.amazonaws.com/youssef/order/order_g69r/impressions/order_g69rL.STL',\r\n          'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_outputmodel09-04-2022:20:09:47.stl',\r\n          'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_faceplatemodel09-04-2022:20:09:2.stl',\r\n          'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_inputmodel09-05-2022:14:09:33.STL',\r\n        ]}\r\n        color=\"rgba(255,0,48,0.2)\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./react/containers/App.js","import React, { useState, useEffect } from 'react';\r\nimport STLViewer from './STLViewer';\r\nimport Slider from 'react-input-slider';\r\nconst App = (props) => {\r\n  const { models, color, rotate = false } = props;\r\n  // const [color, setColor] = useState('rgba(255,0,48,0.2)');\r\n  // const [models, setModels] = useState([\r\n  //   // 'https://hassans.s3.eu-central-1.amazonaws.com/youssef/order/order_g69r/impressions/order_g69rL.STL',\r\n  //   'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_outputmodel09-04-2022:20:09:47.stl',\r\n  //   'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_faceplatemodel09-04-2022:20:09:2.stl',\r\n  //   'https://hassans.s3.eu-central-1.amazonaws.com/assets/002r_inputmodel09-05-2022:14:09:33.STL',\r\n  // ]);\r\n  const [sliders, setSliders] = useState([]);\r\n  useEffect(() => {\r\n    setSliders(\r\n      models.map((_, index) => ({\r\n        index,\r\n        value: 1,\r\n      }))\r\n    );\r\n  }, [models]);\r\n  if (!models) return null;\r\n  return (\r\n    <div>\r\n      <div style={{ margin: '10px 0px' }}>\r\n        {sliders.map((item, index) => {\r\n          return (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                margin: '10px 0px',\r\n              }}\r\n            >\r\n              <input\r\n                type=\"checkbox\"\r\n                onClick={(e) => {\r\n                  const newSliders = sliders.map((item, i) => {\r\n                    if (i === index) {\r\n                      if (e.target.checked) {\r\n                        return { ...item, value: 0 };\r\n                      } else {\r\n                        return { ...item, value: 1 };\r\n                      }\r\n                    }\r\n                    return item;\r\n                  });\r\n                  setSliders(newSliders);\r\n                }}\r\n              />\r\n              <Slider\r\n                axis=\"x\"\r\n                xstep={0.1}\r\n                xmin={0.0}\r\n                xmax={1.0}\r\n                x={item.value}\r\n                onChange={({ x }) => {\r\n                  const newSliders = sliders.map((item, i) => {\r\n                    if (i === index) {\r\n                      return { ...item, value: parseFloat(x) };\r\n                    }\r\n                    return item;\r\n                  });\r\n                  setSliders(newSliders);\r\n                }}\r\n                style={{ marginLeft: '20px' }}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <STLViewer\r\n        modelColor={color}\r\n        rotate={rotate}\r\n        sliders={sliders}\r\n        models={models}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/App.js","import THREE from './Three';\r\nimport ReactDOM from 'react-dom';\r\nlet OrbitControls = require('three-orbit-controls')(THREE);\r\n\r\nconst DIRECTIONAL_LIGHT = 'directionalLight';\r\n\r\nclass Paint {\r\n  constructor() {\r\n    this.loader = new THREE.STLLoader();\r\n    this.scene = new THREE.Scene();\r\n    this.renderer = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n    });\r\n    this.reqNumber = 0;\r\n    this.loaded = false;\r\n    this.light = undefined;\r\n  }\r\n\r\n  init(context, sliders, models) {\r\n    this.models = models;\r\n    this.sliders = sliders;\r\n    this.component = context;\r\n    this.width = context.props.width;\r\n    this.height = context.props.height;\r\n    this.modelColor = context.props.modelColor;\r\n    this.backgroundColor = context.props.backgroundColor;\r\n    this.orbitControls = context.props.orbitControls;\r\n    this.rotate = context.props.rotate;\r\n    this.cameraX = context.props.cameraX;\r\n    this.cameraY = context.props.cameraY;\r\n    this.cameraZ = context.props.cameraZ;\r\n    this.rotationSpeeds = context.props.rotationSpeeds;\r\n    this.lights = context.props.lights;\r\n    this.lightColor = context.props.lightColor;\r\n    this.model = context.props.model;\r\n\r\n    // if (this.mesh !== undefined) {\r\n    //   this.scene.remove(this.mesh);\r\n    //   this.mesh.geometry.dispose();\r\n    //   this.mesh.material.dispose();\r\n    //   this.scene.remove(this.grid);\r\n    // }\r\n\r\n    if (this.animationRequestId) {\r\n      cancelAnimationFrame(this.animationRequestId);\r\n    }\r\n\r\n    this.distance = 10000;\r\n\r\n    this.reqNumber += 1;\r\n    if (!this.loaded) this.addSTLToScene(this.reqNumber);\r\n    const meshMaterial = this.scene.children.filter(\r\n      (item) => item.type === 'Mesh'\r\n    );\r\n    if (meshMaterial.length === sliders.length) {\r\n      sliders.map((item, index) => {\r\n        meshMaterial[index].material.opacity = item.value;\r\n        // meshMaterial[index].material.visible = visibleSliders[index].value;\r\n        meshMaterial[index].updateMatrix();\r\n        this.render();\r\n      });\r\n    }\r\n    this.loaded = true;\r\n  }\r\n\r\n  addLight(lights, index = 0) {\r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n    directionalLight.name = DIRECTIONAL_LIGHT + index;\r\n    directionalLight.position.normalize();\r\n    this.light = directionalLight;\r\n    this.scene.add(directionalLight);\r\n  }\r\n\r\n  loadSTLFromUrl(url, reqId) {\r\n    return new Promise((resolve) => {\r\n      this.loader.crossOrigin = '';\r\n      this.loader.loadFromUrl(url, (geometry) => {\r\n        // if (this.reqNumber !== reqId) {\r\n        //   return;\r\n        // }\r\n        resolve(geometry);\r\n      });\r\n    });\r\n  }\r\n\r\n  loadFromFile(file) {\r\n    return new Promise((resolve) => {\r\n      this.loader.loadFromFile(file, (geometry) => {\r\n        resolve(geometry);\r\n      });\r\n    });\r\n  }\r\n\r\n  addSTLToScene(reqId) {\r\n    this.models.map((item, index) => {\r\n      if (index === 0) {\r\n        // while (this.scene.children.length > 0) {\r\n        //   this.scene.remove(this.scene.children[0]);\r\n        // }\r\n\r\n        // lights processing\r\n        const hasMultipleLights = this.lights.reduce(\r\n          (acc, item) => acc && Array.isArray(item),\r\n          true\r\n        );\r\n        if (hasMultipleLights) {\r\n          this.lights.forEach(this.addLight.bind(this));\r\n        } else {\r\n          this.addLight(this.lights);\r\n        }\r\n      }\r\n\r\n      this.loadSTLFromUrl(item, reqId).then((geometry) => {\r\n        // Calculate mesh noramls for MeshLambertMaterial.\r\n        geometry.computeFaceNormals();\r\n        geometry.computeVertexNormals();\r\n        // Center the object\r\n        // geometry.center();\r\n        let material = new THREE.MeshLambertMaterial({\r\n          color: this.modelColor,\r\n          transparent: true,\r\n          opacity: 1,\r\n          side: THREE.DoubleSide,\r\n          visible: true,\r\n        });\r\n\r\n        if (geometry.hasColors) {\r\n          material = new THREE.MeshPhongMaterial({\r\n            opacity: geometry.alpha,\r\n            vertexColors: THREE.VertexColors,\r\n          });\r\n        }\r\n\r\n        this.mesh = new THREE.Mesh(geometry, material);\r\n        // Set the object's dimensions\r\n        geometry.computeBoundingBox();\r\n        geometry.computeBoundingSphere();\r\n\r\n        if (this.xDims === undefined) {\r\n          this.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\r\n          this.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\r\n          this.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\r\n          // this.xDims = geometry.boundingSphere.center.x;\r\n          // this.yDims = geometry.boundingSphere.center.y;\r\n          // this.zDims = geometry.boundingSphere.center.z;\r\n        }\r\n\r\n        if (this.rotate) {\r\n          this.mesh.rotation.x = this.rotationSpeeds[0];\r\n          this.mesh.rotation.y = this.rotationSpeeds[1];\r\n          this.mesh.rotation.z = this.rotationSpeeds[2];\r\n        }\r\n\r\n        this.mesh.updateMatrix();\r\n\r\n        this.scene.add(this.mesh);\r\n\r\n        this.addCamera();\r\n        this.light.position.copy(this.camera.position);\r\n\r\n        this.addInteractionControls();\r\n        this.addToReactComponent();\r\n\r\n        // Start the animation\r\n        this.animate();\r\n      });\r\n    });\r\n  }\r\n\r\n  addCamera() {\r\n    if (\r\n      !this.scene.children.find((item) => item.type === 'PerspectiveCamera')\r\n    ) {\r\n      // Add the camera\r\n      this.camera = new THREE.PerspectiveCamera(\r\n        30,\r\n        this.width / this.height,\r\n        1,\r\n        this.distance\r\n      );\r\n\r\n      if (this.cameraZ === null) {\r\n        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\r\n      }\r\n\r\n      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\r\n      const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n      this.camera.add(directionalLight);\r\n      this.camera.lookAt(this.mesh);\r\n      this.scene.add(this.camera);\r\n\r\n      this.renderer.physicallyCorrectLights = true;\r\n      this.renderer.setSize(this.width, this.height);\r\n      this.renderer.setClearColor(this.backgroundColor, 1);\r\n    }\r\n  }\r\n\r\n  addInteractionControls() {\r\n    // Add controls for mouse interaction\r\n    if (this.orbitControls) {\r\n      if (this.controls) {\r\n        this.controls.dispose();\r\n      }\r\n      this.controls = new OrbitControls(\r\n        this.camera,\r\n        ReactDOM.findDOMNode(this.component)\r\n      );\r\n      this.controls.enableKeys = false;\r\n      this.controls.addEventListener('change', this.orbitRender.bind(this));\r\n    }\r\n  }\r\n\r\n  addToReactComponent() {\r\n    // Add to the React Component\r\n    // ReactDOM.render(this.component, document.getElementById('loader'));\r\n    ReactDOM.findDOMNode(this.component).replaceChild(\r\n      this.renderer.domElement,\r\n      ReactDOM.findDOMNode(this.component).firstChild\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Animate the scene\r\n   * @returns {void}\r\n   */\r\n  animate() {\r\n    // note: three.js includes requestAnimationFrame shim\r\n    if (this.rotate) {\r\n      this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\r\n    }\r\n\r\n    if (this.orbitControls) {\r\n      this.controls.update();\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Render the scene after turning off the rotation\r\n   * @returns {void}\r\n   */\r\n  orbitRender() {\r\n    if (this.rotate) {\r\n      this.rotate = false;\r\n    }\r\n    const directionalLight = this.scene.getObjectByName('directionalLight0');\r\n    directionalLight.position.copy(this.camera.position);\r\n\r\n    this.render();\r\n  }\r\n\r\n  /**\r\n   * Deallocate Mesh, renderer context.\r\n   * @returns {void}\r\n   */\r\n  clean() {\r\n    if (this.mesh !== undefined) {\r\n      this.mesh.geometry.dispose();\r\n      this.mesh.material.dispose();\r\n      this.scene.remove(this.mesh);\r\n      delete this.mesh;\r\n    }\r\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\r\n    if (directionalLightObj) {\r\n      this.scene.remove(directionalLightObj);\r\n    }\r\n\r\n    if (this.animationRequestId) {\r\n      cancelAnimationFrame(this.animationRequestId);\r\n    }\r\n    this.renderer.dispose();\r\n    this.renderer.forceContextLoss();\r\n  }\r\n\r\n  /**\r\n   * Render the scene\r\n   * @returns {void}\r\n   */\r\n  render() {\r\n    if (this.mesh && this.rotate) {\r\n      this.mesh.rotation.x += this.rotationSpeeds[0];\r\n      this.mesh.rotation.y += this.rotationSpeeds[1];\r\n      this.mesh.rotation.z += this.rotationSpeeds[2];\r\n    }\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n  }\r\n}\r\n\r\nexport default Paint;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Paint.js","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Paint from './Paint';\r\nclass STLViewer extends Component {\r\n  static propTypes = {\r\n    className: PropTypes.string,\r\n    url: PropTypes.string,\r\n    width: PropTypes.number,\r\n    height: PropTypes.number,\r\n    backgroundColor: PropTypes.string,\r\n    modelColor: PropTypes.string,\r\n    rotate: PropTypes.bool,\r\n    orbitControls: PropTypes.bool,\r\n    cameraX: PropTypes.number,\r\n    cameraY: PropTypes.number,\r\n    cameraZ: PropTypes.number,\r\n    lights: PropTypes.array,\r\n    lightColor: PropTypes.string,\r\n    rotationSpeeds: PropTypes.arrayOf(PropTypes.number),\r\n    model: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(ArrayBuffer),\r\n    ]).isRequired,\r\n    models: PropTypes.oneOfType([\r\n      PropTypes.string,\r\n      PropTypes.instanceOf(ArrayBuffer),\r\n    ]).isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    backgroundColor: '#EAEAEA',\r\n    modelColor: '#B92C2C',\r\n    height: 400,\r\n    width: 400,\r\n    rotate: true,\r\n    orbitControls: true,\r\n    cameraX: 0,\r\n    cameraY: 0,\r\n    cameraZ: null,\r\n    lights: [0, 0, 1],\r\n    lightColor: '#ffffff',\r\n    rotationSpeeds: [0, 0, 0.02],\r\n    model: undefined,\r\n    models: undefined,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.paint = new Paint();\r\n    this.paint.init(this, this.props.sliders, this.props.models);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return JSON.stringify(nextProps) !== JSON.stringify(this.props);\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    this.props = nextProps;\r\n    this.paint.init(this, this.props.sliders, this.props.models);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.paint.clean();\r\n    delete this.paint;\r\n  }\r\n\r\n  render() {\r\n    const { width, height, modelColor } = this.props;\r\n    return (\r\n      <div\r\n        className={this.props.className}\r\n        style={{\r\n          width: width,\r\n          height: height,\r\n          overflow: 'hidden',\r\n        }}\r\n      >\r\n        <div\r\n          id=\"loader\"\r\n          style={{\r\n            height: '100%',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div className=\"spinner spinner-blue\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nmodule.exports = STLViewer;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/STLViewer.js","var THREE = require('three');\r\n\r\n//\r\n// STL Loader added\r\n//\r\n/**\r\n * @author aleeper / http://adamleeper.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author gero3 / https://github.com/gero3\r\n *\r\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\r\n *\r\n * Supports both binary and ASCII encoded files, with automatic detection of type.\r\n *\r\n * Limitations:\r\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\r\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\r\n *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\r\n *\r\n * Usage:\r\n *  var loader = new THREE.STLLoader();\r\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\r\n *    scene.add( new THREE.Mesh( geometry ) );\r\n *  });\r\n *\r\n * For binary STLs geometry might contain colors for vertices. To use it:\r\n *  // use the same code to load STL as above\r\n *  if (geometry.hasColors) {\r\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\r\n *  } else { .... }\r\n *  var mesh = new THREE.Mesh( geometry, material );\r\n */\r\n\r\nTHREE.STLLoader = function (manager) {\r\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\r\n};\r\n\r\nTHREE.STLLoader.prototype = {\r\n  constructor: THREE.STLLoader,\r\n\r\n  loadFromUrl: function (url, onLoad, onProgress, onError) {\r\n    var scope = this;\r\n\r\n    var loader = new THREE.XHRLoader(scope.manager);\r\n    loader.setCrossOrigin(this.crossOrigin);\r\n    loader.setResponseType('arraybuffer');\r\n    loader.load(\r\n      url,\r\n      function (text) {\r\n        onLoad(scope.parse(text));\r\n      },\r\n      onProgress,\r\n      onError\r\n    );\r\n  },\r\n\r\n  loadFromFile: function (buffer, onLoad) {\r\n    var scope = this;\r\n    onLoad(scope.parse(buffer));\r\n  },\r\n\r\n  parse: function (data) {\r\n    var isBinary = function () {\r\n      var expect, face_size, n_faces, reader;\r\n      reader = new DataView(binData);\r\n      face_size = (32 / 8) * 3 + (32 / 8) * 3 * 3 + 16 / 8;\r\n      n_faces = reader.getUint32(80, true);\r\n      expect = 80 + 32 / 8 + n_faces * face_size;\r\n\r\n      if (expect === reader.byteLength) {\r\n        return true;\r\n      }\r\n\r\n      // some binary files will have different size from expected,\r\n      // checking characters higher than ASCII to confirm is binary\r\n      var fileLength = reader.byteLength;\r\n      for (var index = 0; index < fileLength; index++) {\r\n        if (reader.getUint8(index, false) > 127) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    var binData = this.ensureBinary(data);\r\n\r\n    return isBinary()\r\n      ? this.parseBinary(binData)\r\n      : this.parseASCII(this.ensureString(data));\r\n  },\r\n\r\n  parseBinary: function (data) {\r\n    var reader = new DataView(data);\r\n    var faces = reader.getUint32(80, true);\r\n\r\n    var r,\r\n      g,\r\n      b,\r\n      hasColors = false,\r\n      colors;\r\n    var defaultR, defaultG, defaultB, alpha;\r\n\r\n    // process STL header\r\n    // check for default color in header (\"COLOR=rgba\" sequence).\r\n\r\n    for (var index = 0; index < 80 - 10; index++) {\r\n      if (\r\n        reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ &&\r\n        reader.getUint8(index + 4) == 0x52 /*'R'*/ &&\r\n        reader.getUint8(index + 5) == 0x3d /*'='*/\r\n      ) {\r\n        hasColors = true;\r\n        colors = new Float32Array(faces * 3 * 3);\r\n\r\n        defaultR = reader.getUint8(index + 6) / 255;\r\n        defaultG = reader.getUint8(index + 7) / 255;\r\n        defaultB = reader.getUint8(index + 8) / 255;\r\n        alpha = reader.getUint8(index + 9) / 255;\r\n      }\r\n    }\r\n\r\n    var dataOffset = 84;\r\n    var faceLength = 12 * 4 + 2;\r\n\r\n    var offset = 0;\r\n\r\n    var geometry = new THREE.BufferGeometry();\r\n\r\n    var vertices = new Float32Array(faces * 3 * 3);\r\n    var normals = new Float32Array(faces * 3 * 3);\r\n\r\n    for (var face = 0; face < faces; face++) {\r\n      var start = dataOffset + face * faceLength;\r\n      var normalX = reader.getFloat32(start, true);\r\n      var normalY = reader.getFloat32(start + 4, true);\r\n      var normalZ = reader.getFloat32(start + 8, true);\r\n\r\n      if (hasColors) {\r\n        var packedColor = reader.getUint16(start + 48, true);\r\n\r\n        if ((packedColor & 0x8000) === 0) {\r\n          // facet has its own unique color\r\n\r\n          r = (packedColor & 0x1f) / 31;\r\n          g = ((packedColor >> 5) & 0x1f) / 31;\r\n          b = ((packedColor >> 10) & 0x1f) / 31;\r\n        } else {\r\n          r = defaultR;\r\n          g = defaultG;\r\n          b = defaultB;\r\n        }\r\n      }\r\n\r\n      for (var i = 1; i <= 3; i++) {\r\n        var vertexstart = start + i * 12;\r\n\r\n        vertices[offset] = reader.getFloat32(vertexstart, true);\r\n        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\r\n        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\r\n\r\n        normals[offset] = normalX;\r\n        normals[offset + 1] = normalY;\r\n        normals[offset + 2] = normalZ;\r\n\r\n        if (hasColors) {\r\n          colors[offset] = r;\r\n          colors[offset + 1] = g;\r\n          colors[offset + 2] = b;\r\n        }\r\n\r\n        offset += 3;\r\n      }\r\n    }\r\n\r\n    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\r\n    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\r\n\r\n    if (hasColors) {\r\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\r\n      geometry.hasColors = true;\r\n      geometry.alpha = alpha;\r\n    }\r\n\r\n    return geometry;\r\n  },\r\n\r\n  parseASCII: function (data) {\r\n    var geometry,\r\n      length,\r\n      normal,\r\n      patternFace,\r\n      patternNormal,\r\n      patternVertex,\r\n      result,\r\n      text;\r\n    geometry = new THREE.Geometry();\r\n    patternFace = /facet([\\s\\S]*?)endfacet/g;\r\n\r\n    while ((result = patternFace.exec(data)) !== null) {\r\n      text = result[0];\r\n      patternNormal =\r\n        /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\r\n\r\n      while ((result = patternNormal.exec(text)) !== null) {\r\n        normal = new THREE.Vector3(\r\n          parseFloat(result[1]),\r\n          parseFloat(result[3]),\r\n          parseFloat(result[5])\r\n        );\r\n      }\r\n\r\n      patternVertex =\r\n        /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\r\n\r\n      while ((result = patternVertex.exec(text)) !== null) {\r\n        geometry.vertices.push(\r\n          new THREE.Vector3(\r\n            parseFloat(result[1]),\r\n            parseFloat(result[3]),\r\n            parseFloat(result[5])\r\n          )\r\n        );\r\n      }\r\n\r\n      length = geometry.vertices.length;\r\n\r\n      geometry.faces.push(\r\n        new THREE.Face3(length - 3, length - 2, length - 1, normal)\r\n      );\r\n    }\r\n\r\n    geometry.computeBoundingBox();\r\n    geometry.computeBoundingSphere();\r\n\r\n    return geometry;\r\n  },\r\n\r\n  ensureString: function (buf) {\r\n    if (typeof buf !== 'string') {\r\n      var array_buffer = new Uint8Array(buf);\r\n      var str = '';\r\n      for (var i = 0; i < buf.byteLength; i++) {\r\n        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\r\n      }\r\n      return str;\r\n    } else {\r\n      return buf;\r\n    }\r\n  },\r\n\r\n  ensureBinary: function (buf) {\r\n    if (typeof buf === 'string') {\r\n      var array_buffer = new Uint8Array(buf.length);\r\n      for (var i = 0; i < buf.length; i++) {\r\n        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\r\n      }\r\n      return array_buffer.buffer || array_buffer;\r\n    } else {\r\n      return buf;\r\n    }\r\n  },\r\n};\r\n\r\nif (typeof DataView === 'undefined') {\r\n  DataView = function (buffer, byteOffset, byteLength) {\r\n    this.buffer = buffer;\r\n    this.byteOffset = byteOffset || 0;\r\n    this.byteLength = byteLength || buffer.byteLength || buffer.length;\r\n    this._isString = typeof buffer === 'string';\r\n  };\r\n\r\n  DataView.prototype = {\r\n    _getCharCodes: function (buffer, start, length) {\r\n      start = start || 0;\r\n      length = length || buffer.length;\r\n      var end = start + length;\r\n      var codes = [];\r\n      for (var i = start; i < end; i++) {\r\n        codes.push(buffer.charCodeAt(i) & 0xff);\r\n      }\r\n      return codes;\r\n    },\r\n\r\n    _getBytes: function (length, byteOffset, littleEndian) {\r\n      var result;\r\n\r\n      // Handle the lack of endianness\r\n      if (littleEndian === undefined) {\r\n        littleEndian = this._littleEndian;\r\n      }\r\n\r\n      // Handle the lack of byteOffset\r\n      if (byteOffset === undefined) {\r\n        byteOffset = this.byteOffset;\r\n      } else {\r\n        byteOffset = this.byteOffset + byteOffset;\r\n      }\r\n\r\n      if (length === undefined) {\r\n        length = this.byteLength - byteOffset;\r\n      }\r\n\r\n      // Error Checking\r\n      if (typeof byteOffset !== 'number') {\r\n        throw new TypeError('DataView byteOffset is not a number');\r\n      }\r\n\r\n      if (length < 0 || byteOffset + length > this.byteLength) {\r\n        throw new Error(\r\n          'DataView length or (byteOffset+length) value is out of bounds'\r\n        );\r\n      }\r\n\r\n      if (this.isString) {\r\n        result = this._getCharCodes(\r\n          this.buffer,\r\n          byteOffset,\r\n          byteOffset + length\r\n        );\r\n      } else {\r\n        result = this.buffer.slice(byteOffset, byteOffset + length);\r\n      }\r\n\r\n      if (!littleEndian && length > 1) {\r\n        if (!(result instanceof Array)) {\r\n          result = Array.prototype.slice.call(result);\r\n        }\r\n\r\n        result.reverse();\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    // Compatibility functions on a String Buffer\r\n\r\n    getFloat64: function (byteOffset, littleEndian) {\r\n      var b = this._getBytes(8, byteOffset, littleEndian),\r\n        sign = 1 - 2 * (b[7] >> 7),\r\n        exponent =\r\n          ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\r\n        // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\r\n        mantissa =\r\n          (b[6] & 0x0f) * Math.pow(2, 48) +\r\n          b[5] * Math.pow(2, 40) +\r\n          b[4] * Math.pow(2, 32) +\r\n          b[3] * Math.pow(2, 24) +\r\n          b[2] * Math.pow(2, 16) +\r\n          b[1] * Math.pow(2, 8) +\r\n          b[0];\r\n\r\n      if (exponent === 1024) {\r\n        if (mantissa !== 0) {\r\n          return NaN;\r\n        } else {\r\n          return sign * Infinity;\r\n        }\r\n      }\r\n\r\n      if (exponent === -1023) {\r\n        // Denormalized\r\n        return sign * mantissa * Math.pow(2, -1022 - 52);\r\n      }\r\n\r\n      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\r\n    },\r\n\r\n    getFloat32: function (byteOffset, littleEndian) {\r\n      var b = this._getBytes(4, byteOffset, littleEndian),\r\n        sign = 1 - 2 * (b[3] >> 7),\r\n        exponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\r\n        mantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\r\n\r\n      if (exponent === 128) {\r\n        if (mantissa !== 0) {\r\n          return NaN;\r\n        } else {\r\n          return sign * Infinity;\r\n        }\r\n      }\r\n\r\n      if (exponent === -127) {\r\n        // Denormalized\r\n        return sign * mantissa * Math.pow(2, -126 - 23);\r\n      }\r\n\r\n      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\r\n    },\r\n\r\n    getInt32: function (byteOffset, littleEndian) {\r\n      var b = this._getBytes(4, byteOffset, littleEndian);\r\n      return (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\r\n    },\r\n\r\n    getUint32: function (byteOffset, littleEndian) {\r\n      return this.getInt32(byteOffset, littleEndian) >>> 0;\r\n    },\r\n\r\n    getInt16: function (byteOffset, littleEndian) {\r\n      return (this.getUint16(byteOffset, littleEndian) << 16) >> 16;\r\n    },\r\n\r\n    getUint16: function (byteOffset, littleEndian) {\r\n      var b = this._getBytes(2, byteOffset, littleEndian);\r\n      return (b[1] << 8) | b[0];\r\n    },\r\n\r\n    getInt8: function (byteOffset) {\r\n      return (this.getUint8(byteOffset) << 24) >> 24;\r\n    },\r\n\r\n    getUint8: function (byteOffset) {\r\n      return this._getBytes(1, byteOffset)[0];\r\n    },\r\n  };\r\n}\r\n\r\nmodule.exports = THREE;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Three.js","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 25\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 26\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 27\n// module chunks = 0","/** @license React v17.0.2\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),m=require(\"object-assign\"),r=require(\"scheduler\");function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}if(!aa)throw Error(y(227));var ba=new Set,ca={};function da(a,b){ea(a,b);ea(a+\"Capture\",b)}\nfunction ea(a,b){ca[a]=b;for(a=0;a<b.length;a++)ba.add(b[a])}\nvar fa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ha=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,ia=Object.prototype.hasOwnProperty,\nja={},ka={};function la(a){if(ia.call(ka,a))return!0;if(ia.call(ja,a))return!1;if(ha.test(a))return ka[a]=!0;ja[a]=!0;return!1}function ma(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction na(a,b,c,d){if(null===b||\"undefined\"===typeof b||ma(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function B(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var D={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){D[a]=new B(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];D[b]=new B(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){D[a]=new B(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){D[a]=new B(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){D[a]=new B(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){D[a]=new B(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){D[a]=new B(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){D[a]=new B(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){D[a]=new B(a,5,!1,a.toLowerCase(),null,!1,!1)});var oa=/[\\-:]([a-z])/g;function pa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(oa,\npa);D[b]=new B(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(oa,pa);D[b]=new B(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!1,!1)});\nD.xlinkHref=new B(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){D[a]=new B(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction qa(a,b,c,d){var e=D.hasOwnProperty(b)?D[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(na(b,c,e,d)&&(c=null),d||null===e?la(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}\nvar ra=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,sa=60103,ta=60106,ua=60107,wa=60108,xa=60114,ya=60109,za=60110,Aa=60112,Ba=60113,Ca=60120,Da=60115,Ea=60116,Fa=60121,Ga=60128,Ha=60129,Ia=60130,Ja=60131;\nif(\"function\"===typeof Symbol&&Symbol.for){var E=Symbol.for;sa=E(\"react.element\");ta=E(\"react.portal\");ua=E(\"react.fragment\");wa=E(\"react.strict_mode\");xa=E(\"react.profiler\");ya=E(\"react.provider\");za=E(\"react.context\");Aa=E(\"react.forward_ref\");Ba=E(\"react.suspense\");Ca=E(\"react.suspense_list\");Da=E(\"react.memo\");Ea=E(\"react.lazy\");Fa=E(\"react.block\");E(\"react.scope\");Ga=E(\"react.opaque.id\");Ha=E(\"react.debug_trace_mode\");Ia=E(\"react.offscreen\");Ja=E(\"react.legacy_hidden\")}\nvar Ka=\"function\"===typeof Symbol&&Symbol.iterator;function La(a){if(null===a||\"object\"!==typeof a)return null;a=Ka&&a[Ka]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ma;function Na(a){if(void 0===Ma)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);Ma=b&&b[1]||\"\"}return\"\\n\"+Ma+a}var Oa=!1;\nfunction Pa(a,b){if(!a||Oa)return\"\";Oa=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Oa=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Na(a):\"\"}\nfunction Qa(a){switch(a.tag){case 5:return Na(a.type);case 16:return Na(\"Lazy\");case 13:return Na(\"Suspense\");case 19:return Na(\"SuspenseList\");case 0:case 2:case 15:return a=Pa(a.type,!1),a;case 11:return a=Pa(a.type.render,!1),a;case 22:return a=Pa(a.type._render,!1),a;case 1:return a=Pa(a.type,!0),a;default:return\"\"}}\nfunction Ra(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ua:return\"Fragment\";case ta:return\"Portal\";case xa:return\"Profiler\";case wa:return\"StrictMode\";case Ba:return\"Suspense\";case Ca:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case za:return(a.displayName||\"Context\")+\".Consumer\";case ya:return(a._context.displayName||\"Context\")+\".Provider\";case Aa:var b=a.render;b=b.displayName||b.name||\"\";\nreturn a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Da:return Ra(a.type);case Fa:return Ra(a._render);case Ea:b=a._payload;a=a._init;try{return Ra(a(b))}catch(c){}}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;default:return\"\"}}function Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return m({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function $a(a,b){b=b.checked;null!=b&&qa(a,\"checked\",b,!1)}\nfunction ab(a,b){$a(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?bb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&bb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction cb(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction bb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function db(a){var b=\"\";aa.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}function eb(a,b){a=m({children:void 0},b);if(b=db(b.children))a.children=b;return a}\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(y(91));return m({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(y(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(y(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}var kb={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction lb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function mb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?lb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar nb,ob=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==kb.svg||\"innerHTML\"in a)a.innerHTML=b;else{nb=nb||document.createElement(\"div\");nb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=nb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction pb(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar qb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,\nfloodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},rb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(qb).forEach(function(a){rb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);qb[b]=qb[a]})});function sb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||qb.hasOwnProperty(a)&&qb[a]?(\"\"+b).trim():b+\"px\"}\nfunction tb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=sb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var ub=m({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction vb(a,b){if(b){if(ub[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(y(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(y(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML))throw Error(y(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(y(62));}}\nfunction wb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(y(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(a,b,c,d,e){return a(b,c,d,e)}function Ib(){}var Jb=Gb,Kb=!1,Lb=!1;function Mb(){if(null!==zb||null!==Ab)Ib(),Fb()}\nfunction Nb(a,b,c){if(Lb)return a(b,c);Lb=!0;try{return Jb(a,b,c)}finally{Lb=!1,Mb()}}\nfunction Ob(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(y(231,b,typeof c));return c}var Pb=!1;if(fa)try{var Qb={};Object.defineProperty(Qb,\"passive\",{get:function(){Pb=!0}});window.addEventListener(\"test\",Qb,Qb);window.removeEventListener(\"test\",Qb,Qb)}catch(a){Pb=!1}function Rb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(n){this.onError(n)}}var Sb=!1,Tb=null,Ub=!1,Vb=null,Wb={onError:function(a){Sb=!0;Tb=a}};function Xb(a,b,c,d,e,f,g,h,k){Sb=!1;Tb=null;Rb.apply(Wb,arguments)}\nfunction Yb(a,b,c,d,e,f,g,h,k){Xb.apply(this,arguments);if(Sb){if(Sb){var l=Tb;Sb=!1;Tb=null}else throw Error(y(198));Ub||(Ub=!0,Vb=l)}}function Zb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function $b(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function ac(a){if(Zb(a)!==a)throw Error(y(188));}\nfunction bc(a){var b=a.alternate;if(!b){b=Zb(a);if(null===b)throw Error(y(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return ac(e),a;if(f===d)return ac(e),b;f=f.sibling}throw Error(y(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(y(189));}}if(c.alternate!==d)throw Error(y(190));}if(3!==c.tag)throw Error(y(188));return c.stateNode.current===c?a:b}function cc(a){a=bc(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}\nfunction dc(a,b){for(var c=a.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}var ec,fc,gc,hc,ic=!1,jc=[],kc=null,lc=null,mc=null,nc=new Map,oc=new Map,pc=[],qc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction rc(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function sc(a,b){switch(a){case \"focusin\":case \"focusout\":kc=null;break;case \"dragenter\":case \"dragleave\":lc=null;break;case \"mouseover\":case \"mouseout\":mc=null;break;case \"pointerover\":case \"pointerout\":nc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":oc.delete(b.pointerId)}}\nfunction tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=rc(b,c,d,e,f),null!==b&&(b=Cb(b),null!==b&&fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction uc(a,b,c,d,e){switch(b){case \"focusin\":return kc=tc(kc,a,b,c,d,e),!0;case \"dragenter\":return lc=tc(lc,a,b,c,d,e),!0;case \"mouseover\":return mc=tc(mc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;nc.set(f,tc(nc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,oc.set(f,tc(oc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction vc(a){var b=wc(a.target);if(null!==b){var c=Zb(b);if(null!==c)if(b=c.tag,13===b){if(b=$b(c),null!==b){a.blockedOn=b;hc(a.lanePriority,function(){r.unstable_runWithPriority(a.priority,function(){gc(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c)return b=Cb(c),null!==b&&fc(b),a.blockedOn=c,!1;b.shift()}return!0}function zc(a,b,c){xc(a)&&c.delete(b)}\nfunction Ac(){for(ic=!1;0<jc.length;){var a=jc[0];if(null!==a.blockedOn){a=Cb(a.blockedOn);null!==a&&ec(a);break}for(var b=a.targetContainers;0<b.length;){var c=yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&jc.shift()}null!==kc&&xc(kc)&&(kc=null);null!==lc&&xc(lc)&&(lc=null);null!==mc&&xc(mc)&&(mc=null);nc.forEach(zc);oc.forEach(zc)}\nfunction Bc(a,b){a.blockedOn===b&&(a.blockedOn=null,ic||(ic=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Ac)))}\nfunction Cc(a){function b(b){return Bc(b,a)}if(0<jc.length){Bc(jc[0],a);for(var c=1;c<jc.length;c++){var d=jc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==kc&&Bc(kc,a);null!==lc&&Bc(lc,a);null!==mc&&Bc(mc,a);nc.forEach(b);oc.forEach(b);for(c=0;c<pc.length;c++)d=pc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<pc.length&&(c=pc[0],null===c.blockedOn);)vc(c),null===c.blockedOn&&pc.shift()}\nfunction Dc(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var Ec={animationend:Dc(\"Animation\",\"AnimationEnd\"),animationiteration:Dc(\"Animation\",\"AnimationIteration\"),animationstart:Dc(\"Animation\",\"AnimationStart\"),transitionend:Dc(\"Transition\",\"TransitionEnd\")},Fc={},Gc={};\nfa&&(Gc=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete Ec.animationend.animation,delete Ec.animationiteration.animation,delete Ec.animationstart.animation),\"TransitionEvent\"in window||delete Ec.transitionend.transition);function Hc(a){if(Fc[a])return Fc[a];if(!Ec[a])return a;var b=Ec[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Gc)return Fc[a]=b[c];return a}\nvar Ic=Hc(\"animationend\"),Jc=Hc(\"animationiteration\"),Kc=Hc(\"animationstart\"),Lc=Hc(\"transitionend\"),Mc=new Map,Nc=new Map,Oc=[\"abort\",\"abort\",Ic,\"animationEnd\",Jc,\"animationIteration\",Kc,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\n\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Lc,\"transitionEnd\",\"waiting\",\"waiting\"];function Pc(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));Nc.set(d,b);Mc.set(d,e);da(e,[d])}}var Qc=r.unstable_now;Qc();var F=8;\nfunction Rc(a){if(0!==(1&a))return F=15,1;if(0!==(2&a))return F=14,2;if(0!==(4&a))return F=13,4;var b=24&a;if(0!==b)return F=12,b;if(0!==(a&32))return F=11,32;b=192&a;if(0!==b)return F=10,b;if(0!==(a&256))return F=9,256;b=3584&a;if(0!==b)return F=8,b;if(0!==(a&4096))return F=7,4096;b=4186112&a;if(0!==b)return F=6,b;b=62914560&a;if(0!==b)return F=5,b;if(a&67108864)return F=4,67108864;if(0!==(a&134217728))return F=3,134217728;b=805306368&a;if(0!==b)return F=2,b;if(0!==(1073741824&a))return F=1,1073741824;\nF=8;return a}function Sc(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}function Tc(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(y(358,a));}}\nfunction Uc(a,b){var c=a.pendingLanes;if(0===c)return F=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=F=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=Rc(k),e=F):(h&=f,0!==h&&(d=Rc(h),e=F))}else f=c&~g,0!==f?(d=Rc(f),e=F):0!==h&&(d=Rc(h),e=F);if(0===d)return 0;d=31-Vc(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){Rc(b);if(e<=F)return b;F=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Vc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction Wc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Xc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=Yc(24&~b),0===a?Xc(10,b):a;case 10:return a=Yc(192&~b),0===a?Xc(8,b):a;case 8:return a=Yc(3584&~b),0===a&&(a=Yc(4186112&~b),0===a&&(a=512)),a;case 2:return b=Yc(805306368&~b),0===b&&(b=268435456),b}throw Error(y(358,a));}function Yc(a){return a&-a}function Zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction $c(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Vc(b);a[b]=c}var Vc=Math.clz32?Math.clz32:ad,bd=Math.log,cd=Math.LN2;function ad(a){return 0===a?32:31-(bd(a)/cd|0)|0}var dd=r.unstable_UserBlockingPriority,ed=r.unstable_runWithPriority,fd=!0;function gd(a,b,c,d){Kb||Ib();var e=hd,f=Kb;Kb=!0;try{Hb(e,a,b,c,d)}finally{(Kb=f)||Mb()}}function id(a,b,c,d){ed(dd,hd.bind(null,a,b,c,d))}\nfunction hd(a,b,c,d){if(fd){var e;if((e=0===(b&4))&&0<jc.length&&-1<qc.indexOf(a))a=rc(null,a,b,c,d),jc.push(a);else{var f=yc(a,b,c,d);if(null===f)e&&sc(a,d);else{if(e){if(-1<qc.indexOf(a)){a=rc(f,a,b,c,d);jc.push(a);return}if(uc(f,a,b,c,d))return;sc(a,d)}jd(a,b,d,null,c)}}}}\nfunction yc(a,b,c,d){var e=xb(d);e=wc(e);if(null!==e){var f=Zb(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=$b(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==e&&(e=null)}}jd(a,b,d,e,c);return null}var kd=null,ld=null,md=null;\nfunction nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}function od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}m(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=m({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=m({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=m({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=m({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=m({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=m({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=m({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=m({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=m({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=m({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=m({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=m({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=fa&&\"CompositionEvent\"in window,be=null;fa&&\"documentMode\"in document&&(be=document.documentMode);var ce=fa&&\"TextEvent\"in window&&!be,de=fa&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(fa){var xe;if(fa){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));a=re;if(Kb)a(b);else{Kb=!0;try{Gb(a,b)}finally{Kb=!1,Mb()}}}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge,Ie=Object.prototype.hasOwnProperty;\nfunction Je(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!Ie.call(b,c[d])||!He(a[c[d]],b[c[d]]))return!1;return!0}function Ke(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Le(a,b){var c=Ke(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Ke(c)}}function Me(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Me(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Ne(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Oe(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Pe=fa&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Oe(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Je(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nPc(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);Pc(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);Pc(Oc,2);for(var Ve=\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),We=0;We<Ve.length;We++)Nc.set(Ve[We],0);ea(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\nea(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ea(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);ea(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);da(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));da(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));da(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);da(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nda(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));da(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var Xe=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Ye=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(Xe));\nfunction Ze(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Yb(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;Ze(e,h,l);f=k}}}if(Ub)throw a=Vb,Ub=!1,Vb=null,a;}\nfunction G(a,b){var c=$e(b),d=a+\"__bubble\";c.has(d)||(af(b,a,2,!1),c.add(d))}var bf=\"_reactListening\"+Math.random().toString(36).slice(2);function cf(a){a[bf]||(a[bf]=!0,ba.forEach(function(b){Ye.has(b)||df(b,!1,a,null);df(b,!0,a,null)}))}\nfunction df(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Ye.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=$e(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),af(f,a,e,b),g.add(h))}\nfunction af(a,b,c,d){var e=Nc.get(b);switch(void 0===e?2:e){case 0:e=gd;break;case 1:e=id;break;default:e=hd}c=e.bind(null,b,c,a);e=void 0;!Pb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction jd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Nb(function(){var d=f,e=xb(c),g=[];\na:{var h=Mc.get(a);if(void 0!==h){var k=td,x=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":x=\"focus\";k=Fd;break;case \"focusout\":x=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case Ic:case Jc:case Kc:k=Hd;break;case Lc:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var w=0!==(b&4),z=!w&&\"scroll\"===a,u=w?null!==h?h+\"Capture\":null:h;w=[];for(var t=d,q;null!==\nt;){q=t;var v=q.stateNode;5===q.tag&&null!==v&&(q=v,null!==u&&(v=Ob(t,u),null!=v&&w.push(ef(t,v,q))));if(z)break;t=t.return}0<w.length&&(h=new k(h,x,null,c,e),g.push({event:h,listeners:w}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(x=c.relatedTarget||c.fromElement)&&(wc(x)||x[ff]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(x=c.relatedTarget||c.toElement,k=d,x=x?wc(x):null,null!==\nx&&(z=Zb(x),x!==z||5!==x.tag&&6!==x.tag))x=null}else k=null,x=d;if(k!==x){w=Bd;v=\"onMouseLeave\";u=\"onMouseEnter\";t=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)w=Td,v=\"onPointerLeave\",u=\"onPointerEnter\",t=\"pointer\";z=null==k?h:ue(k);q=null==x?h:ue(x);h=new w(v,t+\"leave\",k,c,e);h.target=z;h.relatedTarget=q;v=null;wc(e)===d&&(w=new w(u,t+\"enter\",x,c,e),w.target=q,w.relatedTarget=z,v=w);z=v;if(k&&x)b:{w=k;u=x;t=0;for(q=w;q;q=gf(q))t++;q=0;for(v=u;v;v=gf(v))q++;for(;0<t-q;)w=gf(w),t--;for(;0<q-t;)u=\ngf(u),q--;for(;t--;){if(w===u||null!==u&&w===u.alternate)break b;w=gf(w);u=gf(u)}w=null}else w=null;null!==k&&hf(g,h,k,w,!1);null!==x&&null!==z&&hf(g,z,x,w,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var J=ve;else if(me(h))if(we)J=Fe;else{J=De;var K=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(J=Ee);if(J&&(J=J(a,d))){ne(g,J,c,e);break a}K&&K(a,h,d);\"focusout\"===a&&(K=h._wrapperState)&&\nK.controlled&&\"number\"===h.type&&bb(h,\"number\",h.value)}K=d?ue(d):window;switch(a){case \"focusin\":if(me(K)||\"true\"===K.contentEditable)Qe=K,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var Q;if(ae)b:{switch(a){case \"compositionstart\":var L=\"onCompositionStart\";break b;case \"compositionend\":L=\"onCompositionEnd\";break b;\ncase \"compositionupdate\":L=\"onCompositionUpdate\";break b}L=void 0}else ie?ge(a,c)&&(L=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(L=\"onCompositionStart\");L&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==L?\"onCompositionEnd\"===L&&ie&&(Q=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),K=oe(d,L),0<K.length&&(L=new Ld(L,a,null,c,e),g.push({event:L,listeners:K}),Q?L.data=Q:(Q=he(c),null!==Q&&(L.data=Q))));if(Q=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),0<d.length&&(e=new Ld(\"onBeforeInput\",\n\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Q)}se(g,b)})}function ef(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Ob(a,c),null!=f&&d.unshift(ef(a,f,e)),f=Ob(a,b),null!=f&&d.push(ef(a,f,e)));a=a.return}return d}function gf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction hf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Ob(c,f),null!=k&&g.unshift(ef(c,k,h))):e||(k=Ob(c,f),null!=k&&g.push(ef(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function jf(){}var kf=null,lf=null;function mf(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}\nfunction nf(a,b){return\"textarea\"===a||\"option\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}var of=\"function\"===typeof setTimeout?setTimeout:void 0,pf=\"function\"===typeof clearTimeout?clearTimeout:void 0;function qf(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}\nfunction rf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function sf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var tf=0;function uf(a){return{$$typeof:Ga,toString:a,valueOf:a}}var vf=Math.random().toString(36).slice(2),wf=\"__reactFiber$\"+vf,xf=\"__reactProps$\"+vf,ff=\"__reactContainer$\"+vf,yf=\"__reactEvents$\"+vf;\nfunction wc(a){var b=a[wf];if(b)return b;for(var c=a.parentNode;c;){if(b=c[ff]||c[wf]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=sf(a);null!==a;){if(c=a[wf])return c;a=sf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[wf]||a[ff];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(y(33));}function Db(a){return a[xf]||null}\nfunction $e(a){var b=a[yf];void 0===b&&(b=a[yf]=new Set);return b}var zf=[],Af=-1;function Bf(a){return{current:a}}function H(a){0>Af||(a.current=zf[Af],zf[Af]=null,Af--)}function I(a,b){Af++;zf[Af]=a.current;a.current=b}var Cf={},M=Bf(Cf),N=Bf(!1),Df=Cf;\nfunction Ef(a,b){var c=a.type.contextTypes;if(!c)return Cf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function Ff(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Gf(){H(N);H(M)}function Hf(a,b,c){if(M.current!==Cf)throw Error(y(168));I(M,b);I(N,c)}\nfunction If(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(y(108,Ra(b)||\"Unknown\",e));return m({},c,d)}function Jf(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Cf;Df=M.current;I(M,a);I(N,N.current);return!0}function Kf(a,b,c){var d=a.stateNode;if(!d)throw Error(y(169));c?(a=If(a,b,Df),d.__reactInternalMemoizedMergedChildContext=a,H(N),H(M),I(M,a)):H(N);I(N,c)}\nvar Lf=null,Mf=null,Nf=r.unstable_runWithPriority,Of=r.unstable_scheduleCallback,Pf=r.unstable_cancelCallback,Qf=r.unstable_shouldYield,Rf=r.unstable_requestPaint,Sf=r.unstable_now,Tf=r.unstable_getCurrentPriorityLevel,Uf=r.unstable_ImmediatePriority,Vf=r.unstable_UserBlockingPriority,Wf=r.unstable_NormalPriority,Xf=r.unstable_LowPriority,Yf=r.unstable_IdlePriority,Zf={},$f=void 0!==Rf?Rf:function(){},ag=null,bg=null,cg=!1,dg=Sf(),O=1E4>dg?Sf:function(){return Sf()-dg};\nfunction eg(){switch(Tf()){case Uf:return 99;case Vf:return 98;case Wf:return 97;case Xf:return 96;case Yf:return 95;default:throw Error(y(332));}}function fg(a){switch(a){case 99:return Uf;case 98:return Vf;case 97:return Wf;case 96:return Xf;case 95:return Yf;default:throw Error(y(332));}}function gg(a,b){a=fg(a);return Nf(a,b)}function hg(a,b,c){a=fg(a);return Of(a,b,c)}function ig(){if(null!==bg){var a=bg;bg=null;Pf(a)}jg()}\nfunction jg(){if(!cg&&null!==ag){cg=!0;var a=0;try{var b=ag;gg(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});ag=null}catch(c){throw null!==ag&&(ag=ag.slice(a+1)),Of(Uf,ig),c;}finally{cg=!1}}}var kg=ra.ReactCurrentBatchConfig;function lg(a,b){if(a&&a.defaultProps){b=m({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var mg=Bf(null),ng=null,og=null,pg=null;function qg(){pg=og=ng=null}\nfunction rg(a){var b=mg.current;H(mg);a.type._context._currentValue=b}function sg(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function tg(a,b){ng=a;pg=og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(ug=!0),a.firstContext=null)}\nfunction vg(a,b){if(pg!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)pg=a,b=1073741823;b={context:a,observedBits:b,next:null};if(null===og){if(null===ng)throw Error(y(308));og=b;ng.dependencies={lanes:0,firstContext:b,responders:null}}else og=og.next=b}return a._currentValue}var wg=!1;function xg(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}\nfunction yg(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function zg(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}function Ag(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}\nfunction Bg(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction Cg(a,b,c,d){var e=a.updateQueue;wg=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var n=a.alternate;if(null!==n){n=n.updateQueue;var A=n.lastBaseUpdate;A!==g&&(null===A?n.firstBaseUpdate=l:A.next=l,n.lastBaseUpdate=k)}}if(null!==f){A=e.baseState;g=0;n=l=k=null;do{h=f.lane;var p=f.eventTime;if((d&h)===h){null!==n&&(n=n.next={eventTime:p,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,\nnext:null});a:{var C=a,x=f;h=b;p=c;switch(x.tag){case 1:C=x.payload;if(\"function\"===typeof C){A=C.call(p,A,h);break a}A=C;break a;case 3:C.flags=C.flags&-4097|64;case 0:C=x.payload;h=\"function\"===typeof C?C.call(p,A,h):C;if(null===h||void 0===h)break a;A=m({},A,h);break a;case 2:wg=!0}}null!==f.callback&&(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else p={eventTime:p,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===n?(l=n=p,k=A):n=n.next=p,g|=h;f=f.next;if(null===\nf)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===n&&(k=A);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=n;Dg|=g;a.lanes=g;a.memoizedState=A}}function Eg(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(y(191,e));e.call(d)}}}var Fg=(new aa.Component).refs;\nfunction Gg(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:m({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Kg={isMounted:function(a){return(a=a._reactInternals)?Zb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=Hg(),e=Ig(a),f=zg(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ag(a,f);Jg(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=Hg(),d=Ig(a),e=zg(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=\nb);Ag(a,e);Jg(a,d,c)}};function Lg(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Je(c,d)||!Je(e,f):!0}\nfunction Mg(a,b,c){var d=!1,e=Cf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=vg(f):(e=Ff(b)?Df:M.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Ef(a,e):Cf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Kg;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Ng(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Kg.enqueueReplaceState(b,b.state,null)}\nfunction Og(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=Fg;xg(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=vg(f):(f=Ff(b)?Df:M.current,e.context=Ef(a,f));Cg(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Gg(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||\n(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Kg.enqueueReplaceState(e,e.state,null),Cg(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}var Pg=Array.isArray;\nfunction Qg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(y(309));var d=c.stateNode}if(!d)throw Error(y(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===Fg&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(y(284));if(!c._owner)throw Error(y(290,a));}return a}\nfunction Rg(a,b){if(\"textarea\"!==a.type)throw Error(y(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b));}\nfunction Sg(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Tg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=2,\nc):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Ug(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=Qg(a,b,c),d.return=a,d;d=Vg(c.type,c.key,c.props,null,a.mode,d);d.ref=Qg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nWg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function n(a,b,c,d,f){if(null===b||7!==b.tag)return b=Xg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function A(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=Ug(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case sa:return c=Vg(b.type,b.key,b.props,null,a.mode,c),c.ref=Qg(a,null,b),c.return=a,c;case ta:return b=Wg(b,a.mode,c),b.return=a,b}if(Pg(b)||La(b))return b=Xg(b,\na.mode,c,null),b.return=a,b;Rg(a,b)}return null}function p(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case sa:return c.key===e?c.type===ua?n(a,b,c.props.children,d,e):k(a,b,c,d):null;case ta:return c.key===e?l(a,b,c,d):null}if(Pg(c)||La(c))return null!==e?null:n(a,b,c,d,null);Rg(a,c)}return null}function C(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case sa:return a=a.get(null===d.key?c:d.key)||null,d.type===ua?n(b,a,d.props.children,e,d.key):k(b,a,d,e);case ta:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e)}if(Pg(d)||La(d))return a=a.get(c)||null,n(b,a,d,e,null);Rg(b,d)}return null}function x(e,g,h,k){for(var l=null,t=null,u=g,z=g=0,q=null;null!==u&&z<h.length;z++){u.index>z?(q=u,u=null):q=u.sibling;var n=p(e,u,h[z],k);if(null===n){null===u&&(u=q);break}a&&u&&null===\nn.alternate&&b(e,u);g=f(n,g,z);null===t?l=n:t.sibling=n;t=n;u=q}if(z===h.length)return c(e,u),l;if(null===u){for(;z<h.length;z++)u=A(e,h[z],k),null!==u&&(g=f(u,g,z),null===t?l=u:t.sibling=u,t=u);return l}for(u=d(e,u);z<h.length;z++)q=C(u,e,z,h[z],k),null!==q&&(a&&null!==q.alternate&&u.delete(null===q.key?z:q.key),g=f(q,g,z),null===t?l=q:t.sibling=q,t=q);a&&u.forEach(function(a){return b(e,a)});return l}function w(e,g,h,k){var l=La(h);if(\"function\"!==typeof l)throw Error(y(150));h=l.call(h);if(null==\nh)throw Error(y(151));for(var t=l=null,u=g,z=g=0,q=null,n=h.next();null!==u&&!n.done;z++,n=h.next()){u.index>z?(q=u,u=null):q=u.sibling;var w=p(e,u,n.value,k);if(null===w){null===u&&(u=q);break}a&&u&&null===w.alternate&&b(e,u);g=f(w,g,z);null===t?l=w:t.sibling=w;t=w;u=q}if(n.done)return c(e,u),l;if(null===u){for(;!n.done;z++,n=h.next())n=A(e,n.value,k),null!==n&&(g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);return l}for(u=d(e,u);!n.done;z++,n=h.next())n=C(u,e,z,n.value,k),null!==n&&(a&&null!==n.alternate&&\nu.delete(null===n.key?z:n.key),g=f(n,g,z),null===t?l=n:t.sibling=n,t=n);a&&u.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===ua&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case sa:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===ua){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,k.sibling);\nd=e(k,f.props);d.ref=Qg(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===ua?(d=Xg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Vg(f.type,f.key,f.props,null,a.mode,h),h.ref=Qg(a,d,f),h.return=a,a=h)}return g(a);case ta:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=\nWg(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=Ug(f,a.mode,h),d.return=a,a=d),g(a);if(Pg(f))return x(a,d,f,h);if(La(f))return w(a,d,f,h);l&&Rg(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(y(152,Ra(a.type)||\"Component\"));}return c(a,d)}}var Yg=Sg(!0),Zg=Sg(!1),$g={},ah=Bf($g),bh=Bf($g),ch=Bf($g);\nfunction dh(a){if(a===$g)throw Error(y(174));return a}function eh(a,b){I(ch,b);I(bh,a);I(ah,$g);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:mb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=mb(b,a)}H(ah);I(ah,b)}function fh(){H(ah);H(bh);H(ch)}function gh(a){dh(ch.current);var b=dh(ah.current);var c=mb(b,a.type);b!==c&&(I(bh,a),I(ah,c))}function hh(a){bh.current===a&&(H(ah),H(bh))}var P=Bf(0);\nfunction ih(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var jh=null,kh=null,lh=!1;\nfunction mh(a,b){var c=nh(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function oh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}\nfunction ph(a){if(lh){var b=kh;if(b){var c=b;if(!oh(a,b)){b=rf(c.nextSibling);if(!b||!oh(a,b)){a.flags=a.flags&-1025|2;lh=!1;jh=a;return}mh(jh,c)}jh=a;kh=rf(b.firstChild)}else a.flags=a.flags&-1025|2,lh=!1,jh=a}}function qh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;jh=a}\nfunction rh(a){if(a!==jh)return!1;if(!lh)return qh(a),lh=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!nf(b,a.memoizedProps))for(b=kh;b;)mh(a,b),b=rf(b.nextSibling);qh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(y(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){kh=rf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}kh=null}}else kh=jh?rf(a.stateNode.nextSibling):null;return!0}\nfunction sh(){kh=jh=null;lh=!1}var th=[];function uh(){for(var a=0;a<th.length;a++)th[a]._workInProgressVersionPrimary=null;th.length=0}var vh=ra.ReactCurrentDispatcher,wh=ra.ReactCurrentBatchConfig,xh=0,R=null,S=null,T=null,yh=!1,zh=!1;function Ah(){throw Error(y(321));}function Bh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Ch(a,b,c,d,e,f){xh=f;R=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;vh.current=null===a||null===a.memoizedState?Dh:Eh;a=c(d,e);if(zh){f=0;do{zh=!1;if(!(25>f))throw Error(y(301));f+=1;T=S=null;b.updateQueue=null;vh.current=Fh;a=c(d,e)}while(zh)}vh.current=Gh;b=null!==S&&null!==S.next;xh=0;T=S=R=null;yh=!1;if(b)throw Error(y(300));return a}function Hh(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===T?R.memoizedState=T=a:T=T.next=a;return T}\nfunction Ih(){if(null===S){var a=R.alternate;a=null!==a?a.memoizedState:null}else a=S.next;var b=null===T?R.memoizedState:T.next;if(null!==b)T=b,S=a;else{if(null===a)throw Error(y(310));S=a;a={memoizedState:S.memoizedState,baseState:S.baseState,baseQueue:S.baseQueue,queue:S.queue,next:null};null===T?R.memoizedState=T=a:T=T.next=a}return T}function Jh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Kh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=S,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;var h=g=f=null,k=e;do{var l=k.lane;if((xh&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,\neagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;R.lanes|=l;Dg|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;He(d,b.memoizedState)||(ug=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=d}return[b.memoizedState,c.dispatch]}\nfunction Lh(a){var b=Ih(),c=b.queue;if(null===c)throw Error(y(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}\nfunction Mh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,a=(xh&a)===a)b._workInProgressVersionPrimary=d,th.push(b);if(a)return c(b._source);th.push(b);throw Error(y(350));}\nfunction Nh(a,b,c,d){var e=U;if(null===e)throw Error(y(349));var f=b._getVersion,g=f(b._source),h=vh.current,k=h.useState(function(){return Mh(e,b,c)}),l=k[1],n=k[0];k=T;var A=a.memoizedState,p=A.refs,C=p.getSnapshot,x=A.source;A=A.subscribe;var w=R;a.memoizedState={refs:p,source:b,subscribe:d};h.useEffect(function(){p.getSnapshot=c;p.setSnapshot=l;var a=f(b._source);if(!He(g,a)){a=c(b._source);He(n,a)||(l(a),a=Ig(w),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=\ne.entanglements,h=a;0<h;){var k=31-Vc(h),v=1<<k;d[k]|=a;h&=~v}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=p.getSnapshot,c=p.setSnapshot;try{c(a(b._source));var d=Ig(w);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);He(C,c)&&He(x,b)&&He(A,d)||(a={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:n},a.dispatch=l=Oh.bind(null,R,a),k.queue=a,k.baseQueue=null,n=Mh(e,b,c),k.memoizedState=k.baseState=n);return n}\nfunction Ph(a,b,c){var d=Ih();return Nh(d,a,b,c)}function Qh(a){var b=Hh();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:Jh,lastRenderedState:a};a=a.dispatch=Oh.bind(null,R,a);return[b.memoizedState,a]}\nfunction Rh(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=R.updateQueue;null===b?(b={lastEffect:null},R.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function Sh(a){var b=Hh();a={current:a};return b.memoizedState=a}function Th(){return Ih().memoizedState}function Uh(a,b,c,d){var e=Hh();R.flags|=a;e.memoizedState=Rh(1|b,c,void 0,void 0===d?null:d)}\nfunction Vh(a,b,c,d){var e=Ih();d=void 0===d?null:d;var f=void 0;if(null!==S){var g=S.memoizedState;f=g.destroy;if(null!==d&&Bh(d,g.deps)){Rh(b,c,f,d);return}}R.flags|=a;e.memoizedState=Rh(1|b,c,f,d)}function Wh(a,b){return Uh(516,4,a,b)}function Xh(a,b){return Vh(516,4,a,b)}function Yh(a,b){return Vh(4,2,a,b)}function Zh(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}\nfunction $h(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Vh(4,2,Zh.bind(null,b,a),c)}function ai(){}function bi(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}function ci(a,b){var c=Ih();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Bh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}\nfunction di(a,b){var c=eg();gg(98>c?98:c,function(){a(!0)});gg(97<c?97:c,function(){var c=wh.transition;wh.transition=1;try{a(!1),b()}finally{wh.transition=c}})}\nfunction Oh(a,b,c){var d=Hg(),e=Ig(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);b.pending=f;g=a.alternate;if(a===R||null!==g&&g===R)zh=yh=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(He(k,h))return}catch(l){}finally{}Jg(a,e,d)}}\nvar Gh={readContext:vg,useCallback:Ah,useContext:Ah,useEffect:Ah,useImperativeHandle:Ah,useLayoutEffect:Ah,useMemo:Ah,useReducer:Ah,useRef:Ah,useState:Ah,useDebugValue:Ah,useDeferredValue:Ah,useTransition:Ah,useMutableSource:Ah,useOpaqueIdentifier:Ah,unstable_isNewReconciler:!1},Dh={readContext:vg,useCallback:function(a,b){Hh().memoizedState=[a,void 0===b?null:b];return a},useContext:vg,useEffect:Wh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Uh(4,2,Zh.bind(null,\nb,a),c)},useLayoutEffect:function(a,b){return Uh(4,2,a,b)},useMemo:function(a,b){var c=Hh();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Hh();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Oh.bind(null,R,a);return[d.memoizedState,a]},useRef:Sh,useState:Qh,useDebugValue:ai,useDeferredValue:function(a){var b=Qh(a),c=b[0],d=b[1];Wh(function(){var b=wh.transition;\nwh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Qh(!1),b=a[0];a=di.bind(null,a[1]);Sh(a);return[a,b]},useMutableSource:function(a,b,c){var d=Hh();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return Nh(d,a,b,c)},useOpaqueIdentifier:function(){if(lh){var a=!1,b=uf(function(){a||(a=!0,c(\"r:\"+(tf++).toString(36)));throw Error(y(355));}),c=Qh(b)[1];0===(R.mode&2)&&(R.flags|=516,Rh(5,function(){c(\"r:\"+(tf++).toString(36))},\nvoid 0,null));return b}b=\"r:\"+(tf++).toString(36);Qh(b);return b},unstable_isNewReconciler:!1},Eh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Kh,useRef:Th,useState:function(){return Kh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Kh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Kh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Kh(Jh)[0]},unstable_isNewReconciler:!1},Fh={readContext:vg,useCallback:bi,useContext:vg,useEffect:Xh,useImperativeHandle:$h,useLayoutEffect:Yh,useMemo:ci,useReducer:Lh,useRef:Th,useState:function(){return Lh(Jh)},useDebugValue:ai,useDeferredValue:function(a){var b=Lh(Jh),c=b[0],d=b[1];Xh(function(){var b=wh.transition;wh.transition=1;try{d(a)}finally{wh.transition=b}},[a]);return c},useTransition:function(){var a=Lh(Jh)[0];return[Th().current,\na]},useMutableSource:Ph,useOpaqueIdentifier:function(){return Lh(Jh)[0]},unstable_isNewReconciler:!1},ei=ra.ReactCurrentOwner,ug=!1;function fi(a,b,c,d){b.child=null===a?Zg(b,null,c,d):Yg(b,a.child,c,d)}function gi(a,b,c,d,e){c=c.render;var f=b.ref;tg(b,e);d=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,d,e);return b.child}\nfunction ii(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!ji(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,ki(a,b,g,d,e,f);a=Vg(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Je,c(e,d)&&a.ref===b.ref))return hi(a,b,f);b.flags|=1;a=Tg(g,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction ki(a,b,c,d,e,f){if(null!==a&&Je(a.memoizedProps,d)&&a.ref===b.ref)if(ug=!1,0!==(f&e))0!==(a.flags&16384)&&(ug=!0);else return b.lanes=a.lanes,hi(a,b,f);return li(a,b,c,d,f)}\nfunction mi(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},ni(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},ni(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a},ni(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,ni(b,d);fi(a,b,e,c);return b.child}\nfunction oi(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function li(a,b,c,d,e){var f=Ff(c)?Df:M.current;f=Ef(b,f);tg(b,e);c=Ch(a,b,c,d,f,e);if(null!==a&&!ug)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,hi(a,b,e);b.flags|=1;fi(a,b,c,e);return b.child}\nfunction pi(a,b,c,d,e){if(Ff(c)){var f=!0;Jf(b)}else f=!1;tg(b,e);if(null===b.stateNode)null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),Mg(b,c,d),Og(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=vg(l):(l=Ff(c)?Df:M.current,l=Ef(b,l));var n=c.getDerivedStateFromProps,A=\"function\"===typeof n||\"function\"===typeof g.getSnapshotBeforeUpdate;A||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&Ng(b,g,d,l);wg=!1;var p=b.memoizedState;g.state=p;Cg(b,d,g,e);k=b.memoizedState;h!==d||p!==k||N.current||wg?(\"function\"===typeof n&&(Gg(b,c,n,d),k=b.memoizedState),(h=wg||Lg(b,c,h,d,p,k,l))?(A||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===\ntypeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;yg(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:lg(b.type,h);g.props=l;A=b.pendingProps;p=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=vg(k):(k=Ff(c)?Df:M.current,k=Ef(b,k));var C=c.getDerivedStateFromProps;(n=\"function\"===typeof C||\n\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==A||p!==k)&&Ng(b,g,d,k);wg=!1;p=b.memoizedState;g.state=p;Cg(b,d,g,e);var x=b.memoizedState;h!==A||p!==x||N.current||wg?(\"function\"===typeof C&&(Gg(b,c,C,d),x=b.memoizedState),(l=wg||Lg(b,c,l,d,p,x,k))?(n||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,\nx,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,x,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=x),g.props=d,g.state=x,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&p===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&p===a.memoizedState||(b.flags|=256),d=!1)}return qi(a,b,c,d,f,e)}\nfunction qi(a,b,c,d,e,f){oi(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Kf(b,c,!1),hi(a,b,f);d=b.stateNode;ei.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Yg(b,a.child,null,f),b.child=Yg(b,null,h,f)):fi(a,b,h,f);b.memoizedState=d.state;e&&Kf(b,c,!0);return b.child}function ri(a){var b=a.stateNode;b.pendingContext?Hf(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Hf(a,b.context,!1);eh(a,b.containerInfo)}\nvar si={dehydrated:null,retryLane:0};\nfunction ti(a,b,c){var d=b.pendingProps,e=P.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);I(P,e&1);if(null===a){void 0!==d.fallback&&ph(b);a=d.children;e=d.fallback;if(f)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=si,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=ui(b,a,e,c),b.child.memoizedState={baseLanes:c},\nb.memoizedState=si,b.lanes=33554432,a;c=vi({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=wi(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:\n{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=si,d;c=xi(a,b,d.children,c);b.memoizedState=null;return c}function ui(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=vi(b,e,0,null);c=Xg(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}\nfunction xi(a,b,c,d){var e=a.child;a=e.sibling;c=Tg(e,{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}\nfunction wi(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Tg(g,h);null!==a?d=Tg(a,d):(d=Xg(d,f,e,null),d.flags|=2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function yi(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);sg(a.return,b)}\nfunction zi(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}\nfunction Ai(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;fi(a,b,d.children,c);d=P.current;if(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&yi(a,c);else if(19===a.tag)yi(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}I(P,d);if(0===(b.mode&2))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===ih(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);zi(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===ih(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}zi(b,!0,c,null,f,b.lastEffect);break;case \"together\":zi(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}\nfunction hi(a,b,c){null!==a&&(b.dependencies=a.dependencies);Dg|=b.lanes;if(0!==(c&b.childLanes)){if(null!==a&&b.child!==a.child)throw Error(y(153));if(null!==b.child){a=b.child;c=Tg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Tg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}var Bi,Ci,Di,Ei;\nBi=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Ci=function(){};\nDi=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;dh(ah.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"option\":e=eb(a,e);d=eb(a,d);f=[];break;case \"select\":e=m({},e,{value:void 0});d=m({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=jf)}vb(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===\nl){var h=e[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ca.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||\n(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ca.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&G(\"scroll\",a),f||h===k||(f=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===Ga?k.toString():(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",\nc);var l=f;if(b.updateQueue=l)b.flags|=4}};Ei=function(a,b,c,d){c!==d&&(b.flags|=4)};function Fi(a,b){if(!lh)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction Gi(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return Ff(b.type)&&Gf(),null;case 3:fh();H(N);H(M);uh();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)rh(b)?b.flags|=4:d.hydrate||(b.flags|=256);Ci(b);return null;case 5:hh(b);var e=dh(ch.current);c=b.type;if(null!==a&&null!=b.stateNode)Di(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===\nb.stateNode)throw Error(y(166));return null}a=dh(ah.current);if(rh(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[wf]=b;d[xf]=f;switch(c){case \"dialog\":G(\"cancel\",d);G(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<Xe.length;a++)G(Xe[a],d);break;case \"source\":G(\"error\",d);break;case \"img\":case \"image\":case \"link\":G(\"error\",d);G(\"load\",d);break;case \"details\":G(\"toggle\",d);break;case \"input\":Za(d,f);G(\"invalid\",d);break;case \"select\":d._wrapperState=\n{wasMultiple:!!f.multiple};G(\"invalid\",d);break;case \"textarea\":hb(d,f),G(\"invalid\",d)}vb(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):ca.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&G(\"scroll\",d));switch(c){case \"input\":Va(d);cb(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=\njf)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;a===kb.html&&(a=lb(c));a===kb.html?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[wf]=b;a[xf]=d;Bi(a,b,!1,!1);b.stateNode=a;g=wb(c,d);switch(c){case \"dialog\":G(\"cancel\",a);G(\"close\",a);\ne=d;break;case \"iframe\":case \"object\":case \"embed\":G(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<Xe.length;e++)G(Xe[e],a);e=d;break;case \"source\":G(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":G(\"error\",a);G(\"load\",a);e=d;break;case \"details\":G(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);G(\"invalid\",a);break;case \"option\":e=eb(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=m({},d,{value:void 0});G(\"invalid\",a);break;case \"textarea\":hb(a,d);e=\ngb(a,d);G(\"invalid\",a);break;default:e=d}vb(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?tb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&ob(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&pb(a,k):\"number\"===typeof k&&pb(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ca.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&G(\"scroll\",a):null!=k&&qa(a,f,k,g))}switch(c){case \"input\":Va(a);cb(a,d,!1);\nbreak;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=jf)}mf(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=128)}return null;case 6:if(a&&null!=b.stateNode)Ei(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(y(166));\nc=dh(ch.current);dh(ah.current);rh(b)?(d=b.stateNode,c=b.memoizedProps,d[wf]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[wf]=b,b.stateNode=d)}return null;case 13:H(P);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&rh(b):c=null!==a.memoizedState;if(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(P.current&1))0===V&&(V=3);else{if(0===V||3===V)V=\n4;null===U||0===(Dg&134217727)&&0===(Hi&134217727)||Ii(U,W)}if(d||c)b.flags|=4;return null;case 4:return fh(),Ci(b),null===a&&cf(b.stateNode.containerInfo),null;case 10:return rg(b),null;case 17:return Ff(b.type)&&Gf(),null;case 19:H(P);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)Fi(d,!1);else{if(0!==V||null!==a&&0!==(a.flags&64))for(a=b.child;null!==a;){g=ih(a);if(null!==g){b.flags|=64;Fi(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);\nnull===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,\nf.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;I(P,P.current&1|2);return b.child}a=a.sibling}null!==d.tail&&O()>Ji&&(b.flags|=64,f=!0,Fi(d,!1),b.lanes=33554432)}else{if(!f)if(a=ih(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Fi(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&!g.alternate&&!lh)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*O()-d.renderingStartTime>Ji&&1073741824!==c&&(b.flags|=\n64,f=!0,Fi(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=O(),c.sibling=null,b=P.current,I(P,f?b&1|2:b&1),c):null;case 23:case 24:return Ki(),null!==a&&null!==a.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(y(156,b.tag));}\nfunction Li(a){switch(a.tag){case 1:Ff(a.type)&&Gf();var b=a.flags;return b&4096?(a.flags=b&-4097|64,a):null;case 3:fh();H(N);H(M);uh();b=a.flags;if(0!==(b&64))throw Error(y(285));a.flags=b&-4097|64;return a;case 5:return hh(a),null;case 13:return H(P),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return H(P),null;case 4:return fh(),null;case 10:return rg(a),null;case 23:case 24:return Ki(),null;default:return null}}\nfunction Mi(a,b){try{var c=\"\",d=b;do c+=Qa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ni(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Oi=\"function\"===typeof WeakMap?WeakMap:Map;function Pi(a,b,c){c=zg(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Qi||(Qi=!0,Ri=d);Ni(a,b)};return c}\nfunction Si(a,b,c){c=zg(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ni(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===Ti?Ti=new Set([this]):Ti.add(this),Ni(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}var Ui=\"function\"===typeof WeakSet?WeakSet:Set;\nfunction Vi(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Wi(a,c)}else b.current=null}function Xi(a,b){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:lg(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&qf(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(y(163));}\nfunction Yi(a,b,c){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{if(3===(a.tag&3)){var d=a.create;a.destroy=d()}a=a.next}while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Zi(c,a),$i(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:lg(c.type,b.memoizedProps),a.componentDidUpdate(d,\nb.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&Eg(c,b,a);return;case 3:b=c.updateQueue;if(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}Eg(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&mf(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&Cc(c))));\nreturn;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(y(163));}\nfunction aj(a,b){for(var c=a;;){if(5===c.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=sb(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===\na)break;for(;null===c.sibling;){if(null===c.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}\nfunction bj(a,b){if(Mf&&\"function\"===typeof Mf.onCommitFiberUnmount)try{Mf.onCommitFiberUnmount(Lf,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){var c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Zi(b,c);else{d=b;try{e()}catch(f){Wi(d,f)}}c=c.next}while(c!==a)}break;case 1:Vi(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=b.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Wi(b,\nf)}break;case 5:Vi(b);break;case 4:cj(a,b)}}function dj(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function ej(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction fj(a){a:{for(var b=a.return;null!==b;){if(ej(b))break a;b=b.return}throw Error(y(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(y(161));}c.flags&16&&(pb(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||ej(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===\nc.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?gj(a,c,b):hj(a,c,b)}\nfunction gj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=jf));else if(4!==d&&(a=a.child,null!==a))for(gj(a,b,c),a=a.sibling;null!==a;)gj(a,b,c),a=a.sibling}\nfunction hj(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(hj(a,b,c),a=a.sibling;null!==a;)hj(a,b,c),a=a.sibling}\nfunction cj(a,b){for(var c=b,d=!1,e,f;;){if(!d){d=c.return;a:for(;;){if(null===d)throw Error(y(160));e=d.stateNode;switch(d.tag){case 5:f=!1;break a;case 3:e=e.containerInfo;f=!0;break a;case 4:e=e.containerInfo;f=!0;break a}d=d.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(bj(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===k.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,\n8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(bj(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=c.sibling}}\nfunction ij(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[xf]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&$a(c,d);wb(a,e);b=wb(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?tb(c,h):\"dangerouslySetInnerHTML\"===g?ob(c,h):\"children\"===g?pb(c,h):qa(c,g,h,b)}switch(a){case \"input\":ab(c,d);break;case \"textarea\":ib(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?fb(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?fb(c,!!d.multiple,d.defaultValue,!0):fb(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(y(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,Cc(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(jj=O(),aj(b.child,!0));kj(b);return;case 19:kj(b);return;case 17:return;case 23:case 24:aj(b,null!==b.memoizedState);return}throw Error(y(163));}function kj(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Ui);b.forEach(function(b){var d=lj.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction mj(a,b){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}var nj=Math.ceil,oj=ra.ReactCurrentDispatcher,pj=ra.ReactCurrentOwner,X=0,U=null,Y=null,W=0,qj=0,rj=Bf(0),V=0,sj=null,tj=0,Dg=0,Hi=0,uj=0,vj=null,jj=0,Ji=Infinity;function wj(){Ji=O()+500}var Z=null,Qi=!1,Ri=null,Ti=null,xj=!1,yj=null,zj=90,Aj=[],Bj=[],Cj=null,Dj=0,Ej=null,Fj=-1,Gj=0,Hj=0,Ij=null,Jj=!1;function Hg(){return 0!==(X&48)?O():-1!==Fj?Fj:Fj=O()}\nfunction Ig(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===eg()?1:2;0===Gj&&(Gj=tj);if(0!==kg.transition){0!==Hj&&(Hj=null!==vj?vj.pendingLanes:0);a=Gj;var b=4186112&~Hj;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=eg();0!==(X&4)&&98===a?a=Xc(12,Gj):(a=Sc(a),a=Xc(a,Gj));return a}\nfunction Jg(a,b,c){if(50<Dj)throw Dj=0,Ej=null,Error(y(185));a=Kj(a,b);if(null===a)return null;$c(a,b,c);a===U&&(Hi|=b,4===V&&Ii(a,W));var d=eg();1===b?0!==(X&8)&&0===(X&48)?Lj(a):(Mj(a,c),0===X&&(wj(),ig())):(0===(X&4)||98!==d&&99!==d||(null===Cj?Cj=new Set([a]):Cj.add(a)),Mj(a,c));vj=a}function Kj(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction Mj(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Vc(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;Rc(k);var n=F;f[h]=10<=n?l+250:6<=n?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Uc(a,a===U?W:0);b=F;if(0===d)null!==c&&(c!==Zf&&Pf(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==Zf&&Pf(c)}15===b?(c=Lj.bind(null,a),null===ag?(ag=[c],bg=Of(Uf,jg)):ag.push(c),\nc=Zf):14===b?c=hg(99,Lj.bind(null,a)):(c=Tc(b),c=hg(c,Nj.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}\nfunction Nj(a){Fj=-1;Hj=Gj=0;if(0!==(X&48))throw Error(y(327));var b=a.callbackNode;if(Oj()&&a.callbackNode!==b)return null;var c=Uc(a,a===U?W:0);if(0===c)return null;var d=c;var e=X;X|=16;var f=Pj();if(U!==a||W!==d)wj(),Qj(a,d);do try{Rj();break}catch(h){Sj(a,h)}while(1);qg();oj.current=f;X=e;null!==Y?d=0:(U=null,W=0,d=V);if(0!==(tj&Hi))Qj(a,0);else if(0!==d){2===d&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),c=Wc(a),0!==c&&(d=Tj(a,c)));if(1===d)throw b=sj,Qj(a,0),Ii(a,c),Mj(a,O()),b;a.finishedWork=\na.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(y(345));case 2:Uj(a);break;case 3:Ii(a,c);if((c&62914560)===c&&(d=jj+500-O(),10<d)){if(0!==Uc(a,0))break;e=a.suspendedLanes;if((e&c)!==c){Hg();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=of(Uj.bind(null,a),d);break}Uj(a);break;case 4:Ii(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=31-Vc(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=O()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>\nc?4320:1960*nj(c/1960))-c;if(10<c){a.timeoutHandle=of(Uj.bind(null,a),c);break}Uj(a);break;case 5:Uj(a);break;default:throw Error(y(329));}}Mj(a,O());return a.callbackNode===b?Nj.bind(null,a):null}function Ii(a,b){b&=~uj;b&=~Hi;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Vc(b),d=1<<c;a[c]=-1;b&=~d}}\nfunction Lj(a){if(0!==(X&48))throw Error(y(327));Oj();if(a===U&&0!==(a.expiredLanes&W)){var b=W;var c=Tj(a,b);0!==(tj&Hi)&&(b=Uc(a,b),c=Tj(a,b))}else b=Uc(a,0),c=Tj(a,b);0!==a.tag&&2===c&&(X|=64,a.hydrate&&(a.hydrate=!1,qf(a.containerInfo)),b=Wc(a),0!==b&&(c=Tj(a,b)));if(1===c)throw c=sj,Qj(a,0),Ii(a,b),Mj(a,O()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;Uj(a);Mj(a,O());return null}\nfunction Vj(){if(null!==Cj){var a=Cj;Cj=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;Mj(a,O())})}ig()}function Wj(a,b){var c=X;X|=1;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function Xj(a,b){var c=X;X&=-2;X|=8;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}}function ni(a,b){I(rj,qj);qj|=b;tj|=b}function Ki(){qj=rj.current;H(rj)}\nfunction Qj(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,pf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&Gf();break;case 3:fh();H(N);H(M);uh();break;case 5:hh(d);break;case 4:fh();break;case 13:H(P);break;case 19:H(P);break;case 10:rg(d);break;case 23:case 24:Ki()}c=c.return}U=a;Y=Tg(a.current,null);W=qj=tj=b;V=0;sj=null;uj=Hi=Dg=0}\nfunction Sj(a,b){do{var c=Y;try{qg();vh.current=Gh;if(yh){for(var d=R.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}yh=!1}xh=0;T=S=R=null;zh=!1;pj.current=null;if(null===c||null===c.return){V=1;sj=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=W;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;if(0===(h.mode&2)){var n=h.alternate;n?(h.updateQueue=n.updateQueue,h.memoizedState=n.memoizedState,h.lanes=n.lanes):\n(h.updateQueue=null,h.memoizedState=null)}var A=0!==(P.current&1),p=g;do{var C;if(C=13===p.tag){var x=p.memoizedState;if(null!==x)C=null!==x.dehydrated?!0:!1;else{var w=p.memoizedProps;C=void 0===w.fallback?!1:!0!==w.unstable_avoidThisFallback?!0:A?!1:!0}}if(C){var z=p.updateQueue;if(null===z){var u=new Set;u.add(l);p.updateQueue=u}else z.add(l);if(0===(p.mode&2)){p.flags|=64;h.flags|=16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var t=zg(-1,1);t.tag=2;Ag(h,t)}h.lanes|=1;break a}k=\nvoid 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Oi,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var v=Yj.bind(null,f,l,h);l.then(v,v)}p.flags|=4096;p.lanes=b;break a}p=p.return}while(null!==p);k=Error((Ra(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==V&&(V=2);k=Mi(k,h);p=\ng;do{switch(p.tag){case 3:f=k;p.flags|=4096;b&=-b;p.lanes|=b;var J=Pi(p,f,b);Bg(p,J);break a;case 1:f=k;var K=p.type,Q=p.stateNode;if(0===(p.flags&64)&&(\"function\"===typeof K.getDerivedStateFromError||null!==Q&&\"function\"===typeof Q.componentDidCatch&&(null===Ti||!Ti.has(Q)))){p.flags|=4096;b&=-b;p.lanes|=b;var L=Si(p,f,b);Bg(p,L);break a}}p=p.return}while(null!==p)}Zj(c)}catch(va){b=va;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}\nfunction Pj(){var a=oj.current;oj.current=Gh;return null===a?Gh:a}function Tj(a,b){var c=X;X|=16;var d=Pj();U===a&&W===b||Qj(a,b);do try{ak();break}catch(e){Sj(a,e)}while(1);qg();X=c;oj.current=d;if(null!==Y)throw Error(y(261));U=null;W=0;return V}function ak(){for(;null!==Y;)bk(Y)}function Rj(){for(;null!==Y&&!Qf();)bk(Y)}function bk(a){var b=ck(a.alternate,a,qj);a.memoizedProps=a.pendingProps;null===b?Zj(a):Y=b;pj.current=null}\nfunction Zj(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=Gi(c,b,qj);if(null!==c){Y=c;return}c=b;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(qj&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==\na.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=Li(b);if(null!==c){c.flags&=2047;Y=c;return}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===V&&(V=5)}function Uj(a){var b=eg();gg(99,dk.bind(null,a,b));return null}\nfunction dk(a,b){do Oj();while(null!==yj);if(0!==(X&48))throw Error(y(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(y(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Vc(f),l=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~l}null!==\nCj&&0===(d&24)&&Cj.has(a)&&Cj.delete(a);a===U&&(Y=U=null,W=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=X;X|=32;pj.current=null;kf=fd;g=Ne();if(Oe(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=(h=g.ownerDocument)&&h.defaultView||window,(l=h.getSelection&&h.getSelection())&&0!==l.rangeCount){h=l.anchorNode;f=l.anchorOffset;k=l.focusNode;l=l.focusOffset;try{h.nodeType,k.nodeType}catch(va){h=null;\nbreak a}var n=0,A=-1,p=-1,C=0,x=0,w=g,z=null;b:for(;;){for(var u;;){w!==h||0!==f&&3!==w.nodeType||(A=n+f);w!==k||0!==l&&3!==w.nodeType||(p=n+l);3===w.nodeType&&(n+=w.nodeValue.length);if(null===(u=w.firstChild))break;z=w;w=u}for(;;){if(w===g)break b;z===h&&++C===f&&(A=n);z===k&&++x===l&&(p=n);if(null!==(u=w.nextSibling))break;w=z;z=w.parentNode}w=u}h=-1===A||-1===p?null:{start:A,end:p}}else h=null;h=h||{start:0,end:0}}else h=null;lf={focusedElem:g,selectionRange:h};fd=!1;Ij=null;Jj=!1;Z=d;do try{ek()}catch(va){if(null===\nZ)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Ij=null;Z=d;do try{for(g=a;null!==Z;){var t=Z.flags;t&16&&pb(Z.stateNode,\"\");if(t&128){var q=Z.alternate;if(null!==q){var v=q.ref;null!==v&&(\"function\"===typeof v?v(null):v.current=null)}}switch(t&1038){case 2:fj(Z);Z.flags&=-3;break;case 6:fj(Z);Z.flags&=-3;ij(Z.alternate,Z);break;case 1024:Z.flags&=-1025;break;case 1028:Z.flags&=-1025;ij(Z.alternate,Z);break;case 4:ij(Z.alternate,Z);break;case 8:h=Z;cj(g,h);var J=h.alternate;dj(h);null!==\nJ&&dj(J)}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);v=lf;q=Ne();t=v.focusedElem;g=v.selectionRange;if(q!==t&&t&&t.ownerDocument&&Me(t.ownerDocument.documentElement,t)){null!==g&&Oe(t)&&(q=g.start,v=g.end,void 0===v&&(v=q),\"selectionStart\"in t?(t.selectionStart=q,t.selectionEnd=Math.min(v,t.value.length)):(v=(q=t.ownerDocument||document)&&q.defaultView||window,v.getSelection&&(v=v.getSelection(),h=t.textContent.length,J=Math.min(g.start,h),g=void 0===\ng.end?J:Math.min(g.end,h),!v.extend&&J>g&&(h=g,g=J,J=h),h=Le(t,J),f=Le(t,g),h&&f&&(1!==v.rangeCount||v.anchorNode!==h.node||v.anchorOffset!==h.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),v.removeAllRanges(),J>g?(v.addRange(q),v.extend(f.node,f.offset)):(q.setEnd(f.node,f.offset),v.addRange(q))))));q=[];for(v=t;v=v.parentNode;)1===v.nodeType&&q.push({element:v,left:v.scrollLeft,top:v.scrollTop});\"function\"===typeof t.focus&&t.focus();for(t=\n0;t<q.length;t++)v=q[t],v.element.scrollLeft=v.left,v.element.scrollTop=v.top}fd=!!kf;lf=kf=null;a.current=c;Z=d;do try{for(t=a;null!==Z;){var K=Z.flags;K&36&&Yi(t,Z.alternate,Z);if(K&128){q=void 0;var Q=Z.ref;if(null!==Q){var L=Z.stateNode;switch(Z.tag){case 5:q=L;break;default:q=L}\"function\"===typeof Q?Q(q):Q.current=q}}Z=Z.nextEffect}}catch(va){if(null===Z)throw Error(y(330));Wi(Z,va);Z=Z.nextEffect}while(null!==Z);Z=null;$f();X=e}else a.current=c;if(xj)xj=!1,yj=a,zj=b;else for(Z=d;null!==Z;)b=\nZ.nextEffect,Z.nextEffect=null,Z.flags&8&&(K=Z,K.sibling=null,K.stateNode=null),Z=b;d=a.pendingLanes;0===d&&(Ti=null);1===d?a===Ej?Dj++:(Dj=0,Ej=a):Dj=0;c=c.stateNode;if(Mf&&\"function\"===typeof Mf.onCommitFiberRoot)try{Mf.onCommitFiberRoot(Lf,c,void 0,64===(c.current.flags&64))}catch(va){}Mj(a,O());if(Qi)throw Qi=!1,a=Ri,Ri=null,a;if(0!==(X&8))return null;ig();return null}\nfunction ek(){for(;null!==Z;){var a=Z.alternate;Jj||null===Ij||(0!==(Z.flags&8)?dc(Z,Ij)&&(Jj=!0):13===Z.tag&&mj(a,Z)&&dc(Z,Ij)&&(Jj=!0));var b=Z.flags;0!==(b&256)&&Xi(a,Z);0===(b&512)||xj||(xj=!0,hg(97,function(){Oj();return null}));Z=Z.nextEffect}}function Oj(){if(90!==zj){var a=97<zj?97:zj;zj=90;return gg(a,fk)}return!1}function $i(a,b){Aj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}function Zi(a,b){Bj.push(b,a);xj||(xj=!0,hg(97,function(){Oj();return null}))}\nfunction fk(){if(null===yj)return!1;var a=yj;yj=null;if(0!==(X&48))throw Error(y(331));var b=X;X|=32;var c=Bj;Bj=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}c=Aj;Aj=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(y(330));Wi(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,h.nextEffect=null,h.flags&8&&(h.sibling=\nnull,h.stateNode=null),h=a;X=b;ig();return!0}function gk(a,b,c){b=Mi(c,b);b=Pi(a,b,1);Ag(a,b);b=Hg();a=Kj(a,1);null!==a&&($c(a,1,b),Mj(a,b))}\nfunction Wi(a,b){if(3===a.tag)gk(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){gk(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d))){a=Mi(b,a);var e=Si(c,a,1);Ag(c,e);e=Hg();c=Kj(c,1);if(null!==c)$c(c,1,e),Mj(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===Ti||!Ti.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}\nfunction Yj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=Hg();a.pingedLanes|=a.suspendedLanes&c;U===a&&(W&c)===c&&(4===V||3===V&&(W&62914560)===W&&500>O()-jj?Qj(a,0):uj|=c);Mj(a,b)}function lj(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===eg()?1:2:(0===Gj&&(Gj=tj),b=Yc(62914560&~Gj),0===b&&(b=4194304)));c=Hg();a=Kj(a,b);null!==a&&($c(a,b,c),Mj(a,c))}var ck;\nck=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||N.current)ug=!0;else if(0!==(c&d))ug=0!==(a.flags&16384)?!0:!1;else{ug=!1;switch(b.tag){case 3:ri(b);sh();break;case 5:gh(b);break;case 1:Ff(b.type)&&Jf(b);break;case 4:eh(b,b.stateNode.containerInfo);break;case 10:d=b.memoizedProps.value;var e=b.type._context;I(mg,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return ti(a,b,c);I(P,P.current&1);b=hi(a,b,c);return null!==\nb?b.sibling:null}I(P,P.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Ai(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);I(P,P.current);if(d)break;else return null;case 23:case 24:return b.lanes=0,mi(a,b,c)}return hi(a,b,c)}else ug=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=Ef(b,M.current);tg(b,c);e=Ch(null,b,d,a,e,c);b.flags|=1;if(\"object\"===\ntypeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(Ff(d)){var f=!0;Jf(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;xg(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&Gg(b,d,g,a);e.updater=Kg;b.stateNode=e;e._reactInternals=b;Og(b,d,a,c);b=qi(null,b,d,!0,f,c)}else b.tag=0,fi(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);\na=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=hk(e);a=lg(e,a);switch(f){case 0:b=li(null,b,e,a,c);break a;case 1:b=pi(null,b,e,a,c);break a;case 11:b=gi(null,b,e,a,c);break a;case 14:b=ii(null,b,e,lg(e.type,a),d,c);break a}throw Error(y(306,e,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),li(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),pi(a,b,d,e,c);case 3:ri(b);d=b.updateQueue;if(null===a||null===d)throw Error(y(282));\nd=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;yg(a,b);Cg(b,d,null,c);d=b.memoizedState.element;if(d===e)sh(),b=hi(a,b,c);else{e=b.stateNode;if(f=e.hydrate)kh=rf(b.stateNode.containerInfo.firstChild),jh=b,f=lh=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=a)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],th.push(f);c=Zg(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else fi(a,b,d,c),sh();b=b.child}return b;case 5:return gh(b),null===a&&\nph(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,nf(d,e)?g=null:null!==f&&nf(d,f)&&(b.flags|=16),oi(a,b),fi(a,b,g,c),b.child;case 6:return null===a&&ph(b),null;case 13:return ti(a,b,c);case 4:return eh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Yg(b,null,d,c):fi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),gi(a,b,d,e,c);case 7:return fi(a,b,b.pendingProps,c),b.child;case 8:return fi(a,b,b.pendingProps.children,\nc),b.child;case 12:return fi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;I(mg,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=He(h,f)?0:(\"function\"===typeof d._calculateChangedBits?d._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!N.current){b=hi(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=\nk.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=zg(-1,c&-c),l.tag=2,Ag(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);sg(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=h;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}fi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,tg(b,c),e=vg(e,\nf.unstable_observedBits),d=d(e),b.flags|=1,fi(a,b,d,c),b.child;case 14:return e=b.type,f=lg(e,b.pendingProps),f=lg(e.type,f),ii(a,b,e,f,d,c);case 15:return ki(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:lg(d,e),null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2),b.tag=1,Ff(d)?(a=!0,Jf(b)):a=!1,tg(b,c),Mg(b,d,e),Og(b,d,e,c),qi(null,b,d,!0,a,c);case 19:return Ai(a,b,c);case 23:return mi(a,b,c);case 24:return mi(a,b,c)}throw Error(y(156,b.tag));\n};function ik(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function nh(a,b,c,d){return new ik(a,b,c,d)}function ji(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction hk(a){if(\"function\"===typeof a)return ji(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Aa)return 11;if(a===Da)return 14}return 2}\nfunction Tg(a,b){var c=a.alternate;null===c?(c=nh(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Vg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)ji(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ua:return Xg(c.children,e,f,b);case Ha:g=8;e|=16;break;case wa:g=8;e|=1;break;case xa:return a=nh(12,c,b,e|8),a.elementType=xa,a.type=xa,a.lanes=f,a;case Ba:return a=nh(13,c,b,e),a.type=Ba,a.elementType=Ba,a.lanes=f,a;case Ca:return a=nh(19,c,b,e),a.elementType=Ca,a.lanes=f,a;case Ia:return vi(c,e,f,b);case Ja:return a=nh(24,c,b,e),a.elementType=Ja,a.lanes=f,a;default:if(\"object\"===\ntypeof a&&null!==a)switch(a.$$typeof){case ya:g=10;break a;case za:g=9;break a;case Aa:g=11;break a;case Da:g=14;break a;case Ea:g=16;d=null;break a;case Fa:g=22;break a}throw Error(y(130,null==a?a:typeof a,\"\"));}b=nh(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Xg(a,b,c,d){a=nh(7,a,d,b);a.lanes=c;return a}function vi(a,b,c,d){a=nh(23,a,d,b);a.elementType=Ia;a.lanes=c;return a}function Ug(a,b,c){a=nh(6,a,null,b);a.lanes=c;return a}\nfunction Wg(a,b,c){b=nh(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction jk(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=null;this.callbackPriority=0;this.eventTimes=Zc(0);this.expirationTimes=Zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=Zc(0);this.mutableSourceEagerHydrationData=null}\nfunction kk(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:ta,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction lk(a,b,c,d){var e=b.current,f=Hg(),g=Ig(e);a:if(c){c=c._reactInternals;b:{if(Zb(c)!==c||1!==c.tag)throw Error(y(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(Ff(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(y(171));}if(1===c.tag){var k=c.type;if(Ff(k)){c=If(c,k,h);break a}}c=h}else c=Cf;null===b.context?b.context=c:b.pendingContext=c;b=zg(f,g);b.payload={element:a};d=void 0===d?null:d;null!==\nd&&(b.callback=d);Ag(e,b);Jg(e,g,f);return g}function mk(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function nk(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function ok(a,b){nk(a,b);(a=a.alternate)&&nk(a,b)}function pk(){return null}\nfunction qk(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new jk(a,b,null!=c&&!0===c.hydrate);b=nh(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;xg(b);a[ff]=c.current;cf(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}\nqk.prototype.render=function(a){lk(a,this._internalRoot,null,null)};qk.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;lk(null,a,null,function(){b[ff]=null})};function rk(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction sk(a,b){b||(b=a?9===a.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new qk(a,0,b?{hydrate:!0}:void 0)}\nfunction tk(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=mk(g);h.call(a)}}lk(b,g,a,e)}else{f=c._reactRootContainer=sk(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=mk(g);k.call(a)}}Xj(function(){lk(b,g,a,e)})}return mk(g)}ec=function(a){if(13===a.tag){var b=Hg();Jg(a,4,b);ok(a,4)}};fc=function(a){if(13===a.tag){var b=Hg();Jg(a,67108864,b);ok(a,67108864)}};\ngc=function(a){if(13===a.tag){var b=Hg(),c=Ig(a);Jg(a,c,b);ok(a,c)}};hc=function(a,b){return b()};\nyb=function(a,b,c){switch(b){case \"input\":ab(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(y(90));Wa(d);ab(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Wj;\nHb=function(a,b,c,d,e){var f=X;X|=4;try{return gg(98,a.bind(null,b,c,d,e))}finally{X=f,0===X&&(wj(),ig())}};Ib=function(){0===(X&49)&&(Vj(),Oj())};Jb=function(a,b){var c=X;X|=2;try{return a(b)}finally{X=c,0===X&&(wj(),ig())}};function uk(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!rk(b))throw Error(y(200));return kk(a,b,null,c)}var vk={Events:[Cb,ue,Db,Eb,Fb,Oj,{current:!1}]},wk={findFiberByHostInstance:wc,bundleType:0,version:\"17.0.2\",rendererPackageName:\"react-dom\"};\nvar xk={bundleType:wk.bundleType,version:wk.version,rendererPackageName:wk.rendererPackageName,rendererConfig:wk.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ra.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=cc(a);return null===a?null:a.stateNode},findFiberByHostInstance:wk.findFiberByHostInstance||\npk,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var yk=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!yk.isDisabled&&yk.supportsFiber)try{Lf=yk.inject(xk),Mf=yk}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;exports.createPortal=uk;\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(y(188));throw Error(y(268,Object.keys(a)));}a=cc(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a,b){var c=X;if(0!==(c&48))return a(b);X|=1;try{if(a)return gg(99,a.bind(null,b))}finally{X=c,ig()}};exports.hydrate=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!0,c)};\nexports.render=function(a,b,c){if(!rk(b))throw Error(y(200));return tk(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!rk(a))throw Error(y(40));return a._reactRootContainer?(Xj(function(){tk(null,null,a,!1,function(){a._reactRootContainer=null;a[ff]=null})}),!0):!1};exports.unstable_batchedUpdates=Wj;exports.unstable_createPortal=function(a,b){return uk(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!rk(c))throw Error(y(200));if(null==a||void 0===a._reactInternals)throw Error(y(38));return tk(a,b,c,!1,d)};exports.version=\"17.0.2\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar _css = _interopDefault(require('@emotion/css'));\nvar _extends = _interopDefault(require('@babel/runtime/helpers/extends'));\nvar _objectWithoutPropertiesLoose = _interopDefault(require('@babel/runtime/helpers/objectWithoutPropertiesLoose'));\nvar core = require('@emotion/core');\nvar react = require('react');\n\nfunction getClientPosition(e) {\n  var touches = e.touches;\n\n  if (touches && touches.length) {\n    var finger = touches[0];\n    return {\n      x: finger.clientX,\n      y: finger.clientY\n    };\n  }\n\n  return {\n    x: e.clientX,\n    y: e.clientY\n  };\n}\n\nvar track = {\n  position: 'relative',\n  display: 'inline-block',\n  backgroundColor: '#ddd',\n  borderRadius: 5,\n  userSelect: 'none',\n  boxSizing: 'border-box'\n};\nvar active = {\n  position: 'absolute',\n  backgroundColor: '#5e72e4',\n  borderRadius: 5,\n  userSelect: 'none',\n  boxSizing: 'border-box'\n};\nvar thumb = {\n  position: 'relative',\n  display: 'block',\n  content: '\"\"',\n  width: 18,\n  height: 18,\n  backgroundColor: '#fff',\n  borderRadius: '50%',\n  boxShadow: '0 1px 1px rgba(0,0,0,.5)',\n  userSelect: 'none',\n  cursor: 'pointer',\n  boxSizing: 'border-box'\n};\nvar styles = {\n  x: {\n    track: _extends({}, track, {\n      width: 200,\n      height: 10\n    }),\n    active: _extends({}, active, {\n      top: 0,\n      height: '100%'\n    }),\n    thumb: _extends({}, thumb)\n  },\n  y: {\n    track: _extends({}, track, {\n      width: 10,\n      height: 200\n    }),\n    active: _extends({}, active, {\n      left: 0,\n      width: '100%'\n    }),\n    thumb: _extends({}, thumb)\n  },\n  xy: {\n    track: {\n      position: 'relative',\n      overflow: 'hidden',\n      width: 200,\n      height: 200,\n      backgroundColor: '#5e72e4',\n      borderRadius: 0\n    },\n    active: {},\n    thumb: _extends({}, thumb)\n  },\n  disabled: {\n    opacity: 0.5\n  }\n};\n\nvar Slider = function Slider(_ref) {\n  var disabled = _ref.disabled,\n      axis = _ref.axis,\n      x = _ref.x,\n      y = _ref.y,\n      xmin = _ref.xmin,\n      xmax = _ref.xmax,\n      ymin = _ref.ymin,\n      ymax = _ref.ymax,\n      xstep = _ref.xstep,\n      ystep = _ref.ystep,\n      onChange = _ref.onChange,\n      onDragStart = _ref.onDragStart,\n      onDragEnd = _ref.onDragEnd,\n      xreverse = _ref.xreverse,\n      yreverse = _ref.yreverse,\n      customStyles = _ref.styles,\n      props = _objectWithoutPropertiesLoose(_ref, [\"disabled\", \"axis\", \"x\", \"y\", \"xmin\", \"xmax\", \"ymin\", \"ymax\", \"xstep\", \"ystep\", \"onChange\", \"onDragStart\", \"onDragEnd\", \"xreverse\", \"yreverse\", \"styles\"]);\n\n  var container = react.useRef(null);\n  var handle = react.useRef(null);\n  var start = react.useRef({});\n  var offset = react.useRef({});\n\n  function getPosition() {\n    var top = (y - ymin) / (ymax - ymin) * 100;\n    var left = (x - xmin) / (xmax - xmin) * 100;\n    if (top > 100) top = 100;\n    if (top < 0) top = 0;\n    if (axis === 'x') top = 0;\n    if (left > 100) left = 100;\n    if (left < 0) left = 0;\n    if (axis === 'y') left = 0;\n    return {\n      top: top,\n      left: left\n    };\n  }\n\n  function change(_ref2) {\n    var top = _ref2.top,\n        left = _ref2.left;\n    if (!onChange) return;\n\n    var _container$current$ge = container.current.getBoundingClientRect(),\n        width = _container$current$ge.width,\n        height = _container$current$ge.height;\n\n    var dx = 0;\n    var dy = 0;\n    if (left < 0) left = 0;\n    if (left > width) left = width;\n    if (top < 0) top = 0;\n    if (top > height) top = height;\n\n    if (axis === 'x' || axis === 'xy') {\n      dx = left / width * (xmax - xmin);\n    }\n\n    if (axis === 'y' || axis === 'xy') {\n      dy = top / height * (ymax - ymin);\n    }\n\n    var x = (dx !== 0 ? parseInt(dx / xstep, 10) * xstep : 0) + xmin;\n    var y = (dy !== 0 ? parseInt(dy / ystep, 10) * ystep : 0) + ymin;\n    onChange({\n      x: xreverse ? xmax - x + xmin : x,\n      y: yreverse ? ymax - y + ymin : y\n    });\n  }\n\n  function handleMouseDown(e) {\n    if (disabled) return;\n    e.preventDefault();\n    e.stopPropagation();\n    e.nativeEvent.stopImmediatePropagation();\n    var dom = handle.current;\n    var clientPos = getClientPosition(e);\n    start.current = {\n      x: dom.offsetLeft,\n      y: dom.offsetTop\n    };\n    offset.current = {\n      x: clientPos.x,\n      y: clientPos.y\n    };\n    document.addEventListener('mousemove', handleDrag);\n    document.addEventListener('mouseup', handleDragEnd);\n    document.addEventListener('touchmove', handleDrag, {\n      passive: false\n    });\n    document.addEventListener('touchend', handleDragEnd);\n    document.addEventListener('touchcancel', handleDragEnd);\n\n    if (onDragStart) {\n      onDragStart(e);\n    }\n  }\n\n  function getPos(e) {\n    var clientPos = getClientPosition(e);\n    var left = clientPos.x + start.current.x - offset.current.x;\n    var top = clientPos.y + start.current.y - offset.current.y;\n    return {\n      left: left,\n      top: top\n    };\n  }\n\n  function handleDrag(e) {\n    if (disabled) return;\n    e.preventDefault();\n    change(getPos(e));\n  }\n\n  function handleDragEnd(e) {\n    if (disabled) return;\n    e.preventDefault();\n    document.removeEventListener('mousemove', handleDrag);\n    document.removeEventListener('mouseup', handleDragEnd);\n    document.removeEventListener('touchmove', handleDrag, {\n      passive: false\n    });\n    document.removeEventListener('touchend', handleDragEnd);\n    document.removeEventListener('touchcancel', handleDragEnd);\n\n    if (onDragEnd) {\n      onDragEnd(e);\n    }\n  }\n\n  function handleTrackMouseDown(e) {\n    if (disabled) return;\n    e.preventDefault();\n    var clientPos = getClientPosition(e);\n    var rect = container.current.getBoundingClientRect();\n    start.current = {\n      x: clientPos.x - rect.left,\n      y: clientPos.y - rect.top\n    };\n    offset.current = {\n      x: clientPos.x,\n      y: clientPos.y\n    };\n    document.addEventListener('mousemove', handleDrag);\n    document.addEventListener('mouseup', handleDragEnd);\n    document.addEventListener('touchmove', handleDrag, {\n      passive: false\n    });\n    document.addEventListener('touchend', handleDragEnd);\n    document.addEventListener('touchcancel', handleDragEnd);\n    change({\n      left: clientPos.x - rect.left,\n      top: clientPos.y - rect.top\n    });\n\n    if (onDragStart) {\n      onDragStart(e);\n    }\n  }\n\n  var pos = getPosition();\n  var valueStyle = {};\n  if (axis === 'x') valueStyle.width = pos.left + '%';\n  if (axis === 'y') valueStyle.height = pos.top + '%';\n  if (xreverse) valueStyle.left = 100 - pos.left + '%';\n  if (yreverse) valueStyle.top = 100 - pos.top + '%';\n  var handleStyle = {\n    position: 'absolute',\n    transform: 'translate(-50%, -50%)',\n    left: xreverse ? 100 - pos.left + '%' : pos.left + '%',\n    top: yreverse ? 100 - pos.top + '%' : pos.top + '%'\n  };\n\n  if (axis === 'x') {\n    handleStyle.top = '50%';\n  } else if (axis === 'y') {\n    handleStyle.left = '50%';\n  }\n\n  var styles$1 = {\n    track: _extends({}, styles[axis].track, {}, customStyles.track),\n    active: _extends({}, styles[axis].active, {}, customStyles.active),\n    thumb: _extends({}, styles[axis].thumb, {}, customStyles.thumb),\n    disabled: _extends({}, styles.disabled, {}, customStyles.disabled)\n  };\n  return core.jsx(\"div\", _extends({}, props, {\n    ref: container,\n    css: /*#__PURE__*/_css([styles$1.track, disabled && styles$1.disabled], \";label:Slider;\" + (process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\")),\n    onTouchStart: handleTrackMouseDown,\n    onMouseDown: handleTrackMouseDown\n  }), core.jsx(\"div\", {\n    css: styles$1.active,\n    style: valueStyle\n  }), core.jsx(\"div\", {\n    ref: handle,\n    style: handleStyle,\n    onTouchStart: handleMouseDown,\n    onMouseDown: handleMouseDown,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      e.nativeEvent.stopImmediatePropagation();\n    }\n  }, core.jsx(\"div\", {\n    css: styles$1.thumb\n  })));\n};\n\nSlider.defaultProps = {\n  disabled: false,\n  axis: 'x',\n  x: 50,\n  xmin: 0,\n  xmax: 100,\n  y: 50,\n  ymin: 0,\n  ymax: 100,\n  xstep: 1,\n  ystep: 1,\n  xreverse: false,\n  yreverse: false,\n  styles: {}\n};\n\nmodule.exports = Slider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-input-slider/dist/index.cjs.js\n// module id = 29\n// module chunks = 0","/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 30\n// module chunks = 0","/** @license React v0.20.2\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f,g,h,k;if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}\nif(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var t=null,u=null,w=function(){if(null!==t)try{var a=exports.unstable_now();t(!0,a);t=null}catch(b){throw setTimeout(w,0),b;}};f=function(a){null!==t?setTimeout(f,0,a):(t=a,setTimeout(w,0))};g=function(a,b){u=setTimeout(a,b)};h=function(){clearTimeout(u)};exports.unstable_shouldYield=function(){return!1};k=exports.unstable_forceFrameRate=function(){}}else{var x=window.setTimeout,y=window.clearTimeout;if(\"undefined\"!==typeof console){var z=\nwindow.cancelAnimationFrame;\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\");\"function\"!==typeof z&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\")}var A=!1,B=null,C=-1,D=5,E=0;exports.unstable_shouldYield=function(){return exports.unstable_now()>=\nE};k=function(){};exports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):D=0<a?Math.floor(1E3/a):5};var F=new MessageChannel,G=F.port2;F.port1.onmessage=function(){if(null!==B){var a=exports.unstable_now();E=a+D;try{B(!0,a)?G.postMessage(null):(A=!1,B=null)}catch(b){throw G.postMessage(null),b;}}else A=!1};f=function(a){B=a;A||(A=!0,G.postMessage(null))};g=function(a,b){C=\nx(function(){a(exports.unstable_now())},b)};h=function(){y(C);C=-1}}function H(a,b){var c=a.length;a.push(b);a:for(;;){var d=c-1>>>1,e=a[d];if(void 0!==e&&0<I(e,b))a[d]=b,a[c]=e,c=d;else break a}}function J(a){a=a[0];return void 0===a?null:a}\nfunction K(a){var b=a[0];if(void 0!==b){var c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length;d<e;){var m=2*(d+1)-1,n=a[m],v=m+1,r=a[v];if(void 0!==n&&0>I(n,c))void 0!==r&&0>I(r,n)?(a[d]=r,a[v]=c,d=v):(a[d]=n,a[m]=c,d=m);else if(void 0!==r&&0>I(r,c))a[d]=r,a[v]=c,d=v;else break a}}return b}return null}function I(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}var L=[],M=[],N=1,O=null,P=3,Q=!1,R=!1,S=!1;\nfunction T(a){for(var b=J(M);null!==b;){if(null===b.callback)K(M);else if(b.startTime<=a)K(M),b.sortIndex=b.expirationTime,H(L,b);else break;b=J(M)}}function U(a){S=!1;T(a);if(!R)if(null!==J(L))R=!0,f(V);else{var b=J(M);null!==b&&g(U,b.startTime-a)}}\nfunction V(a,b){R=!1;S&&(S=!1,h());Q=!0;var c=P;try{T(b);for(O=J(L);null!==O&&(!(O.expirationTime>b)||a&&!exports.unstable_shouldYield());){var d=O.callback;if(\"function\"===typeof d){O.callback=null;P=O.priorityLevel;var e=d(O.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?O.callback=e:O===J(L)&&K(L);T(b)}else K(L);O=J(L)}if(null!==O)var m=!0;else{var n=J(M);null!==n&&g(U,n.startTime-b);m=!1}return m}finally{O=null,P=c,Q=!1}}var W=k;exports.unstable_IdlePriority=5;\nexports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){R||Q||(R=!0,f(V))};exports.unstable_getCurrentPriorityLevel=function(){return P};exports.unstable_getFirstCallbackNode=function(){return J(L)};\nexports.unstable_next=function(a){switch(P){case 1:case 2:case 3:var b=3;break;default:b=P}var c=P;P=b;try{return a()}finally{P=c}};exports.unstable_pauseExecution=function(){};exports.unstable_requestPaint=W;exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=P;P=a;try{return b()}finally{P=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:N++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,H(M,a),null===J(L)&&a===J(M)&&(S?h():S=!0,g(U,c-d))):(a.sortIndex=e,H(L,a),R||Q||(R=!0,f(V)));return a};\nexports.unstable_wrapCallback=function(a){var b=P;return function(){var c=P;P=b;try{return a.apply(this,arguments)}finally{P=c}}};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/cjs/scheduler.production.min.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/scheduler/index.js\n// module id = 32\n// module chunks = 0","module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three-orbit-controls/index.js\n// module id = 33\n// module chunks = 0","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/three.js\n// module id = 34\n// module chunks = 0"],"sourceRoot":""}